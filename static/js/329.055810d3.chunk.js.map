{"version":3,"file":"static/js/329.055810d3.chunk.js","mappings":"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","sources":["Components/BootstrapTooltip.tsx","Components/Character/CharacterDropdownButton.tsx","Conditional/ConditionalSelector.tsx","Components/ConditionalDisplay.tsx","Components/CustomNumberInput.tsx","Components/DocumentDisplay.tsx","Components/FieldDisplay.tsx","DataContext.tsx","PageWeapon/WeaponDisplayCard.tsx","../node_modules/@mui/icons-material/esm/SwapHoriz.js"],"sourcesContent":["import { styled, Tooltip, tooltipClasses, TooltipProps } from \"@mui/material\";\n\nconst BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} arrow classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.arrow}`]: {\n    color: theme.palette.common.black,\n  },\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.black,\n  },\n}));\nexport default BootstrapTooltip","import { BusinessCenter, Replay } from \"@mui/icons-material\";\nimport { Divider, ListItemIcon, MenuItem, Typography } from \"@mui/material\";\nimport { useContext } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport { DatabaseContext } from \"../../Database/Database\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport { CharacterKey } from \"../../Types/consts\";\nimport DropdownButton, { DropdownButtonProps } from \"../DropdownMenu/DropdownButton\";\nimport ThumbSide from \"./ThumbSide\";\n\nexport type CharacterDropdownButtonProps = Omit<DropdownButtonProps, \"title\" | \"onChange\" | \"children\"> & {\n  value: CharacterKey | \"\"\n  onChange: (ck: CharacterKey | \"\") => void\n  filter?: (cs: CharacterSheet, ck: CharacterKey) => boolean\n  inventory?: boolean\n  noUnselect?: boolean,\n  unSelectText?: Displayable,\n  unSelectIcon?: Displayable,\n}\n\nexport default function CharacterDropdownButton({ value, onChange, unSelectText, unSelectIcon, inventory = false, noUnselect = false, filter = () => true, ...props }: CharacterDropdownButtonProps) {\n  const { t } = useTranslation(\"ui\");\n  const database = useContext(DatabaseContext)\n  const characterSheets = usePromise(CharacterSheet.getAll, [])\n  const characterSheet = usePromise(CharacterSheet.get(value), [value])\n  const characterKeys = database._getCharKeys().filter(ck => characterSheets?.[ck] && filter(characterSheets[ck], ck)).sort()\n  return <DropdownButton\n    {...props}\n    title={characterSheet?.name ?? (inventory ? t`inventory` : (unSelectText ?? t`unselect`))}\n    color={value ? \"success\" : \"primary\"}\n    startIcon={characterSheet?.thumbImg ? <ThumbSide src={characterSheet.thumbImgSide} /> : (inventory ? <BusinessCenter /> : (unSelectIcon ?? <Replay />))}>\n    {!noUnselect && (inventory ? <MenuItem onClick={() => onChange(\"\")} selected={value === \"\"} disabled={value === \"\"}>\n      <ListItemIcon>\n        <BusinessCenter />\n      </ListItemIcon>\n      <Typography variant=\"inherit\" noWrap>\n        {t`inventory`}\n      </Typography>\n    </MenuItem> : <MenuItem onClick={() => onChange(\"\")} selected={value === \"\"} disabled={value === \"\"}>\n      <ListItemIcon>\n        <Replay />\n      </ListItemIcon>\n      <Typography variant=\"inherit\" noWrap>\n        {t`unselect`}\n      </Typography>\n    </MenuItem>)}\n    {!noUnselect && <Divider key=\"div\" />}\n    {!!characterSheets && CharacterMenuItemArray(characterSheets, characterKeys, onChange, value)}\n  </DropdownButton >\n}\n\n// Returning an array instead of Fragment because MUI Menu doesn't like fragments.\nexport function CharacterMenuItemArray(characterSheets: StrictDict<CharacterKey, CharacterSheet>, characterKeys: CharacterKey[], onChange: (ck: CharacterKey) => void, selectedCharacterKey: CharacterKey | \"\" = \"\") {\n  return characterKeys.map(characterKey =>\n    <MenuItem onClick={() => onChange(characterKey)} key={characterKey} selected={selectedCharacterKey === characterKey} disabled={selectedCharacterKey === characterKey} >\n      <ListItemIcon>\n        <ThumbSide src={characterSheets[characterKey]?.thumbImgSide} />\n      </ListItemIcon>\n      <Typography variant=\"inherit\" noWrap>\n        {characterSheets?.[characterKey]?.name}\n      </Typography>\n    </MenuItem>)\n}\n","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\nimport { Button, Divider, MenuItem } from '@mui/material';\nimport React, { useCallback, useContext } from 'react';\nimport DropdownButton from '../Components/DropdownMenu/DropdownButton';\nimport SqBadge from '../Components/SqBadge';\nimport { DataContext } from '../DataContext';\nimport IConditional from '../Types/IConditional_WR';\nimport { deepClone, layeredAssignment } from '../Util/Util';\n\nexport default function ConditionalSelector({ conditional, conditionalValue, disabled = false, }:\n  { conditional: IConditional, conditionalValue?: string, disabled?: boolean }) {\n  const { character, characterDispatch } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    layeredAssignment(conditionalValues, conditional.path, v)\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  if (Object.keys(conditional.states).length === 1) {\n    const [stateKey, st] = Object.entries(conditional.states)[0]\n    const badge = st.name && <SqBadge color={\"success\"}>{st.name}</SqBadge>\n    return <Button fullWidth size=\"small\" onClick={() => setConditional(conditionalValue ? undefined : stateKey)} disabled={disabled} startIcon={conditionalValue ? <CheckBox /> : <CheckBoxOutlineBlank />}>\n      {conditional.name} {badge}\n    </Button>\n  } else {//complex conditional\n    const state = conditionalValue ? conditional.states[conditionalValue] : undefined\n    const badge = state?.name && <SqBadge color={state ? \"success\" : \"secondary\"}>{state ? state.name : \"Not Active\"}</SqBadge>\n    return <DropdownButton fullWidth size=\"small\" title={<span>{conditional.name} {badge}</span>} disabled={disabled}>\n      <MenuItem onClick={() => setConditional()} selected={!state} disabled={!state}>\n        <span>Not Active</span>\n      </MenuItem>\n      <Divider />\n      {Object.entries(conditional.states).map(([stateKey, st]) =>\n        <MenuItem key={stateKey} onClick={() => setConditional(stateKey)} selected={conditionalValue === stateKey} disabled={conditionalValue === stateKey} >{st.name}</MenuItem>)}\n    </DropdownButton>\n  }\n}\n","import { Box, CardContent, CardHeader, Divider, ListItem } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport ConditionalSelector from \"../Conditional/ConditionalSelector\"\nimport { DataContext, dataContextObj } from \"../DataContext\"\nimport IConditional from \"../Types/IConditional_WR\"\nimport { evalIfFunc } from \"../Util/Util\"\nimport CardDark from \"./Card/CardDark\"\nimport FieldDisplay, { FieldDisplayList } from \"./FieldDisplay\"\nimport { data as dataNode } from '../Formula/utils'\nimport { Data } from \"../Formula/type\"\n\ntype ConditionalDisplayProps = {\n  conditional: IConditional,\n  hideHeader?: boolean,\n  hideDesc?: boolean,\n  fieldContext?: dataContextObj\n}\n\nexport default function ConditionalDisplay({ conditional, hideHeader = false, hideDesc = false, fieldContext }: ConditionalDisplayProps) {\n  const dataContext = useContext(DataContext)\n  const { data } = dataContext\n  // TODO: as Data\n  const canShow = conditional.canShow ? !(fieldContext ? data.get(dataNode(conditional.canShow, { target: fieldContext.data.data[0] } as Data)).isEmpty : data.get(conditional.canShow).isEmpty) : true\n  if (!canShow) return null\n  const condVal = data.get(conditional.value).value\n\n  const description = !hideDesc && evalIfFunc(conditional.description, data)\n  let { icon, title, action } = conditional.header ?? {}\n  icon = evalIfFunc(icon, data)\n  const fields = condVal && conditional.states[condVal]?.fields\n\n  return <CardDark>\n    {!hideHeader && conditional.header && <CardHeader avatar={icon} title={title} action={action} titleTypographyProps={{ variant: \"subtitle2\" }} />}\n    {!hideHeader && conditional.header && <Divider />}\n    {!!conditional.name && <CardContent>\n      {description && <Box mb={1}>{description}</Box>}\n      <ConditionalSelector\n        conditional={conditional}\n        conditionalValue={condVal} />\n    </CardContent>}\n    {fields &&\n      <FieldDisplayList sx={{ m: 0 }}>\n        {fields.map((field, i) => <FieldDisplay key={i} field={field} fieldContext={fieldContext} component={ListItem} />)}\n      </FieldDisplayList>\n    }\n  </CardDark>\n}\n","import { Button, ButtonProps, InputBase, InputProps, styled } from '@mui/material'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\ntype props = Omit<InputProps, \"onChange\"> & {\n  value?: number | undefined,\n  onChange: (newValue: number | undefined) => void,\n  disabled?: boolean\n  float?: boolean,\n  allowEmpty?: boolean,\n}\n\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\n  backgroundColor: theme.palette.primary.main,\n  transition: \"all 0.5s ease\",\n  \"&:hover\": {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  \"&.Mui-focused\": {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  \"&.Mui-disabled\": {\n    backgroundColor: theme.palette.primary.dark,\n  },\n}))\n\nconst Wrapper = styled(Button)(({ theme }) => ({\n  backgroundColor: theme.palette.primary.main,\n  padding: 0,\n  overflow: \"hidden\",\n  \"div\": {\n    width: \"100%\",\n    height: \"100%\",\n  },\n}))\n\n// wrap the Input with this when using the input in a buttongroup\nexport function CustomNumberInputButtonGroupWrapper({ children, disableRipple, disableFocusRipple, disableTouchRipple, ...props }: ButtonProps) {\n  return <Wrapper disableRipple disableFocusRipple disableTouchRipple {...props}>{children}</Wrapper>\n}\n\nexport default function CustomNumberInput({ value = 0, onChange, disabled = false, float = false, ...props }: props) {\n  const [number, setNumber] = useState(value)\n  const [focused, setFocus] = useState(false)\n  const parseFunc = useMemo(() => float ? parseFloat : parseInt, [float],)\n  const onBlur = useCallback(\n    () => {\n      onChange(number)\n      setFocus(false)\n    },\n    [onChange, number, setFocus],\n  )\n  const onFocus = useCallback(\n    () => {\n      setFocus(true)\n    },\n    [setFocus],\n  )\n  useEffect(() => setNumber(value), [value, setNumber]) // update value on value change\n  const onInputChange = useCallback(e => setNumber(parseFunc(e.target.value) || 0), [setNumber, parseFunc],)\n  const onKeyDOwn = useCallback(e => e.key === \"Enter\" && onBlur(), [onBlur],)\n  return <StyledInputBase\n    value={(focused && !number) ? \"\" : number}\n    aria-label=\"custom-input\"\n    type=\"number\"\n    onChange={onInputChange}\n    onBlur={onBlur}\n    onFocus={onFocus}\n    disabled={disabled}\n    onKeyDown={onKeyDOwn}\n    {...props}\n  />\n}","import { Box, ListItem } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../DataContext\"\nimport { DocumentSection } from \"../Types/sheet\"\nimport { evalIfFunc } from \"../Util/Util\"\nimport ConditionalDisplay from \"./ConditionalDisplay\"\nimport FieldDisplay, { FieldDisplayList } from \"./FieldDisplay\"\n\nexport default function DocumentDisplay({ sections }: { sections: DocumentSection[] }) {\n  const { data } = useContext(DataContext)\n  const sectionsDisplay = sections?.map((section, i) => {\n    if (section.canShow && !section.canShow(data)) return null\n    const talentText = evalIfFunc(section.text, data)\n    const fields = section.fields ?? []\n    return <Box key={\"section\" + i} display=\"flex\" flexDirection=\"column\" gap={1}>\n      {talentText && <div>{talentText}</div>}\n      {fields.length > 0 && <FieldDisplayList>\n        {fields?.map?.((field, i) => <FieldDisplay key={i} field={field} component={ListItem} />)}\n      </FieldDisplayList>}\n      {!!section.conditional && <ConditionalDisplay conditional={section.conditional} hideDesc />}\n    </Box>\n  }).filter(s => s)\n  if (!sectionsDisplay.length) return null\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>{sectionsDisplay}</Box>\n}\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Box, List, styled, Typography } from \"@mui/material\";\nimport React, { useContext, useMemo } from 'react';\nimport { DataContext, dataContextObj } from \"../DataContext\";\nimport { NodeDisplay } from \"../Formula/api\";\nimport KeyMap, { valueString } from \"../KeyMap\";\nimport { IBasicFieldDisplay, IFieldDisplay } from \"../Types/IFieldDisplay_WR\";\nimport { evalIfFunc } from \"../Util/Util\";\nimport BootstrapTooltip from \"./BootstrapTooltip\";\nimport ColorText from \"./ColoredText\";\nimport StatIcon from \"./StatIcon\";\nimport { data as dataNode } from '../Formula/utils'\nimport { Data } from \"../Formula/type\";\n\nexport default function FieldDisplay({ field, fieldContext, component }: { field: IFieldDisplay, fieldContext?: dataContextObj, component?: React.ElementType }) {\n  const { data, oldData } = useContext(DataContext)\n  const canShow = useMemo(() => field?.canShow?.(data) ?? true, [field, data])\n  if (!canShow) return null\n  if (\"node\" in field) {\n    // TODO: remove as Data\n    const node = fieldContext ? data.get(dataNode(field.node, { target: fieldContext.data.data[0] } as Data)) : data.get(field.node)\n    if (node.isEmpty) return null\n    if (oldData) {\n      const oldNode = fieldContext ? oldData.get(dataNode(field.node, { target: fieldContext.oldData!.data[0] } as Data)) : oldData.get(field.node)\n      const oldValue = oldNode.isEmpty ? 0 : oldNode.value\n      return <NodeFieldDisplay node={node} oldValue={oldValue} suffix={field.textSuffix} component={component} />\n    }\n    else return <NodeFieldDisplay node={node} suffix={field.textSuffix} component={component} />\n  }\n  return <BasicFieldDisplay field={field} component={component} />\n}\n\nfunction BasicFieldDisplay({ field, component }: { field: IBasicFieldDisplay, component?: React.ElementType }) {\n  const { data } = useContext(DataContext)\n  const v = evalIfFunc(field.value, data)\n  const variant = evalIfFunc(field.variant, data)\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\" }} component={component} >\n    <ColorText color={variant}><b>{field.text}</b></ColorText>\n    <Typography >{typeof v === \"number\" ? v.toFixed?.(field.fixed) : v}{field.unit}</Typography>\n  </Box>\n}\n\nexport function NodeFieldDisplay({ node, oldValue, suffix, component }: { node: NodeDisplay, oldValue?: number, suffix?: Displayable, component?: React.ElementType }) {\n  if (node.isEmpty) return null\n\n  suffix = suffix && <span> {suffix}</span>\n  const fieldText = node.key ? KeyMap.get(node.key) : \"\"\n  const fieldFormulaText = node.formula\n  let fieldVal = \"\" as Displayable\n  if (oldValue) {\n    const diff = node.value - oldValue\n    fieldVal = <span>{valueString(oldValue, node.unit)}{diff ? <ColorText color={diff > 0 ? \"success\" : \"error\"}> {diff > 0 ? \"+\" : \"\"}{valueString(diff, node.unit)}</ColorText> : \"\"}</span>\n  } else fieldVal = valueString(node.value, node.unit)\n  const formulaTextOverlay = !!node.formula && <BootstrapTooltip placement=\"top\" title={<Typography>{fieldFormulaText}</Typography>}>\n    <Box component=\"span\" sx={{ cursor: \"help\", ml: 1 }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\n  </BootstrapTooltip>\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\" }} component={component} >\n    <ColorText color={node.variant}>{node.key && (<span>{StatIcon[node.key]} </span>)}<b>{fieldText}</b>{suffix}{formulaTextOverlay}</ColorText>\n    <Typography >{fieldVal}</Typography>\n  </Box>\n}\n\nexport const FieldDisplayList = styled(List)(({ theme }) => ({\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n  margin: 0,\n  '> .MuiListItem-root:nth-of-type(even)': {\n    backgroundColor: theme.palette.contentDark.main\n  },\n  '> .MuiListItem-root:nth-of-type(odd)': {\n    backgroundColor: theme.palette.contentDarker.main\n  },\n}));\n","import { createContext } from \"react\"\nimport CharacterSheet from \"./Data/Characters/CharacterSheet\"\nimport { UIData } from \"./Formula/uiData\"\nimport { ICachedCharacter } from \"./Types/character_WR\"\nimport { CharacterKey } from \"./Types/consts\"\nimport { ICachedWeapon } from \"./Types/weapon_WR\"\nimport WeaponSheet from \"./Data/Weapons/WeaponSheet\"\nexport type TeamData = Partial<Record<CharacterKey, {\n  target: UIData\n  buffs: Dict<CharacterKey, UIData>\n  character: ICachedCharacter\n  weapon: ICachedWeapon\n  characterSheet: CharacterSheet\n  weaponSheet: WeaponSheet\n}>>\nexport type dataContextObj = {\n  character: ICachedCharacter\n  characterSheet: CharacterSheet\n  data: UIData\n  oldData?: UIData\n  mainStatAssumptionLevel: number\n  teamData: TeamData\n  characterDispatch: (_: any) => void\n}\n\n// If using this context without a Provider, then stuff will crash...\n// In theory, none of the components that uses this context should work without a provider...\nexport const DataContext = createContext({} as dataContextObj)\n","import { Lock, LockOpen, SwapHoriz } from \"@mui/icons-material\"\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, ListItem, MenuItem, Typography } from \"@mui/material\"\nimport { useCallback, useContext, useMemo, useState } from \"react\"\nimport Assets from \"../Assets/Assets\"\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\nimport CardDark from \"../Components/Card/CardDark\"\nimport CardLight from \"../Components/Card/CardLight\"\nimport CharacterDropdownButton from \"../Components/Character/CharacterDropdownButton\"\nimport CloseButton from \"../Components/CloseButton\"\nimport ColorText from \"../Components/ColoredText\"\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../Components/CustomNumberInput\"\nimport DocumentDisplay from \"../Components/DocumentDisplay\"\nimport DropdownButton from \"../Components/DropdownMenu/DropdownButton\"\nimport { FieldDisplayList, NodeFieldDisplay } from \"../Components/FieldDisplay\"\nimport ImgIcon from \"../Components/Image/ImgIcon\"\nimport ModalWrapper from \"../Components/ModalWrapper\"\nimport SqBadge from \"../Components/SqBadge\"\nimport { Stars } from \"../Components/StarDisplay\"\nimport WeaponSelectionModal from \"../Components/Weapon/WeaponSelectionModal\"\nimport { ambiguousLevel, ascensionMaxLevel, milestoneLevels } from \"../Data/LevelData\"\nimport { database as localDatabase, DatabaseContext } from \"../Database/Database\"\nimport { uiInput as input } from \"../Formula\"\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\nimport usePromise from \"../ReactHooks/usePromise\"\nimport useWeapon from \"../ReactHooks/useWeapon\"\nimport { CharacterKey } from \"../Types/consts\"\nimport { ICachedWeapon } from \"../Types/weapon\"\nimport { clamp } from \"../Util/Util\"\nimport WeaponCard from \"./WeaponCard\"\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\nimport { DataContext } from \"../DataContext\"\n\ntype WeaponStatsEditorCardProps = {\n  weaponId: string\n  footer?: boolean\n  onClose?: () => void\n}\nexport default function WeaponDisplayCard({\n  weaponId: propWeaponId,\n  footer = false,\n  onClose\n}: WeaponStatsEditorCardProps) {\n  const { data } = useContext(DataContext)\n\n  const database = useContext(DatabaseContext)\n  const weapon = useWeapon(propWeaponId)\n  const { key = \"\", level, refinement = 0, ascension = 0, lock, location = \"\", id } = weapon ?? {}\n  const weaponSheet = usePromise(WeaponSheet.get(key), [key])\n  const weaponTypeKey = weaponSheet?.weaponType\n\n  const weaponDispatch = useCallback((newWeapon: Partial<ICachedWeapon>) => {\n    database.updateWeapon(newWeapon, propWeaponId)\n  }, [propWeaponId, database])\n\n  const setLevel = useCallback(level => {\n    level = clamp(level, 1, 90)\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\n    weaponDispatch({ level, ascension })\n  }, [weaponDispatch])\n\n  const setAscension = useCallback(() => {\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\n    if (ascension === lowerAscension) weaponDispatch({ ascension: ascension + 1 })\n    else weaponDispatch({ ascension: lowerAscension })\n  }, [weaponDispatch, ascension, level])\n\n  const characterSheet = usePromise(location ? CharacterSheet.get(location) : undefined, [location])\n  const weaponFilter = characterSheet ? (ws) => ws.weaponType === characterSheet.weaponTypeKey : undefined\n  const initialWeaponFilter = characterSheet && characterSheet.weaponTypeKey\n\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => id && database.setWeaponLocation(id, charKey), [database, id])\n  const filter = useCallback(\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\n    [weaponSheet],\n  )\n  const [showModal, setshowModal] = useState(false)\n  const img = ascension < 2 ? weaponSheet?.img : weaponSheet?.imgAwaken\n\n  const weaponUIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  return <CardLight>\n    <CardContent sx={{ py: 1 }}>\n      <Grid container spacing={1}>\n        <Grid item flexGrow={1}>\n          <Grid container spacing={1}>\n            <Grid item >\n              <WeaponSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={k => weaponDispatch({ key: k })} filter={weaponFilter} weaponFilter={initialWeaponFilter} />\n              <ButtonGroup>\n                <Button onClick={() => setshowModal(true)} >{weaponSheet?.name ?? \"Select a Weapon\"}</Button>\n                <DropdownButton title={`Refinement ${refinement}`}>\n                  <MenuItem>Select Weapon Refinement</MenuItem>\n                  <Divider />\n                  {[...Array(5).keys()].map(key =>\n                    <MenuItem key={key} onClick={() => weaponDispatch({ refinement: key + 1 })} selected={refinement === (key + 1)} disabled={refinement === (key + 1)}>\n                      {`Refinement ${key + 1}`}\n                    </MenuItem>)}\n                </DropdownButton>\n              </ButtonGroup>\n            </Grid>\n            <Grid item >\n              <ButtonGroup sx={{ bgcolor: t => t.palette.contentLight.main }} >\n                <CustomNumberInputButtonGroupWrapper >\n                  <CustomNumberInput onChange={setLevel} value={level}\n                    startAdornment=\"Lvl. \"\n                    inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\n                    sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\n                  />\n                </CustomNumberInputButtonGroupWrapper>\n                <Button sx={{ pl: 1 }} disabled={!ambiguousLevel(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\n                <DropdownButton title={\"Select Level\"} >\n                  {milestoneLevels.map(([lv, as]) => {\n                    const sameLevel = lv === ascensionMaxLevel[as]\n                    const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\n                    const selected = lv === level && as === ascension\n                    return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => weaponDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\n                  })}\n                </DropdownButton>\n              </ButtonGroup>\n            </Grid>\n            <Grid item>\n              <Button color=\"error\" onClick={() => id && database.updateWeapon({ lock: !lock }, id)} startIcon={lock ? <Lock /> : <LockOpen />}>\n                {lock ? \"Locked\" : \"Unlocked\"}\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n        {!!onClose && <Grid item  >\n          <CloseButton onClick={onClose} />\n        </Grid>}\n        {database === localDatabase && <Grid item >\n          <SwapBtn weaponTypeKey={weaponTypeKey} onChangeId={id => database.setWeaponLocation(id, data.get(input.charKey).value as CharacterKey)} />\n        </Grid>}\n      </Grid>\n    </CardContent>\n    <Divider />\n    <CardContent >\n      {weaponSheet && weaponUIData && <Box display=\"flex\" gap={{ xs: 1, md: 1.5, lg: 2 }} >\n        <Box sx={{ maxWidth: 256 }} flexShrink={1} minWidth=\"25%\">\n          <Box component=\"img\" src={img} className={`grad-${weaponSheet.rarity}star`} sx={{ maxWidth: 256, width: \"100%\", height: \"auto\", borderRadius: 1 }} />\n          <Typography><small>{weaponSheet.description}</small></Typography>\n        </Box>\n        <Box sx={{ mb: -1 }} flexGrow={1} >\n          <Typography variant=\"h6\" >{process.env.NODE_ENV === \"development\" && <ColorText color=\"warning\">{id || `\"\"`} </ColorText>}{weaponSheet.name} Lv. {weapon && WeaponSheet.getLevelString(weapon)} {weaponSheet.rarity > 2 && <SqBadge color=\"info\">Refinement {refinement}</SqBadge>}</Typography>\n          <Typography><Stars stars={weaponSheet.rarity} /></Typography>\n          <Typography variant=\"subtitle1\">{weaponSheet.passiveName}</Typography>\n          <Typography gutterBottom>{weaponSheet.passiveName && weaponSheet.passiveDescription(weaponUIData.get(input.weapon.refineIndex).value)}</Typography>\n          <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n            <CardDark >\n              <CardContent>\n                <Typography>Main Stats</Typography>\n              </CardContent>\n              <FieldDisplayList>\n                {[input.weapon.main, input.weapon.sub, input.weapon.sub2].map((node, i) => {\n                  const n = weaponUIData.get(node)\n                  if (n.isEmpty || !n.value) return null\n                  return <NodeFieldDisplay key={n.key} node={n} component={ListItem} />\n                })}\n              </FieldDisplayList>\n            </CardDark>\n            {data && weaponSheet.document && <DocumentDisplay sections={weaponSheet.document} />}\n          </Box>\n        </Box>\n      </Box>}\n    </CardContent>\n    {footer && id && <CardContent sx={{ py: 1 }}>\n      <Grid container>\n        <Grid item flexGrow={1}>\n          <CharacterDropdownButton noUnselect inventory value={location} onChange={equipOnChar} filter={filter} />\n        </Grid>\n        {!!onClose && <Grid item><CloseButton large onClick={onClose} /></Grid>}\n      </Grid>\n    </CardContent>}\n  </CardLight>\n}\nfunction SwapBtn({ onChangeId, weaponTypeKey }) {\n  const database = useContext(DatabaseContext)\n  const [show, setShow] = useState(false)\n  const open = () => setShow(true)\n  const close = () => setShow(false)\n\n  const clickHandler = (id) => {\n    onChangeId(id)\n    close()\n  }\n\n  const weaponSheets = usePromise(WeaponSheet.getAll, [])\n\n  const weaponIdList = database.weapons.keys.filter(wKey => {\n    const dbWeapon = database._getWeapon(wKey)\n    if (!dbWeapon) return false\n    if (weaponTypeKey && weaponTypeKey !== weaponSheets?.[dbWeapon.key]?.weaponType) return false\n    return true\n  })\n\n\n  return <>\n    <Button color=\"info\" onClick={open} startIcon={<SwapHoriz />} >SWAP WEAPON</Button>\n    <ModalWrapper open={show} onClose={close} >\n      <CardDark>\n        <CardContent sx={{ py: 1 }}>\n          <Grid container>\n            <Grid item flexGrow={1}>\n              <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} Swap Weapon</Typography>\n            </Grid>\n            <Grid item>\n              <CloseButton onClick={close} />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardContent>\n          <Grid container spacing={1}>\n            {weaponIdList.map(weaponId =>\n              <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\n                <WeaponCard\n                  weaponId={weaponId}\n                  onClick={clickHandler}\n                />\n              </Grid>)}\n          </Grid>\n        </CardContent>\n      </CardDark>\n    </ModalWrapper>\n  </>\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6.99 11 3 15l3.99 4v-3H14v-2H6.99v-3zM21 9l-3.99-4v3H10v2h7.01v3L21 9z\"\n}), 'SwapHoriz');"],"names":["BootstrapTooltip","styled","className","props","arrow","classes","popper","theme","tooltipClasses","color","palette","common","black","backgroundColor","CharacterDropdownButton","value","onChange","unSelectText","unSelectIcon","inventory","noUnselect","filter","t","useTranslation","database","useContext","DatabaseContext","characterSheets","usePromise","CharacterSheet","characterSheet","characterKeys","_getCharKeys","ck","sort","title","name","startIcon","thumbImg","src","thumbImgSide","onClick","selected","disabled","variant","noWrap","CharacterMenuItemArray","selectedCharacterKey","map","characterKey","ConditionalSelector","conditional","conditionalValue","DataContext","character","characterDispatch","setConditional","useCallback","v","conditionalValues","deepClone","layeredAssignment","path","Object","keys","states","length","entries","stateKey","st","badge","SqBadge","Button","fullWidth","size","undefined","CheckBox","CheckBoxOutlineBlank","state","DropdownButton","MenuItem","Divider","ConditionalDisplay","hideHeader","hideDesc","fieldContext","data","canShow","get","dataNode","target","isEmpty","condVal","description","evalIfFunc","header","icon","action","fields","CardDark","CardHeader","avatar","titleTypographyProps","CardContent","Box","mb","FieldDisplay","sx","m","field","i","component","ListItem","StyledInputBase","InputBase","primary","main","transition","dark","Wrapper","padding","overflow","width","height","CustomNumberInputButtonGroupWrapper","children","disableRipple","disableFocusRipple","disableTouchRipple","CustomNumberInput","float","useState","number","setNumber","focused","setFocus","parseFunc","useMemo","parseFloat","parseInt","onBlur","onFocus","useEffect","onInputChange","e","onKeyDOwn","key","type","onKeyDown","DocumentDisplay","sections","sectionsDisplay","section","talentText","text","display","flexDirection","gap","s","oldData","node","oldNode","oldValue","NodeFieldDisplay","suffix","textSuffix","BasicFieldDisplay","justifyContent","toFixed","fixed","unit","fieldText","KeyMap","fieldFormulaText","formula","fieldVal","diff","valueString","formulaTextOverlay","placement","cursor","ml","faQuestionCircle","StatIcon","FieldDisplayList","List","borderRadius","shape","margin","contentDark","contentDarker","createContext","WeaponDisplayCard","propWeaponId","weaponId","footer","onClose","weapon","useWeapon","level","refinement","ascension","lock","location","id","weaponSheet","WeaponSheet","weaponTypeKey","weaponType","weaponDispatch","newWeapon","updateWeapon","setLevel","clamp","ascensionMaxLevel","ascenML","setAscension","lowerAscension","weaponFilter","ws","initialWeaponFilter","equipOnChar","charKey","setWeaponLocation","cs","showModal","setshowModal","img","imgAwaken","weaponUIData","computeUIData","dataObjForWeapon","py","container","spacing","item","flexGrow","show","onHide","onSelect","k","Array","bgcolor","contentLight","startAdornment","inputProps","min","max","textAlign","pl","ambiguousLevel","milestoneLevels","lv","as","lvlstr","localDatabase","SwapBtn","onChangeId","input","xs","md","lg","maxWidth","flexShrink","minWidth","rarity","process","stars","passiveName","gutterBottom","passiveDescription","n","document","large","setShow","close","clickHandler","weaponSheets","weaponIdList","weapons","wKey","dbWeapon","_getWeapon","open","Assets","sm","createSvgIcon","_jsx","d"],"sourceRoot":""}