{"version":3,"file":"static/js/652.ef4708b5.chunk.js","mappings":"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","sources":["Components/Artifact/ArtifactCardPico.tsx","Components/Artifact/ArtifactTooltip.tsx","Components/BootstrapTooltip.tsx","Components/Weapon/WeaponFullCard.tsx","Components/Character/CharacterCard.tsx","Components/Character/CharacterCardPico.tsx","Components/ConditionalWrapper.tsx","Components/QuestionTooltip.tsx","Components/FieldDisplay.tsx","Components/SortByButton.tsx","Components/StarDisplay.tsx","Components/SolidColoredToggleButton.tsx","Components/ToggleButton/ElementToggle.tsx","Components/ToggleButton/WeaponToggle.tsx","Components/Weapon/WeaponCardPico.tsx","Components/Weapon/WeaponNameTooltip.tsx","Context/FormulaDataContext.tsx","Data/Resonance.tsx","PageCharacter/CharacterDisplayState.tsx","PageCharacter/CharacterSelectionModal.tsx","ReactHooks/useCharacter.tsx","ReactHooks/useCharacterReducer.tsx","ReactHooks/useForceUpdate.tsx","ReactHooks/useMediaQueryUp.tsx","ReactHooks/useTeamData.tsx","ReactHooks/useWeapon.tsx","Util/CharacterSort.ts","Util/MultiSelect.ts","Util/SortByFilters.ts"],"sourcesContent":["import { Box, Typography } from '@mui/material';\r\nimport Assets from '../../Assets/Assets';\r\nimport Artifact from '../../Data/Artifacts/Artifact';\r\nimport { ArtifactSheet } from '../../Data/Artifacts/ArtifactSheet';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { ICachedArtifact } from '../../Types/artifact';\r\nimport { allElementsWithPhy, SlotKey } from '../../Types/consts';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\nimport ArtifactTooltip from './ArtifactTooltip';\r\n\r\nexport default function ArtifactCardPico({ artifactObj: art, slotKey: key }: { artifactObj: ICachedArtifact | undefined, slotKey: SlotKey }) {\r\n  const artifactSheet = usePromise(() => art?.setKey && ArtifactSheet.get(art.setKey), [art?.setKey])\r\n  // Blank artifact slot icon\r\n  if (!art || !artifactSheet)\r\n    return <CardDark sx={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\r\n      <Box sx={{ width: \"100%\", pb: \"100%\", position: \"relative\", }}>\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            width: \"70%\", height: \"70%\",\r\n            left: \"50%\", top: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            opacity: 0.7\r\n          }}\r\n          component=\"img\"\r\n          src={Assets.slot[key]}\r\n        />\r\n      </Box>\r\n    </CardDark>\r\n\r\n  // Actual artifact icon + info\r\n  const { mainStatKey, rarity, level } = art\r\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\r\n  const color = element ?? \"secondary\"\r\n\r\n  return <ArtifactTooltip art={art}><CardDark sx={{ display: \"flex\", flexDirection: \"column\", position: \"relative\" }}>\r\n    <Box\r\n      component=\"img\"\r\n      className={`grad-${rarity}star`}\r\n      src={artifactSheet.slotIcons[key]}\r\n      maxWidth=\"100%\"\r\n      maxHeight=\"100%\"\r\n    />\r\n    <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", }}>\r\n      <strong><SqBadge sx={{ p: 0.5 }} color={Artifact.levelVariant(level)}><strong>+{level}</strong></SqBadge></strong>\r\n    </Typography>\r\n    <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", bottom: 0, right: 0 }}>\r\n      <SqBadge color={color} sx={{ p: 0.5 }}>{StatIcon[mainStatKey]}</SqBadge>\r\n    </Typography>\r\n  </CardDark></ArtifactTooltip>\r\n}\r\n","import { Box, Skeleton, Typography } from \"@mui/material\";\r\nimport { Suspense } from \"react\";\r\nimport Artifact from \"../../Data/Artifacts/Artifact\";\r\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\r\nimport KeyMap, { cacheValueString } from \"../../KeyMap\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport { ICachedArtifact, ICachedSubstat } from \"../../Types/artifact\";\r\nimport { clamp } from \"../../Util/Util\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport SqBadge from \"../SqBadge\";\r\nimport { StarsDisplay } from \"../StarDisplay\";\r\nimport StatIcon from \"../StatIcon\";\r\nimport { artifactSlotIcon } from \"./SlotNameWIthIcon\";\r\n\r\nexport default function ArtifactTooltip({ art, children }: { art: ICachedArtifact, children: JSX.Element }) {\r\n  const fallback = <Box>\r\n    <Skeleton variant=\"rectangular\" width={100} height={100} />\r\n  </Box>\r\n  const title = <Suspense fallback={fallback}>\r\n    <ArtifactData art={art} />\r\n  </Suspense>\r\n\r\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\r\n    {children}\r\n  </BootstrapTooltip>\r\n}\r\nfunction ArtifactData({ art }: { art: ICachedArtifact }) {\r\n  const sheet = usePromise(() => ArtifactSheet.get(art.setKey), [art.setKey])\r\n  const { slotKey, level, rarity, mainStatKey, substats } = art\r\n  const slotName = sheet?.getSlotName(slotKey)\r\n  const mainStatUnit = KeyMap.unit(mainStatKey)\r\n  const mainIcon = StatIcon[mainStatKey]\r\n  const mainVariant = KeyMap.getVariant(mainStatKey)\r\n  return <Box p={1}>\r\n    <Typography variant='h6'>{artifactSlotIcon(slotKey)} {slotName}</Typography>\r\n    <Typography variant=\"subtitle1\" color={`${mainVariant}.main`}>{mainIcon} {KeyMap.get(mainStatKey)} {cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, level) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</Typography>\r\n    <Typography variant=\"subtitle2\" sx={{ display: \"flex\", justifyContent: \"space-between\" }} ><StarsDisplay stars={rarity} /><SqBadge color={Artifact.levelVariant(level)}>+{level}</SqBadge> </Typography>\r\n    <Box py={1}>\r\n      {substats.map((stat: ICachedSubstat) => !!stat.value && <Typography key={stat.key} color={`roll${clamp(stat.rolls.length, 1, 6)}.main`}>\r\n        {StatIcon[stat.key]} {KeyMap.getStr(stat.key)} <strong>{`+${cacheValueString(stat.value, KeyMap.unit(stat.key))}${KeyMap.unit(stat.key)}`}</strong>\r\n      </Typography>)}\r\n    </Box>\r\n\r\n    <Typography color=\"success.main\">{sheet?.name}</Typography>\r\n  </Box>\r\n}\r\n","import { styled, Tooltip, tooltipClasses, TooltipProps } from \"@mui/material\";\r\n\r\nconst BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.arrow}`]: {\r\n    color: theme.palette.common.black,\r\n  },\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    maxWidth: 500,\r\n  },\r\n}));\r\nexport default BootstrapTooltip\r\n","import { Box, Typography } from '@mui/material';\r\nimport { useMemo } from 'react';\r\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\r\nimport { uiInput as input } from '../../Formula';\r\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\r\nimport { NodeDisplay } from '../../Formula/uiData';\r\nimport { valueString } from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport useWeapon from '../../ReactHooks/useWeapon';\r\nimport { ICachedWeapon } from '../../Types/weapon';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\n\r\nexport default function WeaponFullCard({ weaponId }: { weaponId: string }) {\r\n  const weapon = useWeapon(weaponId)\r\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n  return <CardDark>\r\n    <Box display=\"flex\" >\r\n      <Box flexShrink={1} maxWidth=\"35%\" display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`} >\r\n        <Box\r\n          component=\"img\"\r\n          src={weaponSheet.getImg(weapon.ascension)}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </Box>\r\n      <Box flexGrow={1} sx={{ p: 1 }}>\r\n        <Typography variant=\"body2\" gutterBottom><strong>{weaponSheet?.name}</strong></Typography>\r\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} gutterBottom>\r\n          <SqBadge color=\"primary\">Lv. {WeaponSheet.getLevelString(weapon as ICachedWeapon)}</SqBadge>\r\n          {weaponSheet.hasRefinement && <SqBadge color=\"info\">R{weapon.refinement}</SqBadge>}\r\n        </Typography>\r\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} >\r\n          <WeaponStat node={UIData.get(input.weapon.main)} />\r\n          <WeaponStat node={UIData.get(input.weapon.sub)} />\r\n        </Typography>\r\n\r\n      </Box>\r\n    </Box>\r\n  </CardDark>\r\n}\r\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\r\n  if (!node.info.key) return null\r\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\r\n  return <SqBadge color=\"secondary\">{StatIcon[node.info.key]} {val}</SqBadge>\r\n}\r\n","import { Favorite, FavoriteBorder } from '@mui/icons-material';\r\nimport { Box, CardActionArea, CardContent, Chip, Grid, IconButton, Skeleton, Typography } from '@mui/material';\r\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\r\nimport { ascensionMaxLevel } from '../../Data/LevelData';\r\nimport { DatabaseContext } from '../../Database/Database';\r\nimport { DataContext, dataContextObj, TeamData } from '../../Context/DataContext';\r\nimport { uiInput as input } from '../../Formula';\r\nimport KeyMap from '../../KeyMap';\r\nimport CharacterCardPico from './CharacterCardPico';\r\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\r\nimport useTeamData from '../../ReactHooks/useTeamData';\r\nimport { ICachedArtifact } from '../../Types/artifact';\r\nimport { allSlotKeys, CharacterKey, ElementKey, SlotKey } from '../../Types/consts';\r\nimport { range } from '../../Util/Util';\r\nimport ArtifactCardPico from '../Artifact/ArtifactCardPico';\r\nimport CardLight from '../Card/CardLight';\r\nimport ConditionalWrapper from '../ConditionalWrapper';\r\nimport { NodeFieldDisplay } from '../FieldDisplay';\r\nimport SqBadge from '../SqBadge';\r\nimport { StarsDisplay } from '../StarDisplay';\r\nimport StatIcon from '../StatIcon';\r\nimport WeaponCardPico from '../Weapon/WeaponCardPico';\r\nimport WeaponFullCard from '../Weapon/WeaponFullCard';\r\nimport { CharacterContext, CharacterContextObj } from '../../Context/CharacterContext';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\r\nimport useCharacter from '../../ReactHooks/useCharacter';\r\nimport useDBState from '../../ReactHooks/useDBState';\r\nimport { initCharMeta } from '../../Database/Data/StateData';\r\nimport { ICachedCharacter } from '../../Types/character';\r\n\r\ntype CharacterCardProps = {\r\n  characterKey: CharacterKey,\r\n  onClick?: (characterKey: CharacterKey) => void,\r\n  onClickHeader?: (characterKey: CharacterKey) => void,\r\n  onClickTeammate?: (characterKey: CharacterKey) => void,\r\n  artifactChildren?: Displayable,\r\n  weaponChildren?: Displayable,\r\n  characterChildren?: Displayable,\r\n  footer?: Displayable,\r\n  hideStats?: boolean\r\n  isTeammateCard?: boolean,\r\n}\r\nexport default function CharacterCard({ characterKey, artifactChildren, weaponChildren, characterChildren, onClick, onClickHeader, onClickTeammate, footer, hideStats, isTeammateCard }: CharacterCardProps) {\r\n  const { teamData: teamDataContext } = useContext(DataContext)\r\n  const teamData = useTeamData(teamDataContext ? \"\" : characterKey) ?? (teamDataContext as TeamData | undefined)\r\n  const character = useCharacter(characterKey)\r\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey), [characterKey])\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const data = teamData?.[characterKey]?.target\r\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey), [characterKey, onClick])\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickHandler} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\r\n    [onClickHandler],\r\n  )\r\n\r\n  const characterContextObj: CharacterContextObj | undefined = useMemo(() => character && characterSheet && {\r\n    character, characterSheet, characterDispatch\r\n  }, [character, characterSheet, characterDispatch])\r\n  const dataContextObj: dataContextObj | undefined = useMemo(() => data && teamData && ({\r\n    data,\r\n    teamData,\r\n  }), [data, teamData])\r\n\r\n  const [{ favorite }, setCharMeta] = useDBState(`charMeta_${characterKey}`, initCharMeta)\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 350 }} />}>\r\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n      <Box sx={{ display: \"flex\", position: \"absolute\", zIndex: 2, opacity: 0.7 }}>\r\n        <IconButton sx={{ p: 0.5 }} onClick={_ => setCharMeta({ favorite: !favorite })}>\r\n          {favorite ? <Favorite /> : <FavoriteBorder />}\r\n        </IconButton>\r\n      </Box>\r\n      <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\r\n        {(character && dataContextObj && characterContextObj)\r\n          ? <ExistingCharacterCardContent\r\n            characterContextObj={characterContextObj}\r\n            dataContextObj={dataContextObj}\r\n            characterKey={characterKey}\r\n            onClick={onClick}\r\n            onClickHeader={onClickHeader}\r\n            isTeammateCard={isTeammateCard}\r\n            character={character}\r\n            onClickTeammate={onClickTeammate}\r\n            hideStats={hideStats}\r\n            weaponChildren={weaponChildren}\r\n            artifactChildren={artifactChildren}\r\n            characterChildren={characterChildren}\r\n          />\r\n          : <NewCharacterCardContent characterKey={characterKey} />}\r\n      </ConditionalWrapper>\r\n      {footer}\r\n    </CardLight>\r\n\r\n  </Suspense>\r\n}\r\n\r\ntype ExistingCharacterCardContentProps = {\r\n  characterContextObj: CharacterContextObj\r\n  dataContextObj: dataContextObj\r\n  characterKey: CharacterKey\r\n  onClick?: (characterKey: CharacterKey) => void\r\n  onClickHeader?: (characterKey: CharacterKey) => void\r\n  isTeammateCard?: boolean\r\n  character: ICachedCharacter\r\n  onClickTeammate?: (characterKey: CharacterKey) => void\r\n  hideStats?: boolean\r\n  weaponChildren?: Displayable\r\n  artifactChildren?: Displayable\r\n  characterChildren?: Displayable\r\n}\r\nfunction ExistingCharacterCardContent({ characterContextObj, dataContextObj, characterKey, onClick, onClickHeader, isTeammateCard, character, onClickTeammate, hideStats, weaponChildren, artifactChildren, characterChildren }: ExistingCharacterCardContentProps) {\r\n  return <CharacterContext.Provider value={characterContextObj}><DataContext.Provider value={dataContextObj}>\r\n    <Header characterKey={characterKey} onClick={!onClick ? onClickHeader : undefined} >\r\n      <HeaderContent />\r\n    </Header>\r\n    <CardContent sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 1, flexGrow: 1 }}>\r\n      <Artifacts />\r\n      {!isTeammateCard && <Grid container columns={4} spacing={0.75}>\r\n        <Grid item xs={1} height=\"100%\">\r\n          <WeaponCardPico weaponId={character.equippedWeapon} />\r\n        </Grid>\r\n        {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={character.team[i]} onClick={!onClick ? onClickTeammate : undefined} index={i} /></Grid>)}\r\n      </Grid>}\r\n      {isTeammateCard && <WeaponFullCard weaponId={character.equippedWeapon} />}\r\n      {!isTeammateCard && !hideStats && <Stats />}\r\n      {weaponChildren}\r\n      {artifactChildren}\r\n      {characterChildren}\r\n    </CardContent>\r\n  </DataContext.Provider></CharacterContext.Provider>\r\n}\r\n\r\nfunction NewCharacterCardContent({ characterKey }: { characterKey: CharacterKey }) {\r\n  return < >\r\n    <Header characterKey={characterKey} >\r\n      <HeaderContentNew characterKey={characterKey} />\r\n    </Header>\r\n    <CardContent sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 1, flexGrow: 1, height: \"100%\" }}>\r\n    </CardContent>\r\n  </>\r\n}\r\n\r\nfunction Header({ children, characterKey, onClick }: { children: JSX.Element, characterKey: CharacterKey, onClick?: (characterKey: CharacterKey) => void }) {\r\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey), [characterKey])\r\n\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={() => characterKey && onClick?.(characterKey)} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\r\n    [onClick, characterKey],\r\n  )\r\n  if (!characterSheet) return null\r\n  return <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\r\n    <Box display=\"flex\"\r\n      position=\"relative\"\r\n      className={`grad-${characterSheet.rarity}star`}\r\n      sx={{\r\n        \"&::before\": {\r\n          content: '\"\"',\r\n          display: \"block\", position: \"absolute\",\r\n          left: 0, top: 0,\r\n          width: \"100%\", height: \"100%\",\r\n          opacity: 0.7,\r\n          backgroundImage: `url(${characterSheet.bannerImg})`, backgroundPosition: \"center\", backgroundSize: \"cover\",\r\n        }\r\n      }}\r\n      width=\"100%\" >\r\n      <Box flexShrink={1} sx={{ maxWidth: { xs: \"40%\", lg: \"40%\" } }} alignSelf=\"flex-end\" display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n        <Box\r\n          component=\"img\"\r\n          src={characterSheet.thumbImg}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          maxWidth={256}\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </Box>\r\n      <Box flexGrow={1} sx={{ py: 1, pr: 1 }} display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  </ConditionalWrapper>\r\n}\r\n\r\nfunction HeaderContent() {\r\n  const { characterSheet } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const characterEle = data.get(input.charEle).value as ElementKey\r\n  const characterLevel = data.get(input.lvl).value\r\n  const constellation = data.get(input.constellation).value\r\n  const ascension = data.get(input.asc).value\r\n  const autoBoost = data.get(input.bonus.auto).value\r\n  const skillBoost = data.get(input.bonus.skill).value\r\n  const burstBoost = data.get(input.bonus.burst).value\r\n\r\n  const tAuto = data.get(input.total.auto).value\r\n  const tSkill = data.get(input.total.skill).value\r\n  const tBurst = data.get(input.total.burst).value\r\n\r\n  return <>\r\n    <Chip label={<Typography variant=\"subtitle1\">{characterSheet.name}</Typography>} size=\"small\" color={characterEle} sx={{ opacity: 0.85 }} />\r\n    <Grid container spacing={1} flexWrap=\"nowrap\">\r\n      <Grid item sx={{ textShadow: \"0 0 5px gray\" }}>\r\n        <Typography component=\"span\" variant=\"h6\" whiteSpace=\"nowrap\" >Lv. {characterLevel}</Typography>\r\n        <Typography component=\"span\" variant=\"h6\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant=\"h6\"><SqBadge>C{constellation}</SqBadge></Typography>\r\n      </Grid>\r\n    </Grid>\r\n    <Grid container spacing={1} flexWrap=\"nowrap\">\r\n      <Grid item>\r\n        <Chip color={autoBoost ? \"info\" : \"secondary\"} label={<strong >{tAuto}</strong>} />\r\n      </Grid>\r\n      <Grid item>\r\n        <Chip color={skillBoost ? \"info\" : \"secondary\"} label={<strong >{tSkill}</strong>} />\r\n      </Grid>\r\n      <Grid item>\r\n        <Chip color={burstBoost ? \"info\" : \"secondary\"} label={<strong >{tBurst}</strong>} />\r\n      </Grid>\r\n    </Grid>\r\n    <Typography mt={1} ><StarsDisplay stars={characterSheet.rarity} colored /></Typography>\r\n\r\n  </>\r\n}\r\n\r\nfunction HeaderContentNew({ characterKey }: { characterKey: CharacterKey }) {\r\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey), [characterKey])\r\n\r\n  if (!characterSheet) return null\r\n  return <>\r\n    <Chip label={<Typography variant=\"subtitle1\">{characterSheet.name}</Typography>} size=\"small\" color={characterSheet.elementKey} sx={{ opacity: 0.85 }} />\r\n    <Box mt={1}>\r\n      <Typography variant=\"h4\"><SqBadge>NEW</SqBadge></Typography>\r\n    </Box>\r\n    <Typography mt={1.5} ><StarsDisplay stars={characterSheet.rarity} colored /></Typography>\r\n  </>\r\n}\r\n\r\nfunction Artifacts() {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { data } = useContext(DataContext)\r\n  const artifacts = useMemo(() =>\r\n    allSlotKeys.map(k => [k, database.arts.get(data.get(input.art[k].id).value ?? \"\")]),\r\n    [data, database]) as Array<[SlotKey, ICachedArtifact | undefined]>;\r\n\r\n  return <Grid direction=\"row\" container spacing={0.75} columns={5}>\r\n    {artifacts.map(([key, art]: [SlotKey, ICachedArtifact | undefined]) =>\r\n      <Grid item key={key} xs={1}>\r\n        <ArtifactCardPico artifactObj={art} slotKey={key} />\r\n      </Grid>\r\n    )}\r\n  </Grid>\r\n}\r\n\r\nfunction Stats() {\r\n  const { data } = useContext(DataContext)\r\n  return <Box sx={{ width: \"100%\" }} >\r\n    {Object.values(data.getDisplay().basic).map(n => <NodeFieldDisplay key={n.info.key} node={n} />)}\r\n    {data.get(input.special).info.key && <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\r\n      <Typography flexGrow={1}><strong>Specialized:</strong></Typography>\r\n      {StatIcon[data.get(input.special).info.key!]}\r\n      <Typography>{KeyMap.get(data.get(input.special).info.key!)}</Typography>\r\n    </Box>}\r\n  </Box>\r\n}\r\n","import { Box, CardActionArea, Skeleton, Typography } from '@mui/material';\r\nimport { Suspense, useCallback } from 'react';\r\nimport Assets from '../../Assets/Assets';\r\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\r\nimport { ascensionMaxLevel } from '../../Data/LevelData';\r\nimport useCharacter from '../../ReactHooks/useCharacter';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { CharacterKey } from '../../Types/consts';\r\nimport BootstrapTooltip from '../BootstrapTooltip';\r\nimport CardDark from '../Card/CardDark';\r\nimport ConditionalWrapper from '../ConditionalWrapper';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\n\r\nexport default function CharacterCardPico({ characterKey = \"\", index = -1, onClick }: { characterKey: CharacterKey | \"\", index?: number, onClick?: (characterKey: CharacterKey) => void }) {\r\n  const teammateSheet = usePromise(() => CharacterSheet.get(characterKey), [characterKey])\r\n  const character = useCharacter(characterKey)\r\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey), [characterKey, onClick])\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickHandler}>{children}</CardActionArea>,\r\n    [onClickHandler])\r\n  if (teammateSheet && character) {\r\n    const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n      <Typography>{teammateSheet.elementKey && StatIcon[teammateSheet.elementKey]} {teammateSheet.name}</Typography>\r\n    </Suspense>\r\n\r\n    return <CardDark sx={{ maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\r\n      <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}>\r\n        <BootstrapTooltip placement=\"top\" title={title}>\r\n          <Box display=\"flex\" className={`grad-${teammateSheet.rarity}star`}>\r\n            <Box\r\n              component=\"img\"\r\n              src={teammateSheet.thumbImgSide}\r\n              maxWidth=\"100%\"\r\n              maxHeight=\"100%\"\r\n              sx={{ transform: \"scale(1.4)\", transformOrigin: \"bottom\" }}\r\n            />\r\n          </Box>\r\n        </BootstrapTooltip>\r\n        <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", top: 0, }}>\r\n          <strong><SqBadge color=\"primary\" >{character.level}/{ascensionMaxLevel[character.ascension]}</SqBadge></strong>\r\n        </Typography>\r\n        <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", bottom: 0, right: 0, }}>\r\n          <strong><SqBadge color=\"secondary\" >C{character.constellation}</SqBadge></strong>\r\n        </Typography>\r\n      </ConditionalWrapper>\r\n    </CardDark>\r\n  } else {\r\n    return <CardDark sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", py: \"12.5%\" }}>\r\n      <Box component=\"img\" src={Assets.team[`team${index + 2}`]} sx={{ width: \"75%\", height: \"auto\", opacity: 0.7 }} />\r\n    </CardDark>\r\n  }\r\n}\r\n","import { ReactNode } from \"react\";\r\n\r\ntype Prop = {\r\n  condition: boolean,\r\n  wrapper: (children: ReactNode) => ReactNode\r\n  falseWrapper?: (children: ReactNode) => ReactNode\r\n  children: ReactNode\r\n}\r\n// Wrap children with element provided by wrapper func when condition is true.\r\nexport default function ConditionalWrapper({ condition, wrapper, falseWrapper, children }: Prop) {\r\n  return (condition ? wrapper(children) : (falseWrapper ? falseWrapper(children) : children)) as JSX.Element;\r\n}","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, TooltipProps } from \"@mui/material\";\r\nimport BootstrapTooltip from \"./BootstrapTooltip\";\r\n\r\ninterface ITooltipProps extends Omit<TooltipProps, \"children\"> {\r\n  className?: string,\r\n}\r\nconst QuestionTooltip = ({ className, ...props }: ITooltipProps) =>\r\n  <BootstrapTooltip placement=\"top\" {...props} className={className}>\r\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\r\n  </BootstrapTooltip>\r\n\r\nexport default QuestionTooltip\r\n","import { Groups } from \"@mui/icons-material\";\r\nimport { Box, Divider, List, ListItem, ListProps, Palette, PaletteColor, Skeleton, styled, Typography } from \"@mui/material\";\r\nimport React, { Suspense, useCallback, useContext, useMemo } from 'react';\r\nimport { DataContext } from \"../Context/DataContext\";\r\nimport { FormulaDataContext } from \"../Context/FormulaDataContext\";\r\nimport { NodeDisplay } from \"../Formula/api\";\r\nimport { Variant } from \"../Formula/type\";\r\nimport KeyMap, { valueString } from \"../KeyMap\";\r\nimport { allAmpReactions, AmpReactionKey } from \"../Types/consts\";\r\nimport { IBasicFieldDisplay, IFieldDisplay } from \"../Types/fieldDisplay\";\r\nimport { evalIfFunc } from \"../Util/Util\";\r\nimport AmpReactionModeText from \"./AmpReactionModeText\";\r\nimport ColorText from \"./ColoredText\";\r\nimport QuestionTooltip from \"./QuestionTooltip\";\r\nimport StatIcon from \"./StatIcon\";\r\n\r\nexport default function FieldsDisplay({ fields }: { fields: IFieldDisplay[] }) {\r\n  return <FieldDisplayList sx={{ m: 0 }}>\r\n    {fields.map((field, i) => <FieldDisplay key={i} field={field} component={ListItem} />)}\r\n  </FieldDisplayList>\r\n}\r\n\r\nfunction FieldDisplay({ field, component }: { field: IFieldDisplay, component?: React.ElementType }) {\r\n  const { data, oldData } = useContext(DataContext)\r\n  const canShow = useMemo(() => field?.canShow?.(data) ?? true, [field, data])\r\n  if (!canShow) return null\r\n  if (\"node\" in field) {\r\n    const node = data.get(field.node)\r\n    if (node.isEmpty) return null\r\n    if (oldData) {\r\n      const oldNode = oldData.get(field.node)\r\n      const oldValue = oldNode.isEmpty ? 0 : oldNode.value\r\n      return <NodeFieldDisplay node={node} oldValue={oldValue} suffix={field.textSuffix} component={component} />\r\n    }\r\n    else return <NodeFieldDisplay node={node} suffix={field.textSuffix} component={component} />\r\n  }\r\n  return <BasicFieldDisplay field={field} component={component} />\r\n}\r\n\r\nexport function BasicFieldDisplay({ field, component }: { field: IBasicFieldDisplay, component?: React.ElementType }) {\r\n  const { data } = useContext(DataContext)\r\n  const v = evalIfFunc(field.value, data)\r\n  const variant = evalIfFunc(field.variant, data)\r\n  const text = field.text && <span>{field.text}</span>\r\n  const suffix = field.textSuffix && <span>{field.textSuffix}</span>\r\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1 }} component={component} >\r\n    <Typography color={`${variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{text}{suffix}</Typography>\r\n    <Typography >{typeof v === \"number\" ? v.toFixed?.(field.fixed) : v}{field.unit}</Typography>\r\n  </Box>\r\n}\r\n\r\nexport function NodeFieldDisplay({ node, oldValue, suffix, component, emphasize }: { node: NodeDisplay, oldValue?: number, suffix?: Displayable, component?: React.ElementType, emphasize?: boolean }) {\r\n  const { data } = useContext(DataContext)\r\n  const { setFormulaData } = useContext(FormulaDataContext)\r\n  const onClick = useCallback(() => setFormulaData(data, node), [setFormulaData, data, node])\r\n\r\n  if (node.isEmpty) return null\r\n\r\n  suffix = suffix && <span>{suffix}</span>\r\n  const icon = node.info.key && StatIcon[node.info.key]\r\n  const fieldText = node.info.key ? KeyMap.get(node.info.key) : \"\"\r\n  const isTeamBuff = node.info.isTeamBuff\r\n  const fieldFormulaText = node.formula\r\n  let fieldVal = \"\" as Displayable\r\n  if (oldValue !== undefined) {\r\n    const diff = node.value - oldValue\r\n    fieldVal = <span>{valueString(oldValue, node.unit)}{diff > 0.0001 || diff < -0.0001 ? <ColorText color={diff > 0 ? \"success\" : \"error\"}> {diff > 0 ? \"+\" : \"\"}{valueString(diff, node.unit)}</ColorText> : \"\"}</span>\r\n  } else fieldVal = valueString(node.value, node.unit)\r\n\r\n  const formulaTextOverlay = !!node.formula && <QuestionTooltip onClick={onClick} title={<Typography><Suspense fallback={<Skeleton variant=\"rectangular\" width={300} height={30} />}>\r\n    {allAmpReactions.includes(node.info.variant as any) && <Box sx={{ display: \"inline-flex\", gap: 1, mr: 1 }}>\r\n      <Box><AmpReactionModeText reaction={node.info.variant as AmpReactionKey} trigger={node.info.subVariant as Variant} /></Box>\r\n      <Divider orientation=\"vertical\" flexItem />\r\n    </Box>}\r\n    <span>{fieldFormulaText}</span>\r\n  </Suspense></Typography>} />\r\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1, boxShadow: emphasize ? \"0px 0px 0px 2px red inset\" : undefined }} component={component} >\r\n    <Typography color={`${node.info.variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{!!isTeamBuff && <Groups />}{icon}{fieldText}{suffix}</Typography>\r\n    <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>\r\n      <Typography noWrap>{fieldVal}</Typography>\r\n      {formulaTextOverlay}\r\n    </Box>\r\n  </Box>\r\n}\r\nexport interface FieldDisplayListProps extends ListProps {\r\n  light?: keyof Palette,\r\n  dark?: keyof Palette,\r\n  palletOption?: keyof PaletteColor\r\n}\r\nexport const FieldDisplayList = styled(List)<FieldDisplayListProps>(({ theme, light = \"contentDark\", dark = \"contentDarker\", palletOption = \"main\" }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  overflow: \"hidden\",\r\n  margin: 0,\r\n  '> .MuiListItem-root:nth-of-type(even)': {\r\n    backgroundColor: (theme.palette[light] as PaletteColor)[palletOption]\r\n  },\r\n  '> .MuiListItem-root:nth-of-type(odd)': {\r\n    backgroundColor: (theme.palette[dark] as PaletteColor)[palletOption]\r\n  },\r\n}));\r\n","import { faSortAmountDownAlt, faSortAmountUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button, ButtonGroup, ButtonGroupProps, MenuItem } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport DropdownButton from \"./DropdownMenu/DropdownButton\";\r\n\r\ntype SortByButtonProps = ButtonGroupProps & {\r\n  sortKeys: string[]\r\n  value: string\r\n  onChange: (value: string) => void\r\n  ascending: boolean\r\n  onChangeAsc: (value: boolean) => void\r\n}\r\n// Assumes that all the sortKeys has corresponding translations in ui.json sortMap\r\nexport default function SortByButton({ sortKeys, value, onChange, ascending, onChangeAsc, ...props }: SortByButtonProps) {\r\n  const { t } = useTranslation(\"ui\")\r\n  return <Box display=\"flex\" alignItems=\"center\" gap={1}>\r\n    <Trans t={t} i18nKey={t(\"sortBy\") as any}>Sort by: </Trans>\r\n    <ButtonGroup {...props} >\r\n      <DropdownButton title={<Trans t={t} i18nKey={t(`sortMap.${value}`) as any}>{{ value: t(`sortMap.${value}`) }}</Trans>}>\r\n        {sortKeys.map(key =>\r\n          <MenuItem key={key} selected={value === key} disabled={value === key} onClick={() => onChange(key)}>{t(`sortMap.${key}`) as any}</MenuItem>)}\r\n      </DropdownButton>\r\n      <Button onClick={() => onChangeAsc(!ascending)} startIcon={<FontAwesomeIcon icon={ascending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" />}>\r\n        {ascending ? <Trans t={t} i18nKey=\"ascending\" >Ascending</Trans> : <Trans t={t} i18nKey=\"descending\" >Descending</Trans>}\r\n      </Button>\r\n    </ButtonGroup>\r\n  </Box>\r\n}\r\n","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Typography } from '@mui/material'\r\nimport { Rarity } from '../Types/consts'\r\n\r\nexport const StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nexport const StarsDisplay = ({ stars, colored = false }: { stars: Rarity, colored?: boolean }) =>\r\n  <Typography color={colored ? \"warning.main\" : undefined} component=\"span\">\r\n    {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n  </Typography>\r\n","import { ButtonProps, ToggleButton, ToggleButtonProps, styled } from \"@mui/material\";\r\n\r\ntype SolidColoredToggleButtonPartial = {\r\n  baseColor?: ButtonProps[\"color\"];\r\n  selectedColor?: ButtonProps[\"color\"];\r\n}\r\nexport type SolidColoredToggleButtonProps = SolidColoredToggleButtonPartial & ToggleButtonProps\r\n\r\n\r\nconst SolidColoredToggleButton = styled(ToggleButton, {\r\n  shouldForwardProp: (prop) => prop !== \"baseColor\" && prop !== \"selectedColor\"\r\n})<SolidColoredToggleButtonPartial>(({ theme, baseColor = \"secondary\", selectedColor = \"success\" }) => ({\r\n  '&': {\r\n    backgroundColor: theme.palette[baseColor].main,\r\n    color: theme.palette[baseColor].contrastText,\r\n  },\r\n  '&:hover': {\r\n    backgroundColor: theme.palette[baseColor].dark,\r\n  },\r\n  '&.Mui-selected': {\r\n    backgroundColor: theme.palette[selectedColor].main,\r\n    color: theme.palette[selectedColor].contrastText,\r\n  },\r\n  '&.Mui-selected:hover': {\r\n    backgroundColor: theme.palette[selectedColor].dark,\r\n  },\r\n  '&.Mui-disabled': {\r\n    backgroundColor: theme.palette[baseColor].dark,\r\n  },\r\n  '&.Mui-selected.Mui-disabled': {\r\n    backgroundColor: theme.palette[selectedColor].dark,\r\n  },\r\n}));\r\n\r\nexport default SolidColoredToggleButton\r\n","import { Box, ToggleButtonGroup } from \"@mui/material\";\r\nimport { allElements, ElementKey } from \"../../Types/consts\";\r\nimport { handleMultiSelect } from \"../../Util/MultiSelect\";\r\nimport SolidColoredToggleButton from \"../SolidColoredToggleButton\";\r\nimport { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\nimport StatIcon from \"../StatIcon\";\r\ntype ElementToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: ElementKey[]) => void\r\n  value: ElementKey[]\r\n}\r\nconst elementHandler = handleMultiSelect([...allElements])\r\nexport default function ElementToggle({ value, onChange, ...props }: ElementToggleProps) {\r\n  return <ToggleButtonGroup exclusive value={value} {...props}>\r\n    {allElements.map(ele => <SolidColoredToggleButton key={ele} value={ele} selectedColor={ele} onClick={() => onChange(elementHandler(value, ele))}>\r\n      <Box sx={{ fontSize: \"2em\", lineHeight: 1 }}>{StatIcon[ele]}</Box>\r\n    </SolidColoredToggleButton>)}\r\n  </ToggleButtonGroup>\r\n}\r\n","import { ToggleButton } from \"@mui/material\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport { allWeaponTypeKeys, WeaponTypeKey } from \"../../Types/consts\";\r\nimport { handleMultiSelect } from \"../../Util/MultiSelect\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport SolidToggleButtonGroup, { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\ntype WeaponToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: WeaponTypeKey[]) => void\r\n  value: WeaponTypeKey[]\r\n}\r\nconst weaponTypeHandler = handleMultiSelect([...allWeaponTypeKeys])\r\nexport default function WeaponToggle({ value, onChange, ...props }: WeaponToggleProps) {\r\n  return <SolidToggleButtonGroup exclusive value={value} {...props}>\r\n    {allWeaponTypeKeys.map(wt => <ToggleButton key={wt} value={wt} onClick={() => onChange(weaponTypeHandler(value, wt))}>\r\n      <ImgIcon src={Assets.weaponTypes?.[wt]} size={2} />\r\n    </ToggleButton>)}\r\n  </SolidToggleButtonGroup>\r\n}\r\n","import { Box, Typography } from '@mui/material';\r\nimport { useMemo } from 'react';\r\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\r\nimport { uiInput as input } from '../../Formula';\r\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\r\nimport { NodeDisplay } from '../../Formula/uiData';\r\nimport { valueString } from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport useWeapon from '../../ReactHooks/useWeapon';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\nimport WeaponNameTooltip from './WeaponNameTooltip';\r\n\r\nexport default function WeaponCardPico({ weaponId }: { weaponId: string }) {\r\n  const weapon = useWeapon(weaponId)\r\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n\r\n  const tooltipAddl = <Box>\r\n    <WeaponStatPico node={UIData.get(input.weapon.main)} />\r\n    <WeaponStatPico node={UIData.get(input.weapon.sub)} />\r\n  </Box>\r\n\r\n  return <CardDark sx={{ height: \"100%\", maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\r\n    <Box display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`}>\r\n      <WeaponNameTooltip sheet={weaponSheet} addlText={tooltipAddl}>\r\n        <Box\r\n          component=\"img\"\r\n          src={weaponSheet.getImg(weapon.ascension)}\r\n          maxWidth=\"100%\"\r\n          maxHeight=\"100%\"\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </WeaponNameTooltip>\r\n    </Box>\r\n    <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", }}>\r\n      <strong><SqBadge color=\"primary\">{WeaponSheet.getLevelString(weapon)}</SqBadge></strong>\r\n    </Typography>\r\n    {weaponSheet.hasRefinement && <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", bottom: 0, right: 0, }}>\r\n      <strong><SqBadge color=\"secondary\">R{weapon.refinement}</SqBadge></strong>\r\n    </Typography>}\r\n  </CardDark>\r\n}\r\nfunction WeaponStatPico({ node }: { node: NodeDisplay }) {\r\n  if (!node.info.key) return null\r\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\r\n  return <Typography>{StatIcon[node.info.key]} {val}</Typography>\r\n}\r\n","import { Skeleton, Typography } from \"@mui/material\";\r\nimport { ReactElement, ReactNode, Suspense } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\n\r\ntype Data = {\r\n  sheet: WeaponSheet,\r\n  addlText?: any,\r\n  children: ReactElement<any, any> & ReactNode,\r\n}\r\nexport default function WeaponNameTooltip({ sheet, addlText, children }: Data) {\r\n  const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n    <Typography><ImgIcon src={Assets.weaponTypes[sheet.weaponType]} /> {sheet.name}</Typography>\r\n    {addlText}\r\n  </Suspense>\r\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\r\n    {children}\r\n  </BootstrapTooltip>\r\n}\r\n","import { createContext, useCallback, useState } from \"react\";\r\nimport { NodeDisplay, UIData } from \"../Formula/uiData\";\r\nimport useBoolState from \"../ReactHooks/useBoolState\";\r\n\r\ntype FormulaDataContextObj = {\r\n  data?: UIData,\r\n  node?: NodeDisplay,\r\n  modalOpen?: boolean,\r\n  onModalOpen: () => void,\r\n  onModalClose: () => void,\r\n  setFormulaData: (data?: UIData, node?: NodeDisplay) => void\r\n}\r\nexport const FormulaDataContext = createContext({ setFormulaData: () => { }, onModalOpen: () => { }, onModalClose: () => { } } as FormulaDataContextObj);\r\n\r\nexport function FormulaDataWrapper({ children }: { children: JSX.Element }) {\r\n  const [open, onOpen, onClose] = useBoolState()\r\n  const [[data, node], setState] = useState([undefined, undefined] as [data: UIData | undefined, node: NodeDisplay | undefined])\r\n  const setFormulaData = useCallback((data?: UIData, node?: NodeDisplay) => {\r\n    if (data && node) onOpen()\r\n    else onClose()\r\n    setState([data, node])\r\n  }, [onOpen, onClose])\r\n  return <FormulaDataContext.Provider value={{ setFormulaData, data, node, modalOpen: open, onModalOpen: onOpen, onModalClose: onClose }} >{children}</FormulaDataContext.Provider>\r\n}\r\n","import StatIcon from \"../Components/StatIcon\";\r\nimport { Translate } from \"../Components/Translate\";\r\nimport { tally } from \"../Formula\";\r\nimport { inferInfoMut } from \"../Formula/api\";\r\nimport { UIData } from \"../Formula/uiData\";\r\nimport { equal, greaterEq, infoMut, percent, sum } from \"../Formula/utils\";\r\nimport { allElements, allElementsWithPhy } from \"../Types/consts\";\r\nimport { DocumentSection } from \"../Types/sheet\";\r\nimport { objectKeyValueMap } from \"../Util/Util\";\r\nimport { condReadNode, sgt, st } from \"./SheetUtil\";\r\nconst tr = (strKey: string) => <Translate ns=\"elementalResonance_gen\" key18={strKey} />\r\nconst trm = (strKey: string) => <Translate ns=\"elementalResonance\" key18={strKey} />\r\n\r\ntype IResonance = {\r\n  name: Displayable,\r\n  desc: Displayable,\r\n  icon: Displayable,\r\n  canShow: (data: UIData) => boolean\r\n  sections: DocumentSection[]\r\n}\r\n\r\nconst teamSize = sum(...allElements.map(ele => tally[ele]))\r\n\r\n// Protective Canopy\r\nconst pcNodes = objectKeyValueMap(allElementsWithPhy, e => [`${e}_res_`, greaterEq(tally.ele, 4, percent(0.15))])\r\n\r\nconst protectiveCanopy: IResonance = {\r\n  name: tr(\"ProtectiveCanopy.name\"),\r\n  desc: tr(\"ProtectiveCanopy.desc\"),\r\n  icon: <span>{StatIcon.anemo} {StatIcon.geo} {StatIcon.pyro} {StatIcon.hydro} {StatIcon.cryo} {StatIcon.electro} x4</span>,\r\n  canShow: (data: UIData) => allElements.filter(e => data.get(tally[e]).value >= 1).length === 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: Object.values(pcNodes).map(node => ({ node }))\r\n  }]\r\n}\r\n\r\n// Fervent Flames\r\nconst ffNode = greaterEq(teamSize, 4, greaterEq(tally.pyro, 2, percent(0.25)))\r\nconst ferventFlames: IResonance = {\r\n  name: tr(\"FerventFlames.name\"),\r\n  desc: tr(\"FerventFlames.desc\"),\r\n  icon: <span>{StatIcon.pyro} {StatIcon.pyro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.pyro).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.cryo\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }, {\r\n      node: ffNode\r\n    }]\r\n  }]\r\n}\r\n\r\n// Soothing Waters\r\nconst swNode = greaterEq(teamSize, 4, greaterEq(tally.hydro, 2, percent(0.25)))\r\nconst soothingWaters: IResonance = {\r\n  name: tr(\"SoothingWater.name\"),\r\n  desc: tr(\"SoothingWater.desc\"),\r\n  icon: <span>{StatIcon.hydro} {StatIcon.hydro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.hydro).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.pyro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }, {\r\n      node: swNode\r\n    }]\r\n  }]\r\n}\r\n\r\n//ShatteringIce\r\nconst condSIPath = [\"resonance\", \"ShatteringIce\"]\r\nconst condSI = condReadNode(condSIPath)\r\nconst siNode = greaterEq(teamSize, 4, greaterEq(tally.cryo, 2, equal(condSI, \"on\", percent(0.15))))\r\nconst shatteringIce: IResonance = {\r\n  name: tr(\"ShatteringIce.name\"),\r\n  desc: tr(\"ShatteringIce.desc\"),\r\n  icon: <span>{StatIcon.cryo} {StatIcon.cryo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.cryo).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.electro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }]\r\n  }, {\r\n    teamBuff: true,\r\n    path: condSIPath,\r\n    value: condSI,\r\n    name: trm(\"ShatteringIce.cond\"),\r\n    header: {\r\n      title: tr(\"ShatteringIce.name\"),\r\n      icon: StatIcon.cryo,\r\n    },\r\n    states: {\r\n      on: {\r\n        fields: [{\r\n          node: siNode\r\n        }]\r\n      }\r\n    }\r\n  }]\r\n}\r\n\r\n// High Voltage\r\nconst highVoltage: IResonance = {\r\n  name: tr(\"HighVoltage.name\"),\r\n  desc: tr(\"HighVoltage.desc\"),\r\n  icon: <span>{StatIcon.electro} {StatIcon.electro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.electro).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.hydro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }]\r\n  }]\r\n}\r\n\r\n// Impetuous Winds\r\nconst iwNodeStam = greaterEq(teamSize, 4, greaterEq(tally.anemo, 2, percent(-0.15)))\r\nconst iwNodeMove = greaterEq(teamSize, 4, greaterEq(tally.anemo, 2, percent(0.1)))\r\nconst iwNodeCD = greaterEq(teamSize, 4, greaterEq(tally.anemo, 2, percent(-0.05)))\r\nconst impetuousWinds: IResonance = {\r\n  name: tr(\"ImpetuousWinds.name\"),\r\n  desc: tr(\"ImpetuousWinds.desc\"),\r\n  icon: <span>{StatIcon.anemo} {StatIcon.anemo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.anemo).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      node: iwNodeStam\r\n    }, {\r\n      node: iwNodeMove\r\n    }, {\r\n      node: iwNodeCD\r\n    }]\r\n  }]\r\n}\r\n\r\n// Enduring Rock\r\nconst condERPath = [\"resonance\", \"EnduringRock\"]\r\nconst condER = condReadNode(condERPath)\r\nconst erNodeshield_ = greaterEq(teamSize, 4, greaterEq(tally.geo, 2, percent(0.15)))\r\nconst erNodeDMG_ = greaterEq(teamSize, 4, greaterEq(tally.geo, 2, equal(condER, \"on\", percent(0.15))))\r\nconst erNodeRes_ = greaterEq(teamSize, 4, greaterEq(tally.geo, 2, equal(condER, \"on\", percent(-0.2))))\r\nconst enduringRock: IResonance = {\r\n  name: tr(\"EnduringRock.name\"),\r\n  desc: tr(\"EnduringRock.desc\"),\r\n  icon: <span>{StatIcon.geo} {StatIcon.geo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.geo).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    text: tr(\"EnduringRock.desc\"),\r\n    fields: [{\r\n      node: erNodeshield_\r\n    }]\r\n  }, {\r\n    teamBuff: true,\r\n    path: condERPath,\r\n    value: condER,\r\n    header: {\r\n      title: tr(\"EnduringRock.name\"),\r\n      icon: StatIcon.geo,\r\n    },\r\n    name: st(\"protectedByShield\"),\r\n    states: {\r\n      on: {\r\n        fields: [{\r\n          node: erNodeDMG_\r\n        }, {\r\n          node: erNodeRes_\r\n        }, {\r\n          text: sgt(\"duration\"),\r\n          value: 15,\r\n          unit: \"s\"\r\n        }]\r\n      }\r\n    }\r\n  }]\r\n}\r\n\r\n// Sprawling Canopy\r\nconst condSC2elePath = [\"resonance\", \"SprawlingCanopy2ele\"]\r\nconst condSC2ele = condReadNode(condSC2elePath)\r\nconst condSC3elePath = [\"resonance\", \"SprawlingCanopy3ele\"]\r\nconst condSC3ele = condReadNode(condSC3elePath)\r\nconst scBase_eleMas = greaterEq(teamSize, 4, greaterEq(tally.dendro, 2, 50, { key: \"eleMas\" }))\r\nconst sc2ele_eleMas = greaterEq(teamSize, 4, greaterEq(tally.dendro, 2, equal(condSC2ele, \"on\", 30, { key: \"eleMas\" })))\r\nconst sc3ele_eleMas = greaterEq(teamSize, 4, greaterEq(tally.dendro, 2, equal(condSC3ele, \"on\", 20, { key: \"eleMas\" })))\r\nconst sprawlingGreenery: IResonance = {\r\n  name: tr(\"SprawlingGreenery.name\"),\r\n  desc: tr(\"SprawlingGreenery.desc\"),\r\n  icon: <span>{StatIcon.dendro} {StatIcon.dendro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.dendro).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    text: tr(\"SprawlingGreenery.desc\"),\r\n    fields: [{ node: scBase_eleMas }]\r\n  }, {\r\n    teamBuff: true,\r\n    path: condSC2elePath,\r\n    value: condSC2ele,\r\n    header: {\r\n      title: tr(\"SprawlingGreenery.name\"),\r\n      icon: StatIcon.dendro,\r\n    },\r\n    name: trm(\"SprawlingGreenery.cond2ele\"),\r\n    states: {\r\n      on: {\r\n        fields: [{\r\n          node: sc2ele_eleMas\r\n        }, {\r\n          text: sgt(\"duration\"),\r\n          value: 6,\r\n          unit: \"s\"\r\n        }]\r\n      }\r\n    }\r\n  }, {\r\n    teamBuff: true,\r\n    path: condSC3elePath,\r\n    value: condSC3ele,\r\n    header: {\r\n      title: tr(\"SprawlingGreenery.name\"),\r\n      icon: StatIcon.dendro,\r\n    },\r\n    name: trm(\"SprawlingGreenery.cond3ele\"),\r\n    states: {\r\n      on: {\r\n        fields: [{\r\n          node: sc3ele_eleMas\r\n        }, {\r\n          text: sgt(\"duration\"),\r\n          value: 6,\r\n          unit: \"s\"\r\n        }]\r\n      }\r\n    }\r\n  }]\r\n}\r\n\r\n\r\nexport const resonanceSheets: IResonance[] = [\r\n  protectiveCanopy,\r\n  ferventFlames,\r\n  soothingWaters,\r\n  shatteringIce,\r\n  highVoltage,\r\n  impetuousWinds,\r\n  enduringRock,\r\n  sprawlingGreenery,\r\n]\r\n\r\nexport const resonanceData = inferInfoMut({\r\n  premod: {\r\n    ...pcNodes,\r\n    atk_: ffNode,\r\n    hp_: swNode,\r\n    staminaDec_: iwNodeStam,\r\n    moveSPD_: iwNodeMove,\r\n    cdRed_: iwNodeCD,\r\n    shield_: erNodeshield_,\r\n    all_dmg_: erNodeDMG_,\r\n    geo_enemyRes_: erNodeRes_,\r\n    eleMas: infoMut(sum(scBase_eleMas, sc2ele_eleMas, sc3ele_eleMas), { pivot: true }),\r\n  },\r\n  total: {\r\n    // TODO: this crit rate is on-hit. Might put it in a `hit.critRate_` namespace later.\r\n    critRate_: siNode\r\n  }\r\n})\r\n","import { allElements, allWeaponTypeKeys } from \"../Types/consts\";\r\nimport { characterSortKeys } from \"../Util/CharacterSort\";\r\n\r\nexport const initialCharacterDisplayState = () => ({\r\n  sortType: characterSortKeys[0],\r\n  ascending: false,\r\n  weaponType: [...allWeaponTypeKeys],\r\n  element: [...allElements],\r\n  pageIndex: 0\r\n})\r\n","import { Box, CardContent, Divider, Grid, TextField } from \"@mui/material\";\r\nimport { ChangeEvent, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CardDark from \"../Components/Card/CardDark\";\r\nimport CharacterCard from \"../Components/Character/CharacterCard\";\r\nimport CloseButton from \"../Components/CloseButton\";\r\nimport ModalWrapper from \"../Components/ModalWrapper\";\r\nimport SortByButton from \"../Components/SortByButton\";\r\nimport ElementToggle from \"../Components/ToggleButton/ElementToggle\";\r\nimport WeaponToggle from \"../Components/ToggleButton/WeaponToggle\";\r\nimport { DataContext } from \"../Context/DataContext\";\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport useDBState from \"../ReactHooks/useDBState\";\r\nimport useForceUpdate from \"../ReactHooks/useForceUpdate\";\r\nimport usePromise from \"../ReactHooks/usePromise\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { allCharacterKeys, CharacterKey, TravelerKey } from \"../Types/consts\";\r\nimport { characterFilterConfigs, characterSortConfigs, characterSortKeys } from \"../Util/CharacterSort\";\r\nimport { filterFunction, sortFunction } from \"../Util/SortByFilters\";\r\nimport { initialCharacterDisplayState } from \"./CharacterDisplayState\";\r\n\r\ntype characterFilter = (character: ICachedCharacter | undefined, sheet: CharacterSheet) => boolean\r\n\r\ntype CharacterSelectionModalProps = {\r\n  show: boolean,\r\n  newFirst?: boolean\r\n  onHide: () => void,\r\n  onSelect?: (ckey: CharacterKey) => void,\r\n  filter?: characterFilter\r\n}\r\n\r\nexport function CharacterSelectionModal({ show, onHide, onSelect, filter = () => true, newFirst = false }: CharacterSelectionModalProps) {\r\n  const sortKeys = useMemo(() => newFirst ? [...characterSortKeys] : characterSortKeys.slice(1), [newFirst])\r\n  const { database } = useContext(DatabaseContext)\r\n  const [state, stateDispatch] = useDBState(\"CharacterDisplay\", initialCharacterDisplayState)\r\n  const { weaponType, element } = state\r\n  const { t } = useTranslation([\"page_character\", \"charNames_gen\"])\r\n\r\n  const [sortBy, setsortBy] = useState(sortKeys[0])\r\n  const [ascending, setascending] = useState(false)\r\n\r\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\r\n\r\n  const [favesDirty, setFavesDirty] = useForceUpdate()\r\n  useEffect(() => {\r\n    // character favorite updater\r\n    return database.states.followAny(s => s.includes(\"charMeta_\") && setFavesDirty())\r\n  }, [setFavesDirty, database])\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const deferredSearchTerm = useDeferredValue(searchTerm)\r\n\r\n  const sortConfigs = useMemo(() => characterSheets && characterSortConfigs(database, characterSheets), [database, characterSheets])\r\n  const filterConfigs = useMemo(() => characterSheets && favesDirty && characterFilterConfigs(database, characterSheets), [favesDirty, database, characterSheets])\r\n  const ownedCharacterKeyList = useMemo(() => characterSheets ? allCharacterKeys.filter(k => k.startsWith(\"Traveler\") ? database.chars.getTravelerGenderedKeys().includes(k as TravelerKey) : true).filter(cKey => filter(database.chars.get(cKey), characterSheets[cKey])) : [], [database, characterSheets, filter])\r\n  const characterKeyList = useMemo(() => (characterSheets && sortConfigs && filterConfigs) ?\r\n    ownedCharacterKeyList\r\n      .filter(filterFunction({ element, weaponType, favorite: \"yes\", name: deferredSearchTerm }, filterConfigs))\r\n      .sort(sortFunction(sortBy, ascending, sortConfigs) as (a: CharacterKey, b: CharacterKey) => number)\r\n      .concat(\r\n        ownedCharacterKeyList\r\n          .filter(filterFunction({ element, weaponType, favorite: \"no\", name: deferredSearchTerm }, filterConfigs))\r\n          .sort(sortFunction(sortBy, ascending, sortConfigs) as (a: CharacterKey, b: CharacterKey) => number)\r\n      )\r\n    : [],\r\n    [characterSheets, element, weaponType, sortBy, ascending, sortConfigs, filterConfigs, ownedCharacterKeyList, deferredSearchTerm])\r\n\r\n  if (!characterSheets) return null\r\n  return <ModalWrapper open={show} onClose={onHide} sx={{ \"& .MuiContainer-root\": { justifyContent: \"normal\" } }}>\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1, display: \"flex\", alignItems: \"center\", gap: 1, flexWrap: \"wrap\" }}>\r\n        <WeaponToggle sx={{ height: \"100%\" }} onChange={weaponType => stateDispatch({ weaponType })} value={weaponType} size=\"small\" />\r\n        <ElementToggle sx={{ height: \"100%\" }} onChange={element => stateDispatch({ element })} value={element} size=\"small\" />\r\n        <Box flexGrow={1}>\r\n          <TextField\r\n            autoFocus\r\n            value={searchTerm}\r\n            onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\r\n            label={t(\"characterName\")}\r\n            size=\"small\"\r\n            sx={{ height: \"100%\" }}\r\n            InputProps={{\r\n              sx: { height: \"100%\" }\r\n            }}\r\n          />\r\n        </Box>\r\n        <SortByButton sx={{ height: \"100%\" }}\r\n          sortKeys={sortKeys} value={sortBy} onChange={setsortBy as any}\r\n          ascending={ascending} onChangeAsc={setascending} />\r\n        <CloseButton onClick={onHide} />\r\n      </CardContent>\r\n      <Divider />\r\n      <DataContext.Provider value={{ teamData: undefined } as any}>\r\n        <CardContent><Grid container spacing={1} columns={{ xs: 2, md: 3, lg: 4 }}>\r\n          {characterKeyList.map(characterKey => <Grid item key={characterKey} xs={1} >\r\n            <CharacterCard key={characterKey} hideStats characterKey={characterKey} onClick={() => { onHide(); onSelect?.(characterKey) }} />\r\n          </Grid>)}\r\n        </Grid></CardContent>\r\n      </DataContext.Provider>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\n\r\nexport default function useCharacter(characterKey: CharacterKey | \"\" | undefined = \"\") {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [character, updateCharacter] = useState(database.chars.get(characterKey))\r\n  useEffect(() => updateCharacter(database.chars.get(characterKey)), [database, characterKey])\r\n  useEffect(() =>\r\n    characterKey ? database.chars.follow(characterKey, (k, r, v) => r === \"update\" && updateCharacter(v)) : undefined,\r\n    [characterKey, updateCharacter, database])\r\n  return character\r\n}\r\n","import { useCallback, useContext } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { IConditionalValues } from \"../Types/sheet\";\r\nimport { deepClone } from \"../Util/Util\";\r\n\r\ntype characterReducerBonusStatsAction = {\r\n  type: \"editStats\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\ntype characterReducerenemyOverrideAction = {\r\n  type: \"enemyOverride\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\ntype characterReducerResetStatsAction = {\r\n  type: \"resetStats\",\r\n  statKey: string\r\n}\r\ntype characterTeamAction = {\r\n  type: \"team\",\r\n  index: number,\r\n  charKey: CharacterKey | \"\"\r\n}\r\ntype characterTeamConditional = {\r\n  type: \"teamConditional\",\r\n  teamMateKey: CharacterKey,\r\n  conditional: IConditionalValues\r\n}\r\nexport type characterReducerAction = characterReducerBonusStatsAction | characterReducerenemyOverrideAction | characterReducerResetStatsAction | characterTeamAction | characterTeamConditional | Partial<ICachedCharacter>\r\n\r\nexport default function useCharacterReducer(characterKey: CharacterKey | \"\") {\r\n\r\n  const { database } = useContext(DatabaseContext)\r\n\r\n  return useCallback((action: characterReducerAction): void => {\r\n    if (!characterKey) return\r\n    const character = database.chars.get(characterKey)\r\n    if (!character) return\r\n    if (\"type\" in action) switch (action.type) {\r\n      case \"enemyOverride\": {\r\n        const enemyOverride = character.enemyOverride\r\n        const { statKey, value } = action\r\n        if (enemyOverride[statKey] === value) break\r\n        database.chars.set(characterKey, { ...character, enemyOverride: { ...enemyOverride, [statKey]: value } })\r\n        break\r\n      }\r\n      case \"editStats\": {\r\n        const { statKey, value } = action\r\n        const bonusStats = deepClone(character.bonusStats)\r\n        if (bonusStats[statKey] === value) break\r\n        if (!value) delete bonusStats[statKey]\r\n        else bonusStats[statKey] = value\r\n        database.chars.set(characterKey, { ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"resetStats\": {\r\n        const { statKey } = action\r\n        const bonusStats = character.bonusStats\r\n        delete bonusStats[statKey]\r\n        database.chars.set(characterKey, { ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"teamConditional\": {\r\n        const { teamMateKey, conditional } = action\r\n        const teamConditional = deepClone(character.teamConditional)\r\n        teamConditional[teamMateKey] = conditional\r\n        database.chars.set(characterKey, { ...character, teamConditional })\r\n        break\r\n      }\r\n      case \"team\": {\r\n        const { team: team_ } = character\r\n        const team = [...team_] as ICachedCharacter[\"team\"]\r\n        const { index, charKey } = action\r\n        team[index] = charKey\r\n        // update src character\r\n        database.chars.set(characterKey, { ...character, team })\r\n      }\r\n    } else\r\n      database.chars.set(characterKey, { ...character, ...action })\r\n  }, [characterKey, database])\r\n}\r\n","import { useCallback, useState } from \"react\"\r\n\r\nexport default function useForceUpdate(): [object, () => void] {\r\n  const [stateDirty, update] = useState({})\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return [stateDirty, forceUpdateHook]\r\n}","import { useMediaQuery, useTheme } from \"@mui/material\";\r\n\r\nexport default function useMediaQueryUp() {\r\n  const theme = useTheme();\r\n  const sm = useMediaQuery(theme.breakpoints.up('sm'));\r\n  const md = useMediaQuery(theme.breakpoints.up('md'));\r\n  const lg = useMediaQuery(theme.breakpoints.up('lg'));\r\n  const xl = useMediaQuery(theme.breakpoints.up('xl'));\r\n  if (xl) return \"xl\"\r\n  if (lg) return \"lg\"\r\n  if (md) return \"md\"\r\n  if (sm) return \"sm\"\r\n  return \"xs\"\r\n}\r\n","import { useContext, useDeferredValue, useEffect } from \"react\";\r\nimport { TeamData } from \"../Context/DataContext\";\r\nimport { ArtifactSheet } from \"../Data/Artifacts/ArtifactSheet\";\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\r\nimport { resonanceData } from \"../Data/Resonance\";\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\";\r\nimport { ArtCharDatabase, DatabaseContext } from \"../Database/Database\";\r\nimport { common } from \"../Formula\";\r\nimport { dataObjForArtifact, dataObjForCharacter, dataObjForWeapon, mergeData, uiDataForTeam } from \"../Formula/api\";\r\nimport { Data } from \"../Formula/type\";\r\nimport { ICachedArtifact } from \"../Types/artifact\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { ICachedWeapon } from \"../Types/weapon\";\r\nimport { objectMap } from \"../Util/Util\";\r\nimport useForceUpdate from \"./useForceUpdate\";\r\nimport usePromise from \"./usePromise\";\r\n\r\ntype TeamDataBundle = {\r\n  teamData: Dict<CharacterKey, Data[]>\r\n  teamBundle: Dict<CharacterKey, CharBundle>\r\n}\r\n\r\nexport default function useTeamData(characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[] | Data, overrideWeapon?: ICachedWeapon): TeamData | undefined {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [dbDirty, setDbDirty] = useForceUpdate()\r\n  const dbDirtyDeferred = useDeferredValue(dbDirty)\r\n  const data = usePromise(() => getTeamDataCalc(database, characterKey, mainStatAssumptionLevel, overrideArt, overrideWeapon), [dbDirtyDeferred, characterKey, database, mainStatAssumptionLevel, overrideArt, overrideWeapon])\r\n\r\n  useEffect(() =>\r\n    characterKey ? database.chars.follow(characterKey, setDbDirty) : undefined,\r\n    [characterKey, setDbDirty, database])\r\n\r\n  return data\r\n}\r\n\r\nasync function getTeamDataCalc(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[] | Data, overrideWeapon?: ICachedWeapon):\r\n  Promise<TeamData | undefined> {\r\n  if (!characterKey) return\r\n\r\n  // Retrive from cache\r\n  if (!mainStatAssumptionLevel && !overrideArt && !overrideWeapon) {\r\n    const cache = database._getTeamData(characterKey)\r\n    if (cache) return cache\r\n  }\r\n  const { teamData, teamBundle } = (await getTeamData(database, characterKey, mainStatAssumptionLevel, overrideArt, overrideWeapon)) ?? {}\r\n  if (!teamData || !teamBundle) return\r\n\r\n  const calcData = uiDataForTeam(teamData, characterKey as CharacterKey)\r\n\r\n  const data = objectMap(calcData, (obj, ck) => {\r\n    const { data: _, ...rest } = teamBundle[ck]!\r\n    return { ...obj, ...rest }\r\n  })\r\n  if (!mainStatAssumptionLevel && !overrideArt && !overrideWeapon)\r\n    database.cacheTeamData(characterKey, data)\r\n  return data\r\n}\r\n\r\nexport async function getTeamData(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[] | Data, overrideWeapon?: ICachedWeapon):\r\n  Promise<TeamDataBundle | undefined> {\r\n  if (!characterKey) return\r\n  const character = database.chars.get(characterKey)\r\n  if (!character) return\r\n\r\n  const char1DataBundle = await getCharDataBundle(true, mainStatAssumptionLevel,\r\n    character,\r\n    overrideWeapon ? overrideWeapon : database.weapons.get(character.equippedWeapon)!,\r\n    (overrideArt ?? Object.values(character.equippedArtifacts).map(a => database.arts.get(a)).filter(a => a) as ICachedArtifact[])\r\n  )\r\n  if (!char1DataBundle) return\r\n  const teamBundle = { [characterKey]: char1DataBundle }\r\n  const teamData: Dict<CharacterKey, Data[]> = { [characterKey]: char1DataBundle.data }\r\n\r\n  await Promise.all(char1DataBundle.character.team.map(async (ck) => {\r\n    if (!ck) return\r\n    const tchar = database.chars.get(ck)\r\n    if (!tchar) return\r\n    const databundle = await getCharDataBundle(false, 0,\r\n      { ...tchar, conditional: character.teamConditional[ck] ?? {} },\r\n      database.weapons.get(tchar.equippedWeapon)!,\r\n      Object.values(tchar.equippedArtifacts).map(a => database.arts.get(a)).filter(a => a) as ICachedArtifact[])\r\n    if (!databundle) return\r\n    teamBundle[ck] = databundle\r\n    teamData[ck] = databundle.data\r\n  }))\r\n\r\n  return { teamData, teamBundle }\r\n}\r\ntype CharBundle = {\r\n  character: ICachedCharacter,\r\n  weapon: ICachedWeapon,\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet,\r\n  data: Data[]\r\n}\r\n\r\nasync function getCharDataBundle(useCustom = false, mainStatAssumptionLevel: number,\r\n  character: ICachedCharacter,\r\n  weapon: ICachedWeapon,\r\n  artifacts: ICachedArtifact[] | Data,\r\n): Promise<CharBundle | undefined> {\r\n\r\n  const characterSheet = await CharacterSheet.get(character.key)\r\n  if (!characterSheet) return\r\n  const weaponSheet = await WeaponSheet.get(weapon.key)\r\n  if (!weaponSheet) return\r\n\r\n  const weaponSheetsDataOfType = await WeaponSheet.getAllDataOfType(characterSheet.weaponTypeKey)\r\n\r\n  const weaponSheetsData = useCustom ? (() => {\r\n    // display is included in WeaponSheet.getAllDataOfType\r\n    const { display, ...restWeaponSheetData } = weaponSheet.data\r\n    return mergeData([restWeaponSheetData, weaponSheetsDataOfType])\r\n  })() : weaponSheet.data\r\n\r\n  const artifactSheetsData = await ArtifactSheet.getAllData\r\n  const sheetData = mergeData([characterSheet.data, weaponSheetsData, artifactSheetsData])\r\n  const artifactData = Array.isArray(artifacts) ? artifacts.map(a => dataObjForArtifact(a, mainStatAssumptionLevel)) : [artifacts]\r\n  const data = [\r\n    ...artifactData,\r\n    dataObjForCharacter(character, useCustom ? sheetData : undefined),\r\n    dataObjForWeapon(weapon),\r\n    sheetData,\r\n    common, // NEED TO PUT THIS AT THE END\r\n    resonanceData,\r\n  ]\r\n  return { character, weapon, characterSheet, weaponSheet, data }\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\n\r\nexport default function useWeapon(weaponID: string | undefined = \"\") {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [weapon, setWeapon] = useState(database.weapons.get(weaponID))\r\n  useEffect(() => setWeapon(database.weapons.get(weaponID)), [database, weaponID])\r\n  useEffect(() =>\r\n    weaponID ? database.weapons.follow(weaponID, (k, r, v) => r === \"update\" && setWeapon(v)) : undefined,\r\n    [weaponID, setWeapon, database])\r\n  return weapon\r\n}\r\n","import CharacterSheet from \"../Data/Characters/CharacterSheet\";\r\nimport { initCharMeta } from \"../Database/Data/StateData\";\r\nimport { ArtCharDatabase } from \"../Database/Database\";\r\nimport i18n from \"../i18n\";\r\nimport { CharacterKey, charKeyToCharName } from \"../Types/consts\";\r\nimport { FilterConfigs, SortConfigs } from \"./SortByFilters\";\r\nexport const characterSortKeys = [\"new\", \"level\", \"rarity\", \"name\",] as const\r\nexport type CharacterSortKey = typeof characterSortKeys[number]\r\n\r\nexport function characterSortConfigs(database: ArtCharDatabase, characterSheets: Record<CharacterKey, CharacterSheet>): SortConfigs<CharacterSortKey, CharacterKey> {\r\n  return {\r\n    new: {\r\n      getValue: (ck) => database.chars.get(ck as CharacterKey) ? 0 : 1,\r\n      tieBreaker: \"name\"\r\n    },\r\n    name: {\r\n      getValue: (ck) => i18n.t(`charNames_gen:${charKeyToCharName(ck)}`).toString(),\r\n    },\r\n    level: {\r\n      getValue: (ck) => {\r\n        const char = database.chars.get(ck as CharacterKey)\r\n        if (!char) return 0\r\n        return char.level * char.ascension\r\n      },\r\n      tieBreaker: \"rarity\"\r\n    },\r\n    rarity: {\r\n      getValue: (ck) => characterSheets?.[ck]?.rarity,\r\n      tieBreaker: \"level\"\r\n    }\r\n  }\r\n}\r\n\r\nexport type CharacterFilterConfigs = FilterConfigs<\"element\" | \"weaponType\" | \"favorite\" | \"name\", CharacterKey>\r\nexport function characterFilterConfigs(database: ArtCharDatabase, characterSheets: Record<CharacterKey, CharacterSheet>): CharacterFilterConfigs {\r\n  return {\r\n    element: (ck, filter) => filter.includes(characterSheets?.[ck]?.elementKey),\r\n    weaponType: (ck, filter) => filter.includes(characterSheets?.[ck]?.weaponTypeKey),\r\n    favorite: (ck, filter) =>\r\n      !filter || (filter === (database.states.getWithInit(`charMeta_${ck}`, initCharMeta).favorite ? \"yes\" : \"no\")),\r\n    name: (ck, filter) => !filter || (i18n.t(`charNames_gen:${charKeyToCharName(ck)}`).toLowerCase().includes(filter.toLowerCase()))\r\n  }\r\n}\r\n","import { toggleArr } from \"./Util\"\r\n\r\nexport function handleMultiSelect<T>(allKeys: T[]) {\r\n  return (arr: T[], v: T): T[] => {\r\n    const len = arr.length\r\n    if (len === allKeys.length) return [v]\r\n    if (len === 1 && arr[0] === v) return [...allKeys]\r\n    return [...new Set(toggleArr(arr, v))]\r\n  }\r\n}\r\n","type SortConfig<T> = {\r\n  getValue: (id: T) => number | string\r\n  tieBreaker?: string\r\n}\r\nexport type SortConfigs<Keys extends string, T> = Record<Keys, SortConfig<T>>\r\n\r\nexport function sortFunction<Keys extends string, T>(sortby: string, ascending: boolean, configs: SortConfigs<Keys, T>) {\r\n  function Sort(a: T, b: T, ascending: boolean, config: SortConfig<T>) {\r\n    const aV = config.getValue(a)\r\n    const bV = config.getValue(b)\r\n    let diff = 0\r\n    if (typeof aV === \"string\" && typeof bV === \"string\")\r\n      diff = aV.localeCompare(bV)\r\n    else\r\n      diff = ((bV as number) - (aV as number))\r\n    return (ascending ? -1 : 1) * diff\r\n  }\r\n  return (a: T, b: T) => {\r\n    if (!configs[sortby]) return 0\r\n    const filterOption = configs[sortby]\r\n    let diff = Sort(a, b, ascending, filterOption)\r\n    if (!diff && filterOption.tieBreaker && configs[filterOption.tieBreaker])\r\n      diff = Sort(a, b, ascending, configs[filterOption.tieBreaker])\r\n    return diff\r\n  }\r\n}\r\n\r\ntype FilterConfig<T> = (obj: T, filter: any) => boolean\r\nexport type FilterConfigs<Keys extends string, T> = Record<Keys, FilterConfig<T>>\r\nexport function filterFunction<Keys extends string, T>(filterOptions: Record<Keys, any>, filterConfigs: FilterConfigs<Keys, T>) {\r\n  return (obj: T) => Object.entries(filterOptions).every(([optionKey, optionVal]) => filterConfigs[optionKey as any] && filterConfigs[optionKey as any](obj, optionVal))\r\n}\r\n"],"names":["ArtifactCardPico","art","artifactObj","key","slotKey","artifactSheet","usePromise","setKey","ArtifactSheet","sx","display","flexDirection","height","width","pb","position","left","top","transform","opacity","component","src","Assets","mainStatKey","rarity","level","element","allElementsWithPhy","ele","includes","color","className","slotIcons","maxWidth","maxHeight","fontSize","lineHeight","pointerEvents","p","Artifact","bottom","right","StatIcon","ArtifactTooltip","children","fallback","variant","title","Suspense","ArtifactData","placement","disableInteractive","sheet","substats","slotName","getSlotName","mainStatUnit","KeyMap","mainIcon","mainVariant","artifactSlotIcon","cacheValueString","justifyContent","stars","py","map","stat","value","clamp","rolls","length","name","BootstrapTooltip","styled","props","arrow","classes","popper","theme","tooltipClasses","palette","common","black","backgroundColor","WeaponFullCard","weaponId","weapon","useWeapon","weaponSheet","WeaponSheet","UIData","useMemo","computeUIData","data","dataObjForWeapon","CardDark","Box","flexShrink","alignContent","getImg","ascension","mt","flexGrow","Typography","gutterBottom","gap","SqBadge","hasRefinement","refinement","WeaponStat","node","get","input","info","val","valueString","unit","undefined","CharacterCard","characterKey","artifactChildren","weaponChildren","characterChildren","onClick","onClickHeader","onClickTeammate","footer","hideStats","isTeammateCard","teamDataContext","useContext","DataContext","teamData","useTeamData","character","useCharacter","characterSheet","CharacterSheet","characterDispatch","useCharacterReducer","target","onClickHandler","useCallback","actionWrapperFunc","CardActionArea","characterContextObj","dataContextObj","useDBState","initCharMeta","favorite","setCharMeta","Skeleton","minHeight","CardLight","zIndex","IconButton","_","Favorite","FavoriteBorder","ConditionalWrapper","condition","wrapper","ExistingCharacterCardContent","NewCharacterCardContent","CharacterContext","Header","HeaderContent","CardContent","Artifacts","Grid","container","columns","spacing","item","xs","WeaponCardPico","equippedWeapon","range","i","CharacterCardPico","team","index","Stats","HeaderContentNew","content","backgroundImage","bannerImg","backgroundPosition","backgroundSize","lg","alignSelf","thumbImg","pr","characterEle","characterLevel","constellation","autoBoost","skillBoost","burstBoost","tAuto","tSkill","tBurst","Chip","label","size","flexWrap","textShadow","whiteSpace","ascensionMaxLevel","colored","elementKey","database","DatabaseContext","artifacts","allSlotKeys","k","arts","id","direction","Object","values","getDisplay","basic","n","alignItems","teammateSheet","thumbImgSide","transformOrigin","falseWrapper","cursor","icon","faQuestionCircle","FieldsDisplay","fields","FieldDisplayList","m","field","FieldDisplay","ListItem","oldData","canShow","isEmpty","oldNode","oldValue","NodeFieldDisplay","suffix","textSuffix","BasicFieldDisplay","v","evalIfFunc","text","toFixed","fixed","emphasize","setFormulaData","FormulaDataContext","fieldText","isTeamBuff","fieldFormulaText","formula","fieldVal","diff","formulaTextOverlay","allAmpReactions","mr","AmpReactionModeText","reaction","trigger","subVariant","Divider","orientation","flexItem","boxShadow","Groups","noWrap","List","light","dark","palletOption","borderRadius","shape","overflow","margin","SortByButton","sortKeys","onChange","ascending","onChangeAsc","t","useTranslation","i18nKey","selected","disabled","startIcon","faSortAmountDownAlt","faSortAmountUp","StarIcon","faStar","StarsDisplay","Array","keys","ToggleButton","shouldForwardProp","prop","baseColor","selectedColor","main","contrastText","elementHandler","handleMultiSelect","allElements","ElementToggle","ToggleButtonGroup","exclusive","weaponTypeHandler","allWeaponTypeKeys","WeaponToggle","wt","tooltipAddl","WeaponStatPico","addlText","WeaponNameTooltip","weaponType","createContext","onModalOpen","onModalClose","FormulaDataWrapper","useBoolState","open","onOpen","onClose","useState","setState","Provider","modalOpen","tr","strKey","ns","key18","trm","teamSize","sum","tally","pcNodes","objectKeyValueMap","e","greaterEq","percent","protectiveCanopy","desc","sections","teamBuff","ffNode","ferventFlames","st","swNode","soothingWaters","condSIPath","condSI","condReadNode","siNode","equal","shatteringIce","path","header","states","on","highVoltage","iwNodeStam","iwNodeMove","iwNodeCD","impetuousWinds","condERPath","condER","erNodeshield_","erNodeDMG_","erNodeRes_","enduringRock","sgt","condSC2elePath","condSC2ele","condSC3elePath","condSC3ele","scBase_eleMas","sc2ele_eleMas","sc3ele_eleMas","resonanceSheets","resonanceData","inferInfoMut","premod","atk_","hp_","staminaDec_","moveSPD_","cdRed_","shield_","all_dmg_","geo_enemyRes_","eleMas","infoMut","pivot","total","critRate_","initialCharacterDisplayState","sortType","characterSortKeys","pageIndex","CharacterSelectionModal","show","onHide","onSelect","filter","newFirst","state","stateDispatch","sortBy","setsortBy","setascending","characterSheets","useForceUpdate","favesDirty","setFavesDirty","useEffect","followAny","s","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","sortConfigs","characterSortConfigs","filterConfigs","characterFilterConfigs","ownedCharacterKeyList","allCharacterKeys","startsWith","chars","getTravelerGenderedKeys","cKey","characterKeyList","filterFunction","sort","sortFunction","concat","autoFocus","InputProps","md","updateCharacter","follow","r","action","type","enemyOverride","statKey","set","bonusStats","deepClone","teamMateKey","conditional","teamConditional","team_","charKey","stateDirty","update","useMediaQueryUp","useTheme","sm","useMediaQuery","breakpoints","up","mainStatAssumptionLevel","overrideArt","overrideWeapon","dbDirty","setDbDirty","dbDirtyDeferred","getTeamDataCalc","cache","_getTeamData","getTeamData","teamBundle","calcData","uiDataForTeam","objectMap","obj","ck","rest","cacheTeamData","getCharDataBundle","weapons","equippedArtifacts","a","char1DataBundle","Promise","all","tchar","databundle","useCustom","weaponTypeKey","weaponSheetsDataOfType","weaponSheetsData","restWeaponSheetData","mergeData","artifactSheetsData","sheetData","artifactData","isArray","dataObjForArtifact","dataObjForCharacter","weaponID","setWeapon","new","getValue","tieBreaker","i18n","charKeyToCharName","toString","char","getWithInit","toLowerCase","allKeys","arr","len","Set","toggleArr","sortby","configs","Sort","b","config","aV","bV","localeCompare","filterOption","filterOptions","entries","every","optionKey","optionVal"],"sourceRoot":""}