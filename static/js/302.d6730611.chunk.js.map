{"version":3,"file":"static/js/302.d6730611.chunk.js","mappings":"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","sources":["Components/Artifact/ArtifactAutocomplete.tsx","Components/Artifact/ArtifactLevelSlider.tsx","Components/Card/CardHeaderCustom.tsx","Components/Conditional/ConditionalSelector.tsx","Components/Conditional/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","Components/LevelSelect.tsx","Components/RefinementDropdown.tsx","Components/TextButton.tsx","Components/Weapon/WeaponSelectionModal.tsx","PageCharacter/CharacterDisplay/CharSelectDropdown.tsx","PageCharacter/CharacterDisplay/FormulaModal.tsx","Components/ExpandButton.tsx","Components/StatInput.tsx","Components/EnemyEditor.tsx","PageCharacter/CharacterDisplay/StatModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/BackgroundWorker.ts","Context/OptimizationTargetContext.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/common.ts","Components/Artifact/SetEffectDisplay.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/useBuildSetting.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ArtifactSetConfig.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/AssumeFullLevelToggle.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BonusStatsCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildAlert.tsx","Components/Artifact/ArtifactCardNano.tsx","Components/Character/StatDisplayComponent.tsx","Components/Weapon/WeaponCardNano.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildDisplayItem.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ChartCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/MainStatSelectionCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/StatFilterCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/DBState.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseEquipped.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseExcluded.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/foreground.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/CompareBuildButton.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/ArtifactSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/WeaponSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/EquipmentSection.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabTalent.tsx","PageCharacter/CharacterDisplay/Tabs/TabTheorycraft/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabTheorycraft/useCharTC.tsx","PageCharacter/CharacterDisplay/Tabs/TabTeambuffs.tsx","PageCharacter/CharacterDisplay/TravelerElementSelect.tsx","PageCharacter/CharacterDisplay/index.tsx","PageWeapon/WeaponCard.tsx","Util/TimeUtil.ts","Util/WeaponSort.ts"],"sourcesContent":["import { Autocomplete, AutocompleteProps, AutocompleteRenderGroupParams, Box, Chip, List, ListSubheader, TextField, useTheme } from '@mui/material';\r\nimport { useMemo } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ArtifactSheet } from '../../Data/Artifacts/ArtifactSheet';\r\nimport i18n from '../../i18n';\r\nimport KeyMap from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { allMainStatKeys, allSubstatKeys, MainStatKey, SubstatKey } from '../../Types/artifact';\r\nimport { allElementsWithPhy, ArtifactRarity, ArtifactSetKey } from '../../Types/consts';\r\nimport MenuItemWithImage from '../MenuItemWithImage';\r\nimport SolidColoredTextField from '../SolidColoredTextfield';\r\nimport { StarsDisplay } from '../StarDisplay';\r\nimport StatIcon from '../StatIcon';\r\n\r\ntype Grouper = string | number | undefined\r\n\r\ntype ArtifactMultiAutocompleteKey = ArtifactSetKey | MainStatKey | SubstatKey\r\ntype ArtifactMultiAutocompleteOption<T extends ArtifactMultiAutocompleteKey, G extends Grouper> = {\r\n  key: T\r\n  label: string\r\n  grouper?: G\r\n}\r\ntype ArtifactMultiAutocompleteProps<T extends ArtifactMultiAutocompleteKey, G extends Grouper> = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<T, G>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\r\n  allArtifactKeysWithGrouper: readonly { key: T, grouper?: G }[]\r\n  selectedArtifactKeys: T[]\r\n  setArtifactKeys: (keys: T[]) => void\r\n  getName: (key: T) => string\r\n  getImage: (key: T) => JSX.Element\r\n  label: string\r\n}\r\nfunction ArtifactMultiAutocomplete<T extends ArtifactMultiAutocompleteKey, G extends Grouper>({ allArtifactKeysWithGrouper, selectedArtifactKeys, setArtifactKeys, getName, getImage, label, ...props }:\r\n  ArtifactMultiAutocompleteProps<T, G>) {\r\n  const theme = useTheme()\r\n\r\n  const handleChange = (_, value: ArtifactMultiAutocompleteOption<T, G>[]) => {\r\n    setArtifactKeys(value.map(v => v.key))\r\n  }\r\n  const options = useMemo(() => allArtifactKeysWithGrouper.map(({ key, grouper }) => ({ key, label: getName(key), grouper })), [allArtifactKeysWithGrouper, getName])\r\n  return <Autocomplete\r\n    autoHighlight\r\n    multiple\r\n    disableCloseOnSelect\r\n    options={options}\r\n    value={selectedArtifactKeys.map(key => ({ key: key, label: getName(key) }))}\r\n    onChange={handleChange}\r\n    getOptionLabel={(option) => option.label}\r\n    isOptionEqualToValue={(option, value) => option.key === value.key}\r\n    renderInput={(params) => <TextField\r\n      {...params}\r\n      label={label}\r\n      variant=\"filled\"\r\n      InputLabelProps={{ style: { color: theme.palette.text.primary } }}\r\n      color={selectedArtifactKeys.length ? \"success\" : \"primary\"}\r\n      type=\"search\"\r\n    />}\r\n    renderOption={(props, option) => (\r\n      <MenuItemWithImage\r\n        key={option.key}\r\n        value={option.key}\r\n        image={getImage(option.key)}\r\n        text={option.label}\r\n        theme={theme}\r\n        isSelected={selectedArtifactKeys.includes(option.key)}\r\n        props={props}\r\n      />\r\n    )}\r\n    renderTags={(selected, getTagProps) => selected.map((value, index) => {\r\n      const element = allElementsWithPhy.find(ele => value.key === `${ele}_dmg_`)\r\n      const color = element ? element : undefined\r\n      return <Chip {...getTagProps({ index })} key={value.key} icon={getImage(value.key)} label={value.label} color={color} />\r\n    })}\r\n    {...props}\r\n  />\r\n}\r\n\r\ntype ArtifactSetMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<ArtifactSetKey, ArtifactRarity>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\r\n  artSetKeys: ArtifactSetKey[]\r\n  setArtSetKeys: (keys: ArtifactSetKey[]) => void\r\n}\r\nexport function ArtifactSetMultiAutocomplete({ artSetKeys, setArtSetKeys, ...props }: ArtifactSetMultiAutocompleteProps) {\r\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\r\n  const { t } = useTranslation([\"artifact\", \"artifactNames_gen\"])\r\n  if (!artifactSheets) return null\r\n\r\n  const allArtifactSetsAndRarities = Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets))\r\n    .flatMap(([rarity, sets]) => sets.map(set => ({ key: set, grouper: +rarity as ArtifactRarity })))\r\n    .sort(sortByRarityAndName)\r\n\r\n  return <ArtifactMultiAutocomplete<ArtifactSetKey, ArtifactRarity>\r\n    allArtifactKeysWithGrouper={allArtifactSetsAndRarities}\r\n    selectedArtifactKeys={artSetKeys}\r\n    setArtifactKeys={setArtSetKeys}\r\n    getName={(key: ArtifactSetKey) => artifactSheets[key].nameRaw}\r\n    getImage={(key: ArtifactSetKey) => artifactSheets[key].defIcon}\r\n    label={t(\"artifact:autocompleteLabels.sets\")}\r\n    groupBy={(option) => option.grouper?.toString() ?? \"\"}\r\n    renderGroup={(params: AutocompleteRenderGroupParams) => params.group && <List key={params.group} component={Box}>\r\n      <ListSubheader key={`${params.group}Header`} sx={{ top: \"-1em\" }}>\r\n        {params.group} <StarsDisplay stars={+params.group as ArtifactRarity} />\r\n      </ListSubheader>\r\n      {params.children}\r\n    </List>}\r\n    {...props}\r\n  />\r\n}\r\n\r\ntype ArtifactMainStatMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<MainStatKey, undefined>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\r\n  mainStatKeys: MainStatKey[]\r\n  setMainStatKeys: (keys: MainStatKey[]) => void\r\n}\r\nexport function ArtifactMainStatMultiAutocomplete({ mainStatKeys, setMainStatKeys, ...props }: ArtifactMainStatMultiAutocompleteProps) {\r\n  const { t } = useTranslation(\"artifact\")\r\n  return <ArtifactMultiAutocomplete<MainStatKey, undefined>\r\n    allArtifactKeysWithGrouper={allMainStatKeys.map(key => ({ key }))}\r\n    selectedArtifactKeys={mainStatKeys}\r\n    setArtifactKeys={setMainStatKeys}\r\n    getName={(key: MainStatKey) => KeyMap.getArtStr(key)}\r\n    getImage={(key: MainStatKey) => StatIcon[key]}\r\n    label={t(\"autocompleteLabels.mainStats\")}\r\n    {...props}\r\n  />\r\n}\r\n\r\ntype ArtifactSubstatMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<SubstatKey, undefined>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\r\n  substatKeys: SubstatKey[]\r\n  setSubstatKeys: (keys: SubstatKey[]) => void\r\n}\r\nexport function ArtifactSubstatMultiAutocomplete({ substatKeys, setSubstatKeys, ...props }: ArtifactSubstatMultiAutocompleteProps) {\r\n  const { t } = useTranslation(\"artifact\")\r\n  return <ArtifactMultiAutocomplete<SubstatKey, undefined>\r\n    allArtifactKeysWithGrouper={allSubstatKeys.map(key => ({ key }))}\r\n    selectedArtifactKeys={substatKeys}\r\n    setArtifactKeys={setSubstatKeys}\r\n    getName={(key: SubstatKey) => KeyMap.getArtStr(key)}\r\n    getImage={(key: SubstatKey) => StatIcon[key]}\r\n    label={t(\"autocompleteLabels.substats\")}\r\n    {...props}\r\n  />\r\n}\r\n\r\ntype ArtifactSingleAutocompleteKey = ArtifactSetKey | MainStatKey | SubstatKey | \"\"\r\ntype ArtifactSingleAutocompleteOption<T extends ArtifactSingleAutocompleteKey, G extends Grouper> = {\r\n  key: T\r\n  label: string\r\n  grouper?: G\r\n}\r\ntype ArtifactSingleAutocompleteProps<T extends ArtifactSingleAutocompleteKey, G extends Grouper> = Omit<AutocompleteProps<ArtifactSingleAutocompleteOption<T, G>, false, true, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\r\n  allArtifactKeysWithGrouper: readonly { key: T, grouper?: G }[]\r\n  selectedArtifactKey: T\r\n  setArtifactKey: (key: T | \"\") => void\r\n  getName: (key: T) => string\r\n  getImage: (key: T) => JSX.Element\r\n  label: string\r\n  disable?: (v: any) => boolean\r\n  showDefault?: boolean\r\n  defaultText?: string\r\n  defaultIcon?: Displayable\r\n}\r\nfunction ArtifactSingleAutocomplete<T extends ArtifactSingleAutocompleteKey, G extends Grouper>({ allArtifactKeysWithGrouper, selectedArtifactKey, setArtifactKey, getName, getImage, label, disable = () => false, showDefault = false, defaultText = \"\", defaultIcon = \"\", ...props }:\r\n  ArtifactSingleAutocompleteProps<T, G>) {\r\n  const theme = useTheme();\r\n\r\n  const options = useMemo(() =>\r\n    (showDefault\r\n      ? [{ key: \"\" as T, label: defaultText }]\r\n      : []\r\n    ).concat(allArtifactKeysWithGrouper.map(({ key, grouper }) => (\r\n      { key, label: getName(key), grouper }\r\n    ))), [allArtifactKeysWithGrouper, getName, defaultText, showDefault])\r\n\r\n  return <Autocomplete\r\n    autoHighlight\r\n    options={options}\r\n    clearIcon={selectedArtifactKey ? undefined : \"\"} // Hide the clear icon if the value is already default\r\n    value={{ key: selectedArtifactKey, label: getName(selectedArtifactKey) }}\r\n    onChange={(event, newValue, reason) => (event.type !== \"change\" || reason !== \"clear\") && setArtifactKey(newValue ? newValue.key : \"\")}\r\n    getOptionLabel={(option) => option.label ? option.label : defaultText}\r\n    isOptionEqualToValue={(option, value) => option.key === value.key}\r\n    getOptionDisabled={option => disable(option.key)}\r\n    renderInput={(props) => <SolidColoredTextField\r\n      {...props}\r\n      label={label}\r\n      startAdornment={getImage(selectedArtifactKey)}\r\n      hasValue={selectedArtifactKey ? true : false}\r\n    />}\r\n    renderOption={(props, option) => (\r\n      <MenuItemWithImage\r\n        key={option.key}\r\n        value={option.key}\r\n        image={getImage(option.key)}\r\n        text={option.label}\r\n        theme={theme}\r\n        isSelected={selectedArtifactKey === option.key}\r\n        props={props}\r\n      />\r\n    )}\r\n    {...props}\r\n  />\r\n}\r\n\r\ntype ArtifactSetSingleAutocompleteProps = Omit<AutocompleteProps<ArtifactSingleAutocompleteOption<ArtifactSetKey | \"\", ArtifactRarity>, false, true, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\r\n  artSetKey: ArtifactSetKey | \"\"\r\n  setArtSetKey: (key: ArtifactSetKey | \"\") => void\r\n  label?: string\r\n  disable?: (v: any) => boolean\r\n  showDefault?: boolean\r\n  defaultText?: string\r\n  defaultIcon?: Displayable\r\n}\r\nexport function ArtifactSetSingleAutocomplete({ artSetKey, setArtSetKey, label = \"\", ...props }: ArtifactSetSingleAutocompleteProps) {\r\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\r\n  const { t } = useTranslation([\"artifact\", \"artifactNames_gen\"])\r\n  label = label ? label : t(\"artifact:autocompleteLabels.set\")\r\n  if (!artifactSheets) return null\r\n\r\n  const allArtifactSetsAndRarities = Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets))\r\n    .flatMap(([rarity, sets]) => sets.map(set => ({ key: set, grouper: +rarity as ArtifactRarity })))\r\n    .sort(sortByRarityAndName)\r\n\r\n  return <ArtifactSingleAutocomplete<ArtifactSetKey | \"\", ArtifactRarity>\r\n    allArtifactKeysWithGrouper={allArtifactSetsAndRarities}\r\n    selectedArtifactKey={artSetKey}\r\n    setArtifactKey={setArtSetKey}\r\n    getName={(key: ArtifactSetKey | \"\") => key && artifactSheets[key].nameRaw}\r\n    getImage={(key: ArtifactSetKey | \"\") => key ? artifactSheets[key].defIcon : <></>}\r\n    label={label}\r\n    groupBy={(option) => option.grouper?.toString() ?? \"\"}\r\n    renderGroup={(params: AutocompleteRenderGroupParams) => params.group && <List key={params.group} component={Box}>\r\n      <ListSubheader key={`${params.group}Header`} sx={{ top: \"-1em\" }}>\r\n        {params.group} <StarsDisplay stars={+params.group as ArtifactRarity} />\r\n      </ListSubheader>\r\n      {params.children}\r\n    </List>}\r\n    {...props}\r\n  />\r\n}\r\n\r\nfunction sortByRarityAndName(a: { key: ArtifactSetKey, grouper: ArtifactRarity }, b: { key: ArtifactSetKey, grouper: ArtifactRarity }) {\r\n  if (a.grouper > b.grouper) {\r\n    return -1\r\n  }\r\n  if (a.grouper < b.grouper) {\r\n    return 1\r\n  }\r\n\r\n  const aName = i18n.t(`artifactNames_gen:${a.key}`)\r\n  const bName = i18n.t(`artifactNames_gen:${b.key}`)\r\n  if (aName < bName) {\r\n    return -1\r\n  }\r\n  if (aName > bName) {\r\n    return 1\r\n  }\r\n\r\n  return 0\r\n}\r\n","import { Card, Slider } from \"@mui/material\"\r\nimport { useCallback, useEffect, useState } from \"react\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport CustomNumberInput from \"../CustomNumberInput\"\r\n\r\nexport default function ArtifactLevelSlider({ levelLow, levelHigh, setLow, setHigh, setBoth, dark = false, disabled = false, showLevelText = false }: {\r\n  levelLow: number,\r\n  levelHigh: number,\r\n  setLow: (low: number) => void,\r\n  setHigh: (high: number) => void,\r\n  setBoth: (low: number, high: number) => void,\r\n  dark?: boolean,\r\n  disabled?: boolean,\r\n  showLevelText?: boolean,\r\n}) {\r\n  const [sliderLow, setsliderLow] = useState(levelLow)\r\n  const [sliderHigh, setsliderHigh] = useState(levelHigh)\r\n  const setSlider = useCallback(\r\n    (e: unknown, value: number | number[]) => {\r\n      if (typeof value == \"number\") throw new TypeError()\r\n      const [l, h] = value\r\n      setsliderLow(l)\r\n      setsliderHigh(h)\r\n    },\r\n    [setsliderLow, setsliderHigh])\r\n  useEffect(() => setsliderLow(levelLow), [setsliderLow, levelLow])\r\n\r\n  useEffect(() => setsliderHigh(levelHigh), [setsliderHigh, levelHigh])\r\n  return <Card sx={{ width: \"100%\", display: \"flex\", alignItems: \"center\", bgcolor: dark ? \"contentDark.main\" : \"contentLight.main\" }}>\r\n    <CustomNumberInput\r\n      value={sliderLow}\r\n      onChange={val => setLow(clamp(val, 0, levelHigh))}\r\n      sx={{ px: 1, pl: showLevelText ? 2 : undefined, width: showLevelText ? 100 : 50, }}\r\n      inputProps={{ sx: { textAlign: \"center\" } }}\r\n      startAdornment={showLevelText ? \"Level: \" : undefined}\r\n      disabled={disabled}\r\n    />\r\n    <Slider sx={{ width: 100, flexGrow: 1, mx: 2 }}\r\n      getAriaLabel={() => 'Arifact Level Range'}\r\n      value={[sliderLow, sliderHigh]}\r\n      onChange={setSlider}\r\n      onChangeCommitted={(e, value) => setBoth(value[0], value[1])}\r\n      valueLabelDisplay=\"auto\"\r\n      min={0} max={20} step={1} marks\r\n      disabled={disabled}\r\n    />\r\n    <CustomNumberInput\r\n      value={sliderHigh}\r\n      onChange={val => setHigh(clamp(val, levelLow, 20))}\r\n      sx={{ px: 1, width: 50, }}\r\n      inputProps={{ sx: { textAlign: \"center\" } }}\r\n      disabled={disabled}\r\n    />\r\n  </Card>\r\n}\r\n","import { Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nexport default function CardHeaderCustom({ avatar, title, action }: { avatar?: Displayable, title: Displayable, action?: Displayable }) {\r\n  return <Box display=\"flex\" gap={1} p={2} alignItems=\"center\" >\r\n    {avatar}\r\n    <Typography variant=\"subtitle1\" sx={{ flexGrow: 1 }}>{title}</Typography>\r\n    {action && <Typography variant=\"caption\">{action}</Typography>}\r\n  </Box>\r\n}\r\n","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\r\nimport { Button, ButtonGroup, ButtonProps, Divider, MenuItem } from '@mui/material';\r\nimport React, { useCallback, useContext } from 'react';\r\nimport { CharacterContext } from '../../Context/CharacterContext';\r\nimport { DataContext } from '../../Context/DataContext';\r\nimport { DocumentConditional, IDocumentConditionalExclusive, IDocumentConditionalMultiple } from '../../Types/sheet';\r\nimport { deepClone, deletePropPath, layeredAssignment } from '../../Util/Util';\r\nimport DropdownButton from '../DropdownMenu/DropdownButton';\r\nimport SqBadge from '../SqBadge';\r\nimport { Translate } from '../Translate';\r\n\r\ninterface ConditionalSelectorProps {\r\n  conditional: DocumentConditional,\r\n  disabled?: boolean,\r\n}\r\nexport default function ConditionalSelector({ conditional, disabled = false, }: ConditionalSelectorProps) {\r\n  if (Object.keys(conditional.states).length === 1 && \"path\" in conditional) {\r\n    return <SimpleConditionalSelector conditional={conditional} disabled={disabled} />\r\n  } else if (\"path\" in conditional) {\r\n    return <ExclusiveConditionalSelector conditional={conditional} disabled={disabled} />\r\n  } else /*if (\"path\" in Object.entries(conditional.states)[0]) */ {\r\n    return <MultipleConditionalSelector conditional={conditional} disabled={disabled} />\r\n  }\r\n}\r\n\r\ninterface SimpleConditionalSelectorProps extends ConditionalSelectorProps {\r\n  conditional: IDocumentConditionalExclusive\r\n}\r\nfunction SimpleConditionalSelector({ conditional, disabled }: SimpleConditionalSelectorProps) {\r\n  const { character, characterDispatch } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const setConditional = useCallback((v?: string) => {\r\n    const conditionalValues = deepClone(character.conditional)\r\n    if (v) {\r\n      layeredAssignment(conditionalValues, conditional.path, v)\r\n    } else {\r\n      deletePropPath(conditionalValues, conditional.path)\r\n    }\r\n    characterDispatch({ conditional: conditionalValues })\r\n  }, [conditional, character, characterDispatch])\r\n\r\n  const conditionalValue = data.get(conditional.value).value\r\n  const [stateKey, st] = Object.entries(conditional.states)[0]\r\n  const badge = getStateBadge(st.name)\r\n  const condName = getCondName(conditional.name)\r\n\r\n  return <Button fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} onClick={() => setConditional(conditionalValue ? undefined : stateKey)} disabled={disabled} startIcon={conditionalValue ? <CheckBox /> : <CheckBoxOutlineBlank />}>\r\n    {condName} {badge}\r\n  </Button>\r\n}\r\n\r\ninterface ExclusiveConditionalSelectorProps extends ConditionalSelectorProps {\r\n  conditional: IDocumentConditionalExclusive\r\n}\r\nfunction ExclusiveConditionalSelector({ conditional, disabled }: ExclusiveConditionalSelectorProps) {\r\n  const { character, characterDispatch } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const setConditional = useCallback((v?: string) => {\r\n    const conditionalValues = deepClone(character.conditional)\r\n    if (v) {\r\n      layeredAssignment(conditionalValues, conditional.path, v)\r\n    } else {\r\n      deletePropPath(conditionalValues, conditional.path)\r\n    }\r\n    characterDispatch({ conditional: conditionalValues })\r\n  }, [conditional, character, characterDispatch])\r\n\r\n  const conditionalValue = data.get(conditional.value).value\r\n  const state = conditionalValue ? conditional.states[conditionalValue] : undefined\r\n  const badge = state ? getStateBadge(state.name) : <SqBadge color=\"secondary\">Not Active</SqBadge>\r\n  const condName = getCondName(conditional.name)\r\n\r\n  return <DropdownButton fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} title={<span>{condName} {badge}</span>} disabled={disabled}>\r\n    <MenuItem onClick={() => setConditional()} selected={!state} disabled={!state}>\r\n      <span>Not Active</span>\r\n    </MenuItem>\r\n    <Divider />\r\n    {Object.entries(conditional.states).map(([stateKey, st]) =>\r\n      <MenuItem key={stateKey} onClick={() => setConditional(stateKey)} selected={conditionalValue === stateKey} disabled={conditionalValue === stateKey} >{st.name}</MenuItem>)}\r\n  </DropdownButton>\r\n}\r\n\r\ninterface MultipleConditionalSelectorProps extends ConditionalSelectorProps {\r\n  conditional: IDocumentConditionalMultiple\r\n}\r\nfunction MultipleConditionalSelector({ conditional, disabled }: MultipleConditionalSelectorProps) {\r\n  const { character, characterDispatch } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const setConditional = useCallback((path: readonly string[], v?: string) => {\r\n    const conditionalValues = deepClone(character.conditional)\r\n    if (v) {\r\n      layeredAssignment(conditionalValues, path, v)\r\n    } else {\r\n      deletePropPath(conditionalValues, path)\r\n    }\r\n    characterDispatch({ conditional: conditionalValues })\r\n  }, [character, characterDispatch])\r\n\r\n  return <ButtonGroup fullWidth orientation=\"vertical\" disableElevation color=\"secondary\" >\r\n    {Object.entries(conditional.states).map(([stateKey, st]) => {\r\n      const conditionalValue = data.get(st.value).value\r\n      const isSelected = conditionalValue === stateKey\r\n      return <Button\r\n        color={isSelected ? \"success\" : \"primary\"}\r\n        disabled={disabled}\r\n        fullWidth\r\n        key={stateKey}\r\n        onClick={() => setConditional(st.path, conditionalValue ? undefined : stateKey)}\r\n        size=\"small\"\r\n        startIcon={isSelected ? <CheckBox /> : <CheckBoxOutlineBlank />}\r\n        sx={{ borderRadius: 0 }}\r\n      >\r\n        {getCondName(st.name)}\r\n      </Button>\r\n    })}\r\n  </ButtonGroup>\r\n}\r\n\r\nfunction isElement(disp: Displayable): disp is JSX.Element {\r\n  return (typeof disp !== \"string\")\r\n}\r\n\r\n// Use colored badges instead of colored text inside these buttons\r\nfunction getStateBadge(stateName: Displayable | undefined): Displayable {\r\n  if (!stateName) return \"\"\r\n\r\n  let badgeColor: ButtonProps['color'] = \"primary\"\r\n  let badgeText = stateName\r\n  if (stateName && isElement(stateName)) {\r\n    if (stateName.props.color) {\r\n      badgeColor = stateName.props.color\r\n      badgeText = <span>{stateName.props.children}</span>\r\n    }\r\n  }\r\n  return <SqBadge sx={{ ml: 0.5 }} color={badgeColor}>{badgeText}</SqBadge>\r\n}\r\n\r\n// Use colored badges instead of colored text inside these buttons\r\nfunction getCondName(condName: Displayable): Displayable {\r\n  if (isElement(condName)) {\r\n    const key = condName.props.key18\r\n    const ns = condName.props.ns\r\n    const values = condName.props.values\r\n    return <Translate ns={ns} key18={key} values={values} useBadge />\r\n  }\r\n  return condName\r\n}\r\n","import { CardContent } from \"@mui/material\"\r\nimport { useContext } from \"react\"\r\nimport { DataContext } from \"../../Context/DataContext\"\r\nimport { DocumentConditional, DocumentSection } from \"../../Types/sheet\"\r\nimport { evalIfFunc } from \"../../Util/Util\"\r\nimport CardDark from \"../Card/CardDark\"\r\nimport { HeaderDisplay } from \"../DocumentDisplay\"\r\nimport FieldsDisplay from \"../FieldDisplay\"\r\nimport ConditionalSelector from \"./ConditionalSelector\"\r\n\r\ntype ConditionalDisplayProps = {\r\n  conditional: DocumentConditional,\r\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\r\n  hideDesc?: boolean,\r\n}\r\n\r\nexport default function ConditionalDisplay({ conditional, hideHeader = false, hideDesc = false }: ConditionalDisplayProps) {\r\n  const { data } = useContext(DataContext)\r\n  let fields\r\n  if (\"path\" in conditional) {\r\n    const condVal = data.get(conditional.value).value\r\n    fields = condVal && conditional.states[condVal]?.fields\r\n  } else /* if (\"path\" in Object.entries(conditional.states)[0]) */ {\r\n    fields = Object.values(conditional.states).flatMap(state => {\r\n      const stateVal = data.get(state.value).value\r\n      return stateVal ? state.fields : []\r\n    })\r\n  }\r\n  return <CardDark>\r\n    {!evalIfFunc(hideHeader, conditional) && <HeaderDisplay header={conditional.header} hideDesc={hideDesc} />}\r\n    <CardContent sx={{ p: 0, \"&:last-child\": { pb: 0 } }}>\r\n      <ConditionalSelector conditional={conditional} />\r\n    </CardContent>\r\n    {fields && <FieldsDisplay fields={fields} />}\r\n  </CardDark>\r\n}\r\n","import { Box, Divider, Typography } from \"@mui/material\"\r\nimport { useContext } from \"react\"\r\nimport { DataContext } from \"../Context/DataContext\"\r\nimport { DocumentSection, IDocumentFields, IDocumentHeader, IDocumentText } from \"../Types/sheet\"\r\nimport { evalIfFunc } from \"../Util/Util\"\r\nimport CardDark from \"./Card/CardDark\"\r\nimport CardHeaderCustom from \"./Card/CardHeaderCustom\"\r\nimport ConditionalDisplay from \"./Conditional/ConditionalDisplay\"\r\nimport FieldsDisplay from \"./FieldDisplay\"\r\nimport InfoTooltip from \"./InfoTooltip\"\r\n\r\ntype DocumentDisplayProps = {\r\n  sections: DocumentSection[],\r\n  teamBuffOnly?: boolean,\r\n  hideDesc?: boolean,\r\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\r\n}\r\n\r\nexport default function DocumentDisplay({ sections, teamBuffOnly, hideDesc = false, hideHeader = false }: DocumentDisplayProps) {\r\n  const { data } = useContext(DataContext)\r\n  if (!sections.length) return null\r\n  const sectionDisplays = sections.map((s, i) => {\r\n    // If we can't show this section, return null\r\n    if (s.canShow && !data.get(s.canShow).value) return null\r\n    // If we are showing only teambuffs, and this section is not a teambuff, return null\r\n    if (teamBuffOnly && !s.teamBuff) return null\r\n    return <SectionDisplay section={s} key={i} hideDesc={hideDesc} hideHeader={hideHeader} />\r\n  }).filter(s => s)\r\n  if (!sectionDisplays.length) return null\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>{sectionDisplays}</Box>\r\n}\r\n\r\nfunction SectionDisplay({ section, hideDesc = false, hideHeader = false }: { section: DocumentSection, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\r\n  if (\"fields\" in section) {\r\n    return <FieldsSectionDisplay section={section} hideDesc={hideDesc} hideHeader={hideHeader} />\r\n  } else if (\"states\" in section) {\r\n    return <ConditionalDisplay conditional={section} hideDesc={hideDesc} hideHeader={hideHeader} />\r\n  } else /* if (\"text\" in section) */ {\r\n    return <TextSectionDisplay section={section} />\r\n  }\r\n}\r\n\r\nfunction FieldsSectionDisplay({ section, hideDesc, hideHeader }: { section: IDocumentFields, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\r\n  return <CardDark>\r\n    {!evalIfFunc(hideHeader, section) && section.header &&\r\n      <HeaderDisplay header={section.header} hideDesc={hideDesc} hideDivider={section.fields.length === 0} />\r\n    }\r\n    <FieldsDisplay fields={section.fields} />\r\n  </CardDark>\r\n}\r\n\r\nfunction TextSectionDisplay({ section }: { section: IDocumentText }) {\r\n  const { data } = useContext(DataContext)\r\n  return <div>\r\n    {evalIfFunc(section.text, data)}\r\n  </div>\r\n}\r\n\r\nexport function HeaderDisplay({ header, hideDesc, hideDivider }: { header: IDocumentHeader, hideDesc?: boolean, hideDivider?: boolean | ((section: DocumentSection) => boolean) }) {\r\n  const { data } = useContext(DataContext)\r\n  let { icon, title, action } = header\r\n  icon = evalIfFunc(icon, data)\r\n  const description = !hideDesc && evalIfFunc(header.description, data)\r\n  const displayTitle = hideDesc ? title : <span>{title} <InfoTooltip title={<Typography>{description}</Typography>} /></span>\r\n  return <>\r\n    <CardHeaderCustom avatar={icon} title={displayTitle} action={action} />\r\n    {!hideDivider && <Divider />}\r\n  </>\r\n}\r\n","import { Button, ButtonGroup, MenuItem } from '@mui/material';\r\nimport { useCallback } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ambiguousLevel, ambiguousLevelLow, ascensionMaxLevel, ascensionMaxLevelLow, maxLevel, maxLevelLow, milestoneLevels, milestoneLevelsLow } from '../Data/LevelData';\r\nimport { Ascension } from '../Types/consts';\r\nimport { clamp } from '../Util/Util';\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from './CustomNumberInput';\r\nimport DropdownButton from './DropdownMenu/DropdownButton';\r\n\r\nexport default function LevelSelect({ level, ascension, setBoth, useLow = false }: { level: number, ascension: Ascension, setBoth: (action: { level?: number, ascension?: Ascension }) => void, useLow?: boolean }) {\r\n  const { t } = useTranslation(\"ui\")\r\n  const ascensionMaxLevels = useLow ? ascensionMaxLevelLow : ascensionMaxLevel\r\n  const setLevel = useCallback((level: number = 1) => {\r\n    level = clamp(level, 1, useLow ? maxLevelLow : maxLevel)\r\n    const ascension = ascensionMaxLevels.findIndex(ascenML => level <= ascenML) as Ascension\r\n    setBoth({ level, ascension })\r\n  }, [setBoth, ascensionMaxLevels, useLow])\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevels.findIndex(ascenML => level !== 90 && level === ascenML) as Ascension\r\n    if (ascension === lowerAscension) setBoth({ ascension: (ascension + 1) as Ascension })\r\n    else setBoth({ ascension: lowerAscension })\r\n  }, [setBoth, ascensionMaxLevels, ascension, level])\r\n  return <ButtonGroup sx={{ bgcolor: t => t.palette.contentDark.main }} >\r\n    <CustomNumberInputButtonGroupWrapper >\r\n      <CustomNumberInput onChange={setLevel} value={level}\r\n        startAdornment=\"Lv. \"\r\n        inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\", width: \"3em\" } }}\r\n        sx={{ height: \"100%\", pl: 2 }} />\r\n    </CustomNumberInputButtonGroupWrapper>\r\n    <Button sx={{ pl: 1, whiteSpace: 'nowrap' }} disabled={!(useLow ? ambiguousLevelLow : ambiguousLevel)(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\r\n    <DropdownButton title={t(\"selectlevel\")} sx={{ flexGrow: 1 }}>\r\n      {[...(useLow ? milestoneLevelsLow : milestoneLevels)].map(([lv, as]) => {\r\n        const selected = lv === level && as === ascension\r\n        return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => setBoth({ level: lv, ascension: as })}>\r\n          {lv === ascensionMaxLevels[as] ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevels[as]}`}\r\n        </MenuItem>\r\n      })}\r\n    </DropdownButton>\r\n  </ButtonGroup>\r\n}\r\n","import { MenuItem } from \"@mui/material\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { allRefinement, Refinement } from \"../Types/consts\"\r\nimport DropdownButton from \"./DropdownMenu/DropdownButton\"\r\n\r\nexport default function RefinementDropdown({ refinement, setRefinement }: { refinement: Refinement, setRefinement: (r: Refinement) => void }) {\r\n  const { t } = useTranslation(\"ui\")\r\n  return <DropdownButton title={t(\"refinement\", { value: refinement })}>\r\n    {allRefinement.map(r =>\r\n      <MenuItem key={r} onClick={() => setRefinement(r)} selected={refinement === r} disabled={refinement === r}>\r\n        {t(\"refinement\", { value: r })}\r\n      </MenuItem>)}\r\n  </DropdownButton>\r\n}\r\n","import { Button, ButtonProps, styled } from \"@mui/material\";\r\n\r\nconst DisabledButton = styled(Button)(({ theme }) => ({\r\n  \"&.Mui-disabled\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.text.secondary,\r\n  }\r\n}))\r\n\r\nexport default function TextButton({ children, disabled, ...props }: ButtonProps) {\r\n  return <DisabledButton {...props} disabled  >\r\n    {children}\r\n  </DisabledButton>\r\n}\r\n","import { Box, CardActionArea, CardContent, Divider, Grid, TextField, Typography } from \"@mui/material\"\r\nimport { ChangeEvent, useDeferredValue, useEffect, useState } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { allWeaponKeys, allWeaponTypeKeys, WeaponKey, WeaponTypeKey } from \"../../Types/consts\"\r\nimport CardDark from \"../Card/CardDark\"\r\nimport CardLight from \"../Card/CardLight\"\r\nimport CloseButton from \"../CloseButton\"\r\nimport ImgIcon from \"../Image/ImgIcon\"\r\nimport ModalWrapper from \"../ModalWrapper\"\r\nimport { StarsDisplay } from \"../StarDisplay\"\r\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\"\r\n\r\ntype WeaponSelectionModalProps = {\r\n  show: boolean,\r\n  ascension?: number,\r\n  onHide: () => void,\r\n  onSelect: (wKey: WeaponKey) => void,\r\n  filter?: (sheet: WeaponSheet) => boolean,\r\n  weaponTypeFilter?: WeaponTypeKey,\r\n}\r\n\r\nexport default function WeaponSelectionModal({ show, ascension = 0, onHide, onSelect, filter = () => true, weaponTypeFilter }: WeaponSelectionModalProps) {\r\n  const { t } = useTranslation([\"page_weapon\", \"weaponNames_gen\"])\r\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\r\n  const [weaponFilter, setWeaponfilter] = useState<WeaponTypeKey[]>(weaponTypeFilter ? [weaponTypeFilter] : [...allWeaponTypeKeys])\r\n\r\n  useEffect(() => weaponTypeFilter && setWeaponfilter([weaponTypeFilter]), [weaponTypeFilter])\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const deferredSearchTerm = useDeferredValue(searchTerm)\r\n\r\n  const weaponIdList = !weaponSheets ? [] : allWeaponKeys.filter(wKey => filter(weaponSheets[wKey]))\r\n    .filter(wKey => weaponFilter.includes(weaponSheets?.[wKey]?.weaponType))\r\n    .filter(wKey => !deferredSearchTerm || t(`weaponNames_gen:${wKey}`).toLowerCase().includes(deferredSearchTerm.toLowerCase()))\r\n    .sort((a, b) => (weaponSheets?.[b]?.rarity ?? 0) - (weaponSheets?.[a]?.rarity ?? 0))\r\n\r\n  if (!weaponSheets) return null\r\n\r\n  return <ModalWrapper open={show} onClose={onHide}>\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container spacing={1}>\r\n          <Grid item>\r\n            <WeaponToggle value={weaponFilter} onChange={setWeaponfilter} disabled={!!weaponTypeFilter} size=\"small\" />\r\n          </Grid >\r\n          <Grid item flexGrow={1}>\r\n            <TextField\r\n              autoFocus\r\n              size=\"small\"\r\n              value={searchTerm}\r\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\r\n              label={t(\"weaponName\")}\r\n              sx={{ height: \"100%\" }}\r\n              InputProps={{\r\n                sx: { height: \"100%\" }\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <CloseButton onClick={onHide} />\r\n          </Grid >\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent><Grid container spacing={1}>\r\n        {weaponIdList.map(weaponKey => {\r\n          const weaponSheet = weaponSheets[weaponKey]\r\n          return <Grid item key={weaponKey} lg={3} md={4}>\r\n            <CardLight sx={{ height: \"100%\" }} >\r\n              <CardActionArea onClick={() => { onHide(); onSelect(weaponKey) }} sx={{ display: \"flex\" }}>\r\n                <Box component=\"img\" src={weaponSheet.getImg(ascension)} sx={{ width: 100, height: \"auto\" }} className={` grad-${weaponSheet.rarity}star`} />\r\n                <Box sx={{ flexGrow: 1, px: 1 }}>\r\n                  <Typography variant=\"subtitle1\">{weaponSheet.name}</Typography>\r\n                  <Typography><ImgIcon src={Assets.weaponTypes?.[weaponSheet.weaponType]} /> <StarsDisplay stars={weaponSheet.rarity} colored /></Typography>\r\n                </Box>\r\n              </CardActionArea>\r\n            </CardLight>\r\n          </Grid>\r\n        })}\r\n      </Grid></CardContent>\r\n      <Divider />\r\n      <CardContent sx={{ py: 1 }}>\r\n        <CloseButton large onClick={onHide} />\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n","import { Button } from '@mui/material';\r\nimport { useContext, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { CharacterSelectionModal } from '../../Components/Character/CharacterSelectionModal';\r\nimport ThumbSide from '../../Components/Character/ThumbSide';\r\nimport { CharacterContext } from '../../Context/CharacterContext';\r\nimport useCharSelectionCallback from '../../ReactHooks/useCharSelectionCallback';\r\n\r\nexport default function CharSelectDropdown() {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { characterSheet } = useContext(CharacterContext)\r\n  const [showModal, setshowModal] = useState(false)\r\n  const setCharacter = useCharSelectionCallback()\r\n  return <>\r\n    <CharacterSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={setCharacter} />\r\n    <Button color=\"info\" onClick={() => setshowModal(true)} startIcon={<ThumbSide src={characterSheet?.thumbImgSide} />} >{characterSheet?.name ?? t(\"selectCharacter\")}</Button>\r\n  </>\r\n}\r\n","import { ExpandMore } from '@mui/icons-material';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Box, CardContent, CardHeader, Divider, Skeleton, Typography } from '@mui/material';\r\nimport { MutableRefObject, Suspense, useCallback, useContext, useEffect, useRef, useState } from 'react';\r\nimport AmpReactionModeText from '../../Components/AmpReactionModeText';\r\nimport CardDark from '../../Components/Card/CardDark';\r\nimport CardHeaderCustom from '../../Components/Card/CardHeaderCustom';\r\nimport CardLight from '../../Components/Card/CardLight';\r\nimport CloseButton from '../../Components/CloseButton';\r\nimport ColorText from '../../Components/ColoredText';\r\nimport ImgIcon from '../../Components/Image/ImgIcon';\r\nimport ModalWrapper from \"../../Components/ModalWrapper\";\r\nimport SqBadge from '../../Components/SqBadge';\r\nimport { DataContext } from '../../Context/DataContext';\r\nimport { FormulaDataContext } from '../../Context/FormulaDataContext';\r\nimport { getDisplayHeader, getDisplaySections } from '../../Formula/DisplayUtil';\r\nimport { DisplaySub, Variant } from '../../Formula/type';\r\nimport { NodeDisplay } from '../../Formula/uiData';\r\nimport KeyMap, { valueString } from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { allAmpReactions, AmpReactionKey } from '../../Types/consts';\r\n\r\nexport default function FormulaModal() {\r\n  const { modalOpen } = useContext(FormulaDataContext)\r\n  const { setFormulaData } = useContext(FormulaDataContext)\r\n  const onCloseHandler = useCallback(() => setFormulaData?.(undefined, undefined), [setFormulaData])\r\n  return <ModalWrapper open={!!modalOpen} onClose={onCloseHandler}>\r\n    <CardDark>\r\n      <CardHeader title=\"Formulas & Calculations\" action={<CloseButton onClick={onCloseHandler} />} />\r\n      <CardContent sx={{ pt: 0 }}>\r\n        <CalculationDisplay />\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n\r\nfunction CalculationDisplay() {\r\n  const { data } = useContext(DataContext)\r\n  const { data: contextData } = useContext(FormulaDataContext)\r\n  const sections = getDisplaySections(contextData ?? data)\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />} >\r\n    <Box sx={{ mr: -1, mb: -1 }}>\r\n      {sections.map(([key, Nodes]) =>\r\n        <FormulaCalc key={key} displayNs={Nodes} sectionKey={key} />)}\r\n    </Box>\r\n  </Suspense>\r\n}\r\nfunction FormulaCalc({ sectionKey, displayNs }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\r\n  const { data } = useContext(DataContext)\r\n  const { data: contextData } = useContext(FormulaDataContext)\r\n  const header = usePromise(() => getDisplayHeader(contextData ?? data, sectionKey), [contextData, data, sectionKey])\r\n  if (!header) return null\r\n  if (Object.entries(displayNs).every(([_, node]) => node.isEmpty)) return null\r\n  const { title, icon, action } = header\r\n  return <CardLight sx={{ mb: 1 }}>\r\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\r\n    <Divider />\r\n    <CardContent>\r\n      {Object.entries(displayNs).map(([key, node]) => !node.isEmpty && <FormulaAccordian key={key} node={node} />)}\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\nfunction FormulaAccordian({ node }: { node: NodeDisplay }) {\r\n  const { node: contextNode } = useContext(FormulaDataContext)\r\n  const [expanded, setExpanded] = useState(false);\r\n  const handleChange = useCallback((e: React.SyntheticEvent, isExpanded: boolean) => setExpanded(isExpanded), [])\r\n  const scrollRef = useRef<HTMLDivElement>() as MutableRefObject<HTMLDivElement | null>\r\n\r\n  useEffect(() => {\r\n    if (node === contextNode) setTimeout(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), 300)\r\n  }, [scrollRef, node, contextNode])\r\n\r\n  return <Accordion sx={{ bgcolor: \"contentDark.main\" }} expanded={node === contextNode || expanded} onChange={handleChange} ref={scrollRef} >\r\n    <AccordionSummary expandIcon={<ExpandMore />} >\r\n      <Typography><ColorText color={node.info.variant}>{KeyMap.get(node.info.key ?? \"\")}</ColorText> <strong>{valueString(node.value, node.unit)}</strong></Typography>\r\n      {allAmpReactions.includes(node.info.variant as any) && <Box sx={{ display: \"inline-block\", ml: \"auto\", mr: 2 }}>\r\n        <AmpReactionModeText reaction={node.info.variant as AmpReactionKey} trigger={node.info.subVariant as Variant} />\r\n      </Box>}\r\n    </AccordionSummary>\r\n    <AccordionDetails >\r\n      {node.formulas.map((subform, i) => <Typography key={i}>{subform}</Typography>)}\r\n    </AccordionDetails>\r\n  </Accordion>\r\n}\r\n","import { IconButton, IconButtonProps, styled } from \"@mui/material\";\r\n\r\ninterface ExpandMoreProps extends IconButtonProps {\r\n  expand: boolean;\r\n}\r\nconst ExpandButton = styled((props: ExpandMoreProps) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n  marginLeft: 'auto',\r\n  transition: (theme as any).transitions.create('transform', {\r\n    duration: (theme as any).transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\nexport default ExpandButton","import { Replay } from \"@mui/icons-material\"\r\nimport { Button, ButtonGroup, ButtonGroupProps, styled } from \"@mui/material\"\r\nimport { ReactNode } from \"react\"\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"./CustomNumberInput\"\r\nimport TextButton from \"./TextButton\"\r\n\r\ntype StatInputInput = ButtonGroupProps & {\r\n  name: Displayable,\r\n  children?: ReactNode,\r\n  value: number,\r\n  placeholder?: string,\r\n  defaultValue?: number,\r\n  onValueChange: (newValue: number | undefined) => void,\r\n  percent?: boolean,\r\n  disabled?: boolean,\r\n  onReset?: () => void\r\n}\r\nconst FlexButtonGroup = styled(ButtonGroup)({\r\n  display: \"flex\"\r\n})\r\n\r\nexport default function StatInput({ name, children, value, placeholder, defaultValue = 0, onValueChange, percent = false, disabled = false, onReset, ...restProps }: StatInputInput) {\r\n\r\n  return <FlexButtonGroup {...restProps} >\r\n    {children}\r\n    <TextButton sx={{ px: 1 }}>\r\n      {name}\r\n    </TextButton>\r\n    <CustomNumberInputButtonGroupWrapper sx={{ flexBasis: \"10em\", flexGrow: 1 }} >\r\n      <CustomNumberInput\r\n        sx={{ px: 1 }}\r\n        inputProps={{\r\n          sx: { textAlign: \"right\" }\r\n        }}\r\n        float={percent}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onValueChange}\r\n        disabled={disabled}\r\n        endAdornment={percent ? \"%\" : undefined}\r\n      />\r\n    </CustomNumberInputButtonGroupWrapper>\r\n    <Button sx={{ flexShrink: 2 }} size=\"small\" color=\"error\" onClick={() => onReset ? onReset() : onValueChange(defaultValue)} disabled={disabled || value === defaultValue} >\r\n      <Replay />\r\n    </Button>\r\n  </FlexButtonGroup>\r\n}\r\n","import { CheckBox, CheckBoxOutlineBlank, ExpandMore } from \"@mui/icons-material\";\r\nimport { Button, CardContent, Chip, Collapse, Grid, Typography } from \"@mui/material\";\r\nimport { useCallback, useContext, useState } from 'react';\r\nimport { CharacterContext } from \"../Context/CharacterContext\";\r\nimport { DataContext } from \"../Context/DataContext\";\r\nimport { uiInput as input } from \"../Formula\";\r\nimport KeyMap, { valueString } from '../KeyMap';\r\nimport { allElementsWithPhy, ElementKeyWithPhy } from \"../Types/consts\";\r\nimport CardLight from \"./Card/CardLight\";\r\nimport ColorText from \"./ColoredText\";\r\nimport ExpandButton from \"./ExpandButton\";\r\nimport StatIcon from \"./StatIcon\";\r\nimport StatInput from \"./StatInput\";\r\n\r\nexport function EnemyExpandCard() {\r\n  const { data } = useContext(DataContext)\r\n  const [expanded, setexpanded] = useState(false)\r\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\r\n  const eLvlNode = data.get(input.enemy.level)\r\n  const eDefRed = data.get(input.enemy.defRed)\r\n  const eDefIgn = data.get(input.enemy.defIgn)\r\n  return <CardLight>\r\n    <CardContent sx={{ display: \"flex\" }}>\r\n      <Grid container spacing={1} flexGrow={1} alignItems=\"center\">\r\n        <Grid item>\r\n          <Chip size=\"small\" color=\"success\" label={<span>{KeyMap.get(eLvlNode.info.key)} <strong>{eLvlNode.value}</strong></span>} />\r\n        </Grid>\r\n        {allElementsWithPhy.map(element => <Grid item key={element}>\r\n          <Typography key={element} ><EnemyResText element={element} /></Typography>\r\n        </Grid>)}\r\n        <Grid item>\r\n          <Typography>DEF Reduction {valueString(eDefRed.value, eDefRed.unit)}</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography>DEF Ignore {valueString(eDefIgn.value, eDefIgn.unit)}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <ExpandButton\r\n        expand={expanded}\r\n        onClick={toggle}\r\n        aria-expanded={expanded}\r\n        aria-label=\"show more\"\r\n        size=\"small\"\r\n        sx={{ p: 0 }}\r\n      >\r\n        <ExpandMore />\r\n      </ExpandButton>\r\n    </CardContent>\r\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n      <CardContent sx={{ pt: 0 }}>\r\n        <EnemyEditor />\r\n      </CardContent>\r\n    </Collapse>\r\n  </CardLight>\r\n}\r\n\r\nexport function EnemyResText({ element }: { element: ElementKeyWithPhy }) {\r\n  const { data } = useContext(DataContext)\r\n  const node = data.get(input.enemy[`${element}_res_`])\r\n  const immune = !isFinite(node.value)\r\n  const content = immune ? <span >{StatIcon[element]} IMMUNE</span> :\r\n    <span >{StatIcon[element]}RES <strong>{valueString(node.value, node.unit)}</strong></span>\r\n  return <ColorText color={element}>{content}</ColorText>\r\n}\r\n\r\nexport function EnemyEditor({ bsProps = { xs: 12, md: 6 } }: { bsProps?: object }) {\r\n  const { character: { enemyOverride }, characterDispatch } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const defaultVal = 10\r\n\r\n  const eLvl = enemyOverride.enemyLevel ?? data.get(input.lvl).value\r\n  const eDefRed = enemyOverride.enemyDefIgn_ ?? 0\r\n  const eDefIgn = enemyOverride.enemyDefRed_ ?? 0\r\n  return <Grid container spacing={1}>\r\n    <Grid item {...bsProps}>\r\n      <Button fullWidth sx={{ height: \"100%\" }} size=\"small\" component=\"a\" color=\"warning\" href=\"https://genshin-impact.fandom.com/wiki/Resistance#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n        To get the specific resistance values of enemies, please visit the wiki.\r\n      </Button>\r\n    </Grid>\r\n    <Grid item {...bsProps}>\r\n      <StatInput\r\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n        name={<b>{KeyMap.get(\"enemyLevel\")}</b>}\r\n        value={eLvl}\r\n        placeholder={KeyMap.getStr(\"enemyLevel\")}\r\n        defaultValue={data.get(input.lvl).value}\r\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value })}\r\n        onReset={() => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value: undefined })}\r\n      />\r\n    </Grid>\r\n    {allElementsWithPhy.map(eleKey => {\r\n      const statKey = `${eleKey}_enemyRes_`\r\n      const val = enemyOverride[statKey]\r\n      const elementImmunity = val === Number.MAX_VALUE\r\n      return <Grid item key={eleKey} {...bsProps}>\r\n        <StatInput\r\n          sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n          name={<ColorText color={eleKey}><b>{KeyMap.get(statKey)}</b></ColorText>}\r\n          value={val ? (elementImmunity ? Infinity : val) : 10}\r\n          placeholder={elementImmunity ? \"Immune \" : KeyMap.getStr(statKey)}\r\n          defaultValue={defaultVal}\r\n          onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey, value })}\r\n          disabled={elementImmunity}\r\n          percent\r\n        >\r\n          <Button color={eleKey} onClick={() => characterDispatch({ type: \"enemyOverride\", statKey, value: elementImmunity ? defaultVal : Number.MAX_VALUE })} startIcon={elementImmunity ? <CheckBox /> : <CheckBoxOutlineBlank />} >\r\n            Immunity\r\n          </Button>\r\n        </StatInput>\r\n      </Grid>\r\n    })}\r\n    <Grid item {...bsProps}>\r\n      <StatInput\r\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n        name={<b>{KeyMap.get(\"enemyDefIgn_\")}</b>}\r\n        value={eDefRed}\r\n        placeholder={KeyMap.getStr(\"enemyDefIgn_\")}\r\n        defaultValue={0}\r\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefIgn_\", value })}\r\n        percent\r\n      />\r\n    </Grid>\r\n    <Grid item {...bsProps}>\r\n      <StatInput\r\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n        name={<b>{KeyMap.get(\"enemyDefRed_\")}</b>}\r\n        value={eDefIgn}\r\n        placeholder={KeyMap.getStr(\"enemyDefRed_\")}\r\n        defaultValue={0}\r\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefRed_\", value })}\r\n        percent\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12}>\r\n      <small>Note: Genshin Impact halves resistance shred values below 0%. For the sake of calculations enter the RAW value and GO will do the rest. (e.g. 10% - 20% = -10%)</small>\r\n    </Grid>\r\n  </Grid>\r\n}\r\n","import { CardContent, CardHeader, Grid, ListItem, Stack, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { useCallback, useContext, useMemo } from \"react\";\r\nimport CardDark from \"../../Components/Card/CardDark\";\r\nimport CardLight from \"../../Components/Card/CardLight\";\r\nimport CloseButton from \"../../Components/CloseButton\";\r\nimport ColorText from \"../../Components/ColoredText\";\r\nimport { EnemyExpandCard } from \"../../Components/EnemyEditor\";\r\nimport { FieldDisplayList, NodeFieldDisplay } from \"../../Components/FieldDisplay\";\r\nimport ModalWrapper from \"../../Components/ModalWrapper\";\r\nimport StatEditorList from \"../../Components/StatEditorList\";\r\nimport StatIcon from \"../../Components/StatIcon\";\r\nimport { CharacterContext } from \"../../Context/CharacterContext\";\r\nimport { DataContext } from \"../../Context/DataContext\";\r\nimport { allInputPremodKeys, uiInput as input } from \"../../Formula\";\r\nimport { ReadNode } from \"../../Formula/type\";\r\nimport KeyMap, { allEleDmgKeys, allEleResKeys, valueString } from \"../../KeyMap\";\r\nimport { allElements, ElementKey, ElementKeyWithPhy } from \"../../Types/consts\";\r\n\r\nconst cols = {\r\n  xs: 1, md: 2, lg: 3\r\n}\r\n\r\nexport default function StatModal({ open, onClose }) {\r\n  return <ModalWrapper open={open} onClose={onClose}>\r\n    <CardDark>\r\n      <CardHeader title=\"Detailed Stats\" action={<CloseButton onClick={onClose} />} />\r\n      <CardContent sx={{ pt: 0 }}>\r\n        <Stack spacing={1}>\r\n          <BonusStatsEditor />\r\n          <EnemyExpandCard />\r\n          <MainStatsCards />\r\n        </Stack>\r\n      </CardContent></CardDark>\r\n  </ModalWrapper>\r\n}\r\nconst keys = [...allInputPremodKeys]\r\nconst wrapperFunc = (e: JSX.Element) => <Grid item xs={1}>{e}</Grid>\r\nfunction BonusStatsEditor() {\r\n  const { character: { bonusStats }, characterDispatch } = useContext(CharacterContext)\r\n  const setFilter = useCallback((bonusStats) => characterDispatch({ bonusStats }), [characterDispatch],)\r\n  return <CardLight>\r\n    <CardContent sx={{ display: \"flex\" }}>\r\n      <Grid container columns={cols} sx={{ pt: 1 }} spacing={1}>\r\n        <StatEditorList statKeys={keys} statFilters={bonusStats} setStatFilters={setFilter} wrapperFunc={wrapperFunc} />\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n\r\nconst mainBaseKeys = [\"hp\", \"atk\", \"def\"] as const\r\nconst mainSubKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"] as const\r\nconst mainReadNodes = [...mainBaseKeys, ...mainSubKeys].map(k => input.total[k])\r\nconst mainEditKeys = [\"atk_\", \"atk\", \"hp_\", \"hp\", \"def_\", \"def\", ...mainSubKeys] as const\r\n\r\nconst otherStatKeys = [\r\n  ...allEleDmgKeys,\r\n  ...allEleResKeys,\r\n  \"stamina\", \"incHeal_\", \"shield_\", \"cdRed_\"\r\n] as const\r\n\r\nconst miscStatkeys = allInputPremodKeys.filter(k => !mainEditKeys.includes(k as any) && !otherStatKeys.includes(k as any))\r\n\r\n\r\nfunction StatDisplayContent({ nodes, extra }: { nodes: ReadNode<number>[], extra?: Displayable }) {\r\n  const { data, oldData } = useContext(DataContext)\r\n  return <FieldDisplayList >\r\n    {nodes.map(rn => <NodeFieldDisplay component={ListItem} key={rn.info?.key} node={data.get(rn)} oldValue={oldData?.get(rn)?.value} />)}\r\n    {extra}\r\n  </FieldDisplayList>\r\n}\r\n\r\nfunction MainStatsCards() {\r\n  const { character: { elementKey }, characterSheet } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const specialNode = data.get(input.special)\r\n  const charEle = (elementKey ?? characterSheet.elementKey) as ElementKey\r\n  const isMelee = characterSheet.isMelee()\r\n\r\n  const otherStatReadNodes = useMemo(() => {\r\n    const nodes = otherStatKeys.map(k => input.total[k])\r\n    const eles: ElementKeyWithPhy[] = [...allElements].filter(k => k !== charEle)\r\n    if (isMelee) eles.concat([\"physical\"])\r\n\r\n    return nodes.filter(n => !(!data.get(n).value && eles.some(e => n.info?.key?.includes?.(e))))\r\n  }, [data, charEle, isMelee])\r\n\r\n\r\n  const miscStatReadNodes = useMemo(() => miscStatkeys.map(k => input.total[k]).filter(n => data.get(n).value), [data])\r\n\r\n  return <CardLight><CardContent>\r\n    <Grid container columns={cols} spacing={1}>\r\n      <Grid item xs={1}>\r\n        <StatDisplayCard title=\"Main Stats\">\r\n          <StatDisplayContent nodes={mainReadNodes}\r\n            extra={specialNode && <ListItem sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <span><b>Special:</b> <ColorText color={specialNode.info.variant}>{specialNode.info.key && StatIcon[specialNode.info.key]} {specialNode.info.key && KeyMap.get(specialNode.info.key)}</ColorText></span>\r\n              <span >{valueString(specialNode.value, specialNode.unit)}</span>\r\n            </ListItem>}\r\n          />\r\n        </StatDisplayCard>\r\n      </Grid>\r\n      <Grid item xs={1}>\r\n        <StatDisplayCard title=\"Other Stats\">\r\n          <StatDisplayContent nodes={otherStatReadNodes} />\r\n        </StatDisplayCard>\r\n      </Grid>\r\n      {!!miscStatReadNodes.length && <Grid item xs={1}>\r\n        <StatDisplayCard title=\"Misc Stats\">\r\n          <StatDisplayContent nodes={miscStatReadNodes} />\r\n        </StatDisplayCard>\r\n      </Grid>}\r\n    </Grid>\r\n  </CardContent></CardLight>\r\n}\r\nfunction StatDisplayCard({ title, children }) {\r\n  return <CardDark>\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Box display=\"flex\" justifyContent=\"space-between\">\r\n        <Typography variant=\"subtitle1\">{title}</Typography>\r\n      </Box>\r\n    </CardContent>\r\n    {children}\r\n  </CardDark>\r\n}\r\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/BackgroundWorker.c81d19aa.worker.js\");\n}\n","import { createContext } from \"react\";\r\n\r\nexport const OptimizationTargetContext = createContext(undefined as string[] | undefined)\r\n","import { ArtSetExclusion } from \"../../../../Database/Data/BuildsettingData\";\r\nimport { forEachNodes, mapFormulas } from \"../../../../Formula/internal\";\r\nimport { allOperations, constantFold } from \"../../../../Formula/optimization\";\r\nimport { ConstantNode, NumNode } from \"../../../../Formula/type\";\r\nimport { constant, customRead, max, min } from \"../../../../Formula/utils\";\r\nimport { allSlotKeys, ArtifactSetKey, SlotKey } from \"../../../../Types/consts\";\r\nimport { assertUnreachable, objectKeyMap, objectMap, range } from \"../../../../Util/Util\";\r\n\r\ntype DynMinMax = { [key in string]: MinMax }\r\ntype MinMax = { min: number, max: number }\r\n\r\ntype MicropassOperation = \"reaffine\" | \"pruneArtRange\" | \"pruneNodeRange\" | \"pruneOrder\"\r\nexport function pruneAll(nodes: NumNode[], minimum: number[], arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion, forced: Dict<MicropassOperation, boolean>): { nodes: NumNode[], arts: ArtifactsBySlot } {\r\n  let should = forced\r\n  /** If `key` makes progress, all operations in `value` should be performed */\r\n  const deps: StrictDict<MicropassOperation, Dict<MicropassOperation, true>> = {\r\n    pruneOrder: { pruneNodeRange: true },\r\n    pruneArtRange: { pruneNodeRange: true },\r\n    pruneNodeRange: { reaffine: true },\r\n    reaffine: { pruneOrder: true, pruneArtRange: true, pruneNodeRange: true }\r\n  }\r\n  let count = 0\r\n  while (Object.values(should).some(x => x) && count++ < 20) {\r\n    if (should.pruneOrder) {\r\n      delete should.pruneOrder\r\n      const newArts = pruneOrder(arts, numTop, exclusion)\r\n      if (arts !== newArts) {\r\n        arts = newArts\r\n        should = { ...should, ...deps.pruneOrder }\r\n      }\r\n    }\r\n    if (should.pruneArtRange) {\r\n      delete should.pruneArtRange\r\n      const newArts = pruneArtRange(nodes, arts, minimum)\r\n      if (arts !== newArts) {\r\n        arts = newArts\r\n        should = { ...should, ...deps.pruneArtRange }\r\n      }\r\n    }\r\n    if (should.pruneNodeRange) {\r\n      delete should.pruneNodeRange\r\n      const newNodes = pruneNodeRange(nodes, arts)\r\n      if (nodes !== newNodes) {\r\n        nodes = newNodes\r\n        should = { ...should, ...deps.pruneNodeRange }\r\n      }\r\n    }\r\n    if (should.reaffine) {\r\n      delete should.reaffine\r\n      const { nodes: newNodes, arts: newArts } = reaffine(nodes, arts)\r\n      if (nodes !== newNodes || arts !== newArts) {\r\n        nodes = newNodes\r\n        arts = newArts\r\n        should = { ...should, ...deps.reaffine }\r\n      }\r\n    }\r\n  }\r\n  return { nodes, arts }\r\n}\r\n\r\nfunction reaffine(nodes: NumNode[], arts: ArtifactsBySlot, forceRename: boolean = false): { nodes: NumNode[], arts: ArtifactsBySlot } {\r\n  const affineNodes = new Set<NumNode>(), topLevelAffine = new Set<NumNode>()\r\n\r\n  function visit(node: NumNode, isAffine: boolean) {\r\n    if (isAffine) affineNodes.add(node)\r\n    else node.operands.forEach(_op => {\r\n      const op = _op as NumNode\r\n      affineNodes.has(op) && topLevelAffine.add(op)\r\n    })\r\n  }\r\n\r\n  const dynKeys = new Set<string>()\r\n\r\n  forEachNodes(nodes, _ => { }, f => {\r\n    const operation = f.operation\r\n    switch (operation) {\r\n      case \"read\":\r\n        if (f.type !== \"number\" || f.path[0] !== \"dyn\" || f.accu !== \"add\")\r\n          throw new Error(`Found unsupported ${operation} node at path ${f.path} when computing affine nodes`)\r\n        dynKeys.add(f.path[1])\r\n        visit(f, true)\r\n        break\r\n      case \"add\": visit(f, f.operands.every(op => affineNodes.has(op))); break\r\n      case \"mul\": {\r\n        const nonConst = f.operands.filter(op => op.operation !== \"const\")\r\n        visit(f, nonConst.length === 0 || (nonConst.length === 1 && affineNodes.has(nonConst[0])))\r\n        break\r\n      }\r\n      case \"const\":\r\n        if (typeof f.value === \"string\" || f.value === undefined)\r\n          throw new Error(`Found constant ${f.value} while compacting`)\r\n        visit(f as NumNode, true); break\r\n      case \"res\": case \"threshold\": case \"sum_frac\":\r\n      case \"max\": case \"min\": visit(f, false); break\r\n      case \"data\": case \"subscript\": case \"lookup\": case \"match\": case \"prio\": case \"small\":\r\n        throw new Error(`Found unsupported ${operation} node when computing affine nodes`)\r\n      default: assertUnreachable(operation)\r\n    }\r\n  })\r\n\r\n  if ([...topLevelAffine].every(({ operation }) => operation === \"read\" || operation === \"const\") &&\r\n    Object.keys(arts.base).length === dynKeys.size)\r\n    return { nodes, arts }\r\n\r\n  let current = -1\r\n  function nextDynKey(): string {\r\n    while (dynKeys.has(`${++current}`));\r\n    return `${current}`\r\n  }\r\n\r\n  nodes.forEach(node => affineNodes.has(node) && topLevelAffine.add(node))\r\n  const affine = [...topLevelAffine].filter(f => f.operation !== \"const\")\r\n  const affineMap = new Map(affine.map(node => [node,\r\n    !forceRename && node.operation === \"read\" && node.path[0] === \"dyn\"\r\n      ? node\r\n      : { ...customRead([\"dyn\", `${nextDynKey()}`]), accu: \"add\" as const }]))\r\n  nodes = mapFormulas(nodes, f => affineMap.get(f as NumNode) ?? f, f => f)\r\n\r\n  function reaffineArt(stat: DynStat): DynStat {\r\n    const values = constantFold([...affineMap.keys()], {\r\n      dyn: objectMap(stat, (value) => constant(value))\r\n    } as any, _ => true)\r\n    return Object.fromEntries([...affineMap.values()].map((v, i) => [v.path[1], (values[i] as ConstantNode<number>).value]))\r\n  }\r\n  const result = {\r\n    nodes, arts: {\r\n      base: reaffineArt(arts.base),\r\n      values: objectKeyMap(allSlotKeys, slot =>\r\n        arts.values[slot].map(({ id, set, values }) => ({ id, set, values: reaffineArt(values) })))\r\n    }\r\n  }\r\n  const offsets = Object.entries(reaffineArt({}))\r\n  for (const arts of Object.values(result.arts.values))\r\n    for (const { values } of arts)\r\n      for (const [key, baseValue] of offsets)\r\n        values[key] -= baseValue\r\n  return result\r\n}\r\n/** Remove artifacts that cannot be in top `numTop` builds */\r\nexport function pruneOrder(arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion): ArtifactsBySlot {\r\n  let progress = false\r\n  const noRainbow = !exclusion.rainbow?.length\r\n  const noSwitchIn = new Set(Object.entries(exclusion).filter(([_, v]) => v.length).map(([k]) => k) as ArtifactSetKey[])\r\n  const noSwitchOut = new Set(Object.entries(exclusion).filter(([_, v]) => v.includes(2) && !v.includes(4)).map(([k]) => k) as ArtifactSetKey[])\r\n  const values = objectKeyMap(allSlotKeys, slot => {\r\n    const list = arts.values[slot]\r\n    const newList = list.filter(art => {\r\n      let count = 0\r\n      return list.every(other => {\r\n        const greaterEqual = Object.entries(other.values).every(([k, o]) => o >= art.values[k])\r\n        const greater = Object.entries(other.values).some(([k, o]) => o > art.values[k])\r\n        if (greaterEqual && (greater || other.id > art.id) &&\r\n          ((noRainbow && !noSwitchIn.has(other.set!) && !noSwitchOut.has(art.set!)) || art.set === other.set))\r\n          count++\r\n        return count < numTop\r\n      })\r\n    })\r\n    if (newList.length !== list.length) progress = true\r\n    return newList\r\n  })\r\n  return progress ? { base: arts.base, values } : arts\r\n}\r\n/** Remove artifacts that cannot reach `minimum` in any build */\r\nfunction pruneArtRange(nodes: NumNode[], arts: ArtifactsBySlot, minimum: number[]): ArtifactsBySlot {\r\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\r\n  const wrap = { arts }\r\n  while (true) {\r\n    const artRanges = objectKeyMap(allSlotKeys, slot => computeArtRange(wrap.arts.values[slot]))\r\n    const otherArtRanges = objectKeyMap(allSlotKeys, key =>\r\n      addArtRange(Object.entries(artRanges).map(a => a[0] === key ? baseRange : a[1]).filter(x => x)))\r\n\r\n    let progress = false\r\n    const values = objectKeyMap(allSlotKeys, slot => {\r\n      const result = wrap.arts.values[slot].filter(art => {\r\n        const read = addArtRange([computeArtRange([art]), otherArtRanges[slot]])\r\n        const newRange = computeNodeRange(nodes, read)\r\n        return nodes.every((node, i) => newRange.get(node)!.max >= (minimum[i] ?? -Infinity))\r\n      })\r\n      if (result.length !== wrap.arts.values[slot].length)\r\n        progress = true\r\n      return result\r\n    })\r\n    if (!progress) break\r\n    wrap.arts = { base: wrap.arts.base, values }\r\n  }\r\n  return wrap.arts\r\n}\r\nfunction pruneNodeRange(nodes: NumNode[], arts: ArtifactsBySlot): NumNode[] {\r\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\r\n  const reads = addArtRange([baseRange, ...Object.values(arts.values).map(values => computeArtRange(values))])\r\n  const nodeRange = computeNodeRange(nodes, reads)\r\n\r\n  return mapFormulas(nodes, f => {\r\n    const { operation } = f\r\n    const operandRanges = f.operands.map(x => nodeRange.get(x)!)\r\n    switch (operation) {\r\n      case \"threshold\": {\r\n        const [value, threshold, pass, fail] = operandRanges\r\n        if (value.min >= threshold.max) return f.operands[2]\r\n        else if (value.max < threshold.min) return constant(0)\r\n        if (pass.max === pass.min &&\r\n          fail.max === fail.min &&\r\n          pass.min === fail.min && isFinite(pass.min))\r\n          return constant(pass.max)\r\n        break\r\n      }\r\n      case \"min\": {\r\n        const newOperands = f.operands.filter((_, i) => {\r\n          const op1 = operandRanges[i]\r\n          return operandRanges.every((op2, j) => op1.min <= op2.max)\r\n        })\r\n        if (newOperands.length < operandRanges.length) return min(...newOperands)\r\n        break\r\n      }\r\n      case \"max\": {\r\n        const newOperands = f.operands.filter((_, i) => {\r\n          const op1 = operandRanges[i]\r\n          return operandRanges.every(op2 => op1.max >= op2.min)\r\n        })\r\n        if (newOperands.length < operandRanges.length) return max(...newOperands)\r\n        break\r\n      }\r\n    }\r\n    return f\r\n  }, f => f)\r\n}\r\nfunction addArtRange(ranges: DynMinMax[]): DynMinMax {\r\n  const result: DynMinMax = {}\r\n  ranges.forEach(range => {\r\n    Object.entries(range).forEach(([key, value]) => {\r\n      if (result[key]) {\r\n        result[key].min += value.min\r\n        result[key].max += value.max\r\n      } else result[key] = { ...value }\r\n    })\r\n  })\r\n  return result\r\n}\r\nfunction computeArtRange(arts: ArtifactBuildData[]): DynMinMax {\r\n  const result: DynMinMax = {}\r\n  if (arts.length) {\r\n    Object.keys(arts[0].values)\r\n      .filter(key => arts.every(art => art.values[key]))\r\n      .forEach(key => result[key] = { min: arts[0].values[key], max: arts[0].values[key] })\r\n    arts.forEach(({ values }) => {\r\n      for (const [key, value] of Object.entries(values)) {\r\n        if (!result[key]) result[key] = { min: 0, max: value }\r\n        else {\r\n          if (result[key].max < value) result[key].max = value\r\n          if (result[key].min > value) result[key].min = value\r\n        }\r\n      }\r\n    })\r\n  }\r\n  return result\r\n}\r\nfunction computeNodeRange(nodes: NumNode[], reads: DynMinMax): Map<NumNode, MinMax> {\r\n  const range = new Map<NumNode, MinMax>()\r\n\r\n  forEachNodes(nodes, _ => { }, _f => {\r\n    const f = _f as NumNode\r\n    const { operation } = f\r\n    const operands = f.operands.map(op => range.get(op)!)\r\n    let current: MinMax\r\n    switch (operation) {\r\n      case \"read\":\r\n        if (f.path[0] !== \"dyn\")\r\n          throw new Error(`Found non-dyn path ${f.path} while computing range`)\r\n        current = reads[f.path[1]] ?? { min: 0, max: 0 }\r\n        break\r\n      case \"const\": current = computeMinMax([f.value]); break\r\n      case \"subscript\": current = computeMinMax(f.list); break\r\n      case \"add\": case \"min\": case \"max\":\r\n        current = {\r\n          min: allOperations[operation](operands.map(x => x.min)),\r\n          max: allOperations[operation](operands.map(x => x.max)),\r\n        }; break\r\n      case \"res\": current = {\r\n        min: allOperations[operation]([operands[0].max]),\r\n        max: allOperations[operation]([operands[0].min]),\r\n      }; break\r\n      case \"mul\": current = operands.reduce((accu, current) => computeMinMax([\r\n        accu.min * current.min, accu.min * current.max,\r\n        accu.max * current.min, accu.max * current.max,\r\n      ])); break\r\n      case \"threshold\":\r\n        if (operands[0].min >= operands[1].max) current = operands[2]\r\n        else if (operands[0].max < operands[1].min) current = computeMinMax([0])\r\n        else current = computeMinMax([0], [operands[2]])\r\n        break\r\n      case \"sum_frac\": {\r\n        const [x, c] = operands, sum = { min: x.min + c.min, max: x.max + c.max }\r\n        if (sum.min <= 0 && sum.max >= 0)\r\n          current = (x.min <= 0 && x.max >= 0) ? { min: NaN, max: NaN } : { min: -Infinity, max: Infinity }\r\n        else\r\n          // TODO: Check this\r\n          current = computeMinMax([\r\n            x.min / sum.min, x.min / sum.max,\r\n            x.max / sum.min, x.max / sum.max\r\n          ])\r\n        break\r\n      }\r\n      case \"data\": case \"lookup\": case \"match\":\r\n        throw new Error(`Unsupported ${operation} node`)\r\n      default: assertUnreachable(operation)\r\n    }\r\n    range.set(f, current)\r\n  })\r\n  return range\r\n}\r\nfunction computeMinMax(values: readonly number[], minMaxes: readonly MinMax[] = []): MinMax {\r\n  const max = Math.max(...values, ...minMaxes.map(x => x.max))\r\n  const min = Math.min(...values, ...minMaxes.map(x => x.min))\r\n  return { min, max }\r\n}\r\n\r\nexport function filterArts(arts: ArtifactsBySlot, filters: RequestFilter): ArtifactsBySlot {\r\n  return {\r\n    base: arts.base,\r\n    values: objectKeyMap(allSlotKeys, slot => {\r\n      const filter = filters[slot]\r\n      switch (filter.kind) {\r\n        case \"id\": return arts.values[slot].filter(art => filter.ids.has(art.id))\r\n        case \"exclude\": return arts.values[slot].filter(art => !filter.sets.has(art.set!))\r\n        case \"required\": return arts.values[slot].filter(art => filter.sets.has(art.set!))\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport function mergeBuilds(builds: Build[][], maxNum: number): Build[] {\r\n  return builds.flatMap(x => x).sort((a, b) => b.value - a.value).slice(0, maxNum)\r\n}\r\nexport function mergePlot(plots: PlotData[]): PlotData {\r\n  let scale = 0.01, reductionScaling = 2, maxCount = 1500\r\n  let keys = new Set(plots.flatMap(x => Object.values(x).map(v => Math.round(v.plot! / scale))))\r\n  while (keys.size > maxCount) {\r\n    scale *= reductionScaling\r\n    keys = new Set([...keys].map(key => Math.round(key / reductionScaling)))\r\n  }\r\n  const result: PlotData = {}\r\n  for (const plot of plots)\r\n    for (const build of Object.values(plot)) {\r\n      const x = Math.round(build.plot! / scale) * scale\r\n      if (!result[x] || result[x]!.value < build.value)\r\n        result[x] = build\r\n    }\r\n  return result\r\n}\r\n\r\nexport function countBuilds(arts: ArtifactsBySlot): number {\r\n  return allSlotKeys.reduce((_count, slot) => _count * arts.values[slot].length, 1)\r\n}\r\n\r\n\r\nexport function* filterFeasiblePerm(filters: Iterable<RequestFilter>, _artSets: ArtifactsBySlot): Iterable<RequestFilter> {\r\n  const artSets = objectMap(_artSets.values, values => new Set(values.map(v => v.set)))\r\n  filter_loop: for (const filter of filters) {\r\n    for (const [slot, f] of Object.entries(filter)) {\r\n      const available = artSets[slot]!\r\n      switch (f.kind) {\r\n        case \"required\": if ([...f.sets].every(s => !available.has(s))) continue filter_loop; break\r\n        case \"exclude\": if ([...available].every(s => f.sets.has(s!))) continue filter_loop; break\r\n        case \"id\": break\r\n      }\r\n    }\r\n    yield filter\r\n  }\r\n}\r\nexport function exclusionToAllowed(exclusion: number[] | undefined): Set<number> {\r\n  return new Set(exclusion?.includes(2)\r\n    ? exclusion.includes(4) ? [0, 1] : [0, 1, 4, 5]\r\n    : exclusion?.includes(4) ? [0, 1, 2, 3] : [0, 1, 2, 3, 4, 5])\r\n}\r\n/** A *disjoint* set of `RequestFilter` satisfying the exclusion rules */\r\nexport function* artSetPerm(exclusion: ArtSetExclusion, _artSets: ArtifactSetKey[]): Iterable<RequestFilter> {\r\n  /**\r\n   * This generation algorithm is separated into two parts:\r\n   * - \"Shape\" generation\r\n   *   - It first generates all build \"shapes\", e.g., AABBC, ABBCD\r\n   *   - It then filters the generated shapes according to the rainbow exclusion, e.g., removes ABBCD if excluding 3 rainbows\r\n   *   - It then merges the remaining shapes into wildcards, e.g. AABAA + AABAB + AABAC => AABA*\r\n   * - Shape filling\r\n   *   - From the given shapes, it tries to fill in all non-rainbow slots, e.g., slots A and B of AABBC, with actual artifacts\r\n   *   - It then fills the rainbow slots, e.g., slot C of AABBC while ensuring the exclusion rule of each sets\r\n   */\r\n  const artSets = [...new Set(_artSets)], allowedRainbows = exclusionToAllowed(exclusion.rainbow)\r\n  let shapes: number[][] = []\r\n  function populateShapes(current: number[], list: Set<number>, rainbows: number[]) {\r\n    if (current.length === 5) {\r\n      if (allowedRainbows.has(rainbows.length))\r\n        shapes.push(current)\r\n      return\r\n    }\r\n    for (const i of list) populateShapes([...current, i], list, rainbows.filter(j => j !== i))\r\n    populateShapes([...current, current.length], new Set([...list, current.length]), [...rainbows, current.length])\r\n  }\r\n  populateShapes([0], new Set([0]), [0])\r\n  function indexOfShape(shape: number[], replacing: number) {\r\n    if (range(replacing + 1, 4).some(i => shape[i] !== 5))\r\n      return undefined\r\n    shape = [...shape]\r\n    shape[replacing] = 5\r\n    return shape.reduce((a, b) => a * 6 + b, 0)\r\n  }\r\n  for (let replacing = 4; replacing >= 0; replacing--) {\r\n    const required: Map<number, number> = new Map()\r\n    for (const shape of shapes) {\r\n      const id = indexOfShape(shape, replacing)\r\n      if (id === undefined) continue\r\n      required.set(id, (required.get(id) ?? new Set(shape.slice(0, replacing)).size + 1) - 1)\r\n    }\r\n    for (const [id, remaining] of required.entries()) {\r\n      if (remaining === 0) {\r\n        const shape = [...shapes.find(shape => indexOfShape(shape, replacing) === id)!]\r\n        shape[replacing] = 5\r\n        shapes = shapes.filter(shape => indexOfShape(shape, replacing) !== id)\r\n        shapes.push(shape)\r\n      }\r\n    }\r\n  }\r\n\r\n  // Shapes are now calculated and merged, proceed to fill in the sets\r\n\r\n  const noFilter = { kind: \"exclude\" as const, sets: new Set<ArtifactSetKey>() }\r\n  const result: RequestFilter = objectKeyMap(allSlotKeys, _ => noFilter)\r\n\r\n  const counts = { ...objectMap(exclusion, _ => 0), ...objectKeyMap(artSets, _ => 0) }\r\n  const allowedCounts = objectMap(exclusion, exclusionToAllowed)\r\n\r\n  function* check(shape: number[]) {\r\n    const used: Set<ArtifactSetKey> = new Set()\r\n    let groupped: number[][] = [], rainbows: number[] = []\r\n    for (const i of shape) {\r\n      groupped.push([])\r\n      if (i === 5) rainbows.push(groupped.length - 1)\r\n      else groupped[i].push(groupped.length - 1)\r\n    }\r\n    groupped = groupped.filter(v => v.length).sort((a, b) => b.length - a.length)\r\n    let usableRainbows = rainbows.length\r\n\r\n    // Inception.. because js doesn't like functions inside a for-loop\r\n    function* check(i: number) {\r\n      if (i === groupped.length)\r\n        return yield* check_free(0)\r\n\r\n      for (const set of artSets) {\r\n        if (used.has(set)) continue\r\n        const length = groupped[i].length, allowedSet = allowedCounts[set]\r\n        let requiredRainbows = 0\r\n\r\n        if (allowedSet && !allowedSet.has(length)) {\r\n          // Look ahead and see if we have enough rainbows to fill to the next `allowedSet` if we use the current set\r\n          requiredRainbows = (range(length + 1, 5).find(l => allowedSet.has(l)) ?? 6) - length\r\n          if (requiredRainbows > usableRainbows) continue // Not enough rainbows. Next..\r\n        }\r\n\r\n        used.add(set)\r\n        counts[set] = groupped[i].length\r\n        groupped[i].forEach(j => result[allSlotKeys[j]] = { kind: \"required\", sets: new Set([set]) })\r\n        usableRainbows -= requiredRainbows\r\n\r\n        yield* check(i + 1)\r\n\r\n        usableRainbows += requiredRainbows\r\n        counts[set] = 0\r\n        used.delete(set)\r\n      }\r\n    }\r\n    // We separate filling rainbow slots from groupped slots because it has an entirely\r\n    // different set of rules regarding what can be filled and what states to be kept.\r\n    function* check_free(i: number) {\r\n      const remaining = rainbows.length - i, isolated: ArtifactSetKey[] = [], missing: ArtifactSetKey[] = [], rejected: ArtifactSetKey[] = []\r\n      let required = 0\r\n      for (const set of artSets) {\r\n        const allowedSet = allowedCounts[set], count = counts[set]\r\n        if (!allowedSet) continue\r\n        if (range(1, remaining).every(j => !allowedSet.has(count + j))) rejected.push(set)\r\n        else if (!allowedSet.has(count)) {\r\n          required += [...allowedSet].find(x => x > count)! - count\r\n          missing.push(set)\r\n        }\r\n        else if (range(0, remaining).some(j => !allowedSet.has(count + j))) isolated.push(set)\r\n      }\r\n      if (required > remaining) return\r\n      if (i === rainbows.length) {\r\n        yield { ...result }\r\n        return\r\n      }\r\n      if (required === remaining) {\r\n        for (const set of missing) {\r\n          counts[set]++\r\n          result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\r\n          yield* check_free(i + 1)\r\n          counts[set]--\r\n        }\r\n        return\r\n      }\r\n      for (const set of [...isolated, ...missing]) {\r\n        counts[set]++\r\n        result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\r\n        yield* check_free(i + 1)\r\n        counts[set]--\r\n      }\r\n      result[allSlotKeys[rainbows[i]]] = { kind: \"exclude\", sets: new Set([...missing, ...rejected, ...isolated]) }\r\n      yield* check_free(i + 1)\r\n    }\r\n    yield* check(0)\r\n  }\r\n  for (const shape of shapes) yield* check(shape)\r\n}\r\n\r\nexport type RequestFilter = StrictDict<SlotKey,\r\n  { kind: \"required\", sets: Set<ArtifactSetKey> } |\r\n  { kind: \"exclude\", sets: Set<ArtifactSetKey> } |\r\n  { kind: \"id\", ids: Set<string> }\r\n>\r\n\r\nexport type DynStat = { [key in string]: number }\r\nexport type ArtifactBuildData = {\r\n  id: string\r\n  set?: ArtifactSetKey\r\n  values: DynStat\r\n}\r\nexport type ArtifactsBySlot = { base: DynStat, values: StrictDict<SlotKey, ArtifactBuildData[]> }\r\n\r\nexport type PlotData = Dict<number, Build>\r\nexport interface Build {\r\n  value: number\r\n  plot?: number\r\n  artifactIds: string[]\r\n}\r\n","import { Box } from \"@mui/material\"\r\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\r\nimport DocumentDisplay from \"../DocumentDisplay\"\r\n\r\ntype Data = {\r\n  setKey: ArtifactSetKey,\r\n  setNumKey: SetNum,\r\n  hideHeader?: boolean,\r\n  conditionalsOnly?: boolean\r\n}\r\n\r\nexport default function SetEffectDisplay({ setKey, setNumKey, hideHeader = false, conditionalsOnly = false }: Data) {\r\n  const sheet = usePromise(() => ArtifactSheet.get(setKey), [setKey])\r\n  if (!sheet) return null\r\n\r\n  const document = conditionalsOnly ? sheet.setEffectDocument(setNumKey)?.filter(section => \"states\" in section) : sheet.setEffectDocument(setNumKey)\r\n  return <Box display=\"flex\" flexDirection=\"column\">\r\n    {document ? <DocumentDisplay sections={document} hideHeader={hideHeader} /> : null}\r\n  </Box>\r\n}\r\n","import { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../../../../Database/Database\";\r\nimport { BuildSetting, BuildSettingReducerAction } from \"../../../../Database/Data/BuildsettingData\";\r\nimport { CharacterKey } from \"../../../../Types/consts\";\r\n\r\nexport default function useBuildSetting(characterKey: CharacterKey) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [buildSetting, setBuildSetting] = useState(() => database.buildSettings.get(characterKey))\r\n  useEffect(() => setBuildSetting(database.buildSettings.get(characterKey)), [database, characterKey])\r\n  useEffect(() =>\r\n    database.buildSettings.follow(characterKey, setBuildSetting),\r\n    [characterKey, setBuildSetting, database])\r\n  const buildSettingDispatch = useCallback((action: BuildSettingReducerAction) => characterKey && database.buildSettings.set(characterKey, action), [characterKey, database],)\r\n\r\n  return { buildSetting: buildSetting as BuildSetting, buildSettingDispatch }\r\n}\r\n","import { faBan, faChartLine } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { CheckBoxOutlineBlank, CheckBox, Replay, Settings } from '@mui/icons-material';\r\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Stack, Typography } from '@mui/material';\r\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\r\nimport SetEffectDisplay from '../../../../../Components/Artifact/SetEffectDisplay';\r\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\r\nimport CardDark from '../../../../../Components/Card/CardDark';\r\nimport CardLight from '../../../../../Components/Card/CardLight';\r\nimport CloseButton from '../../../../../Components/CloseButton';\r\nimport ColorText from '../../../../../Components/ColoredText';\r\nimport InfoTooltip from '../../../../../Components/InfoTooltip';\r\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\r\nimport SqBadge from '../../../../../Components/SqBadge';\r\nimport { StarsDisplay } from '../../../../../Components/StarDisplay';\r\nimport { Translate } from '../../../../../Components/Translate';\r\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\r\nimport { DatabaseContext } from '../../../../../Database/Database';\r\nimport { DataContext, dataContextObj } from '../../../../../Context/DataContext';\r\nimport { UIData } from '../../../../../Formula/uiData';\r\nimport { constant } from '../../../../../Formula/utils';\r\nimport useForceUpdate from '../../../../../ReactHooks/useForceUpdate';\r\nimport usePromise from '../../../../../ReactHooks/usePromise';\r\nimport { allArtifactSets, allSlotKeys, ArtifactSetKey, SetNum, SlotKey } from '../../../../../Types/consts';\r\nimport { deepClone, objectKeyMap } from '../../../../../Util/Util';\r\nimport useBuildSetting from '../useBuildSetting';\r\n\r\nexport default function ArtifactSetConfig({ disabled }: { disabled?: boolean, }) {\r\n  const { t } = useTranslation([\"page_character\", \"sheet\"])\r\n  const dataContext = useContext(DataContext)\r\n  const { database } = useContext(DatabaseContext)\r\n  const { character: { key: characterKey, conditional }, characterDispatch } = useContext(CharacterContext)\r\n  const { buildSetting: { artSetExclusion }, buildSettingDispatch } = useBuildSetting(characterKey)\r\n  const [open, setOpen] = useState(false)\r\n  const onOpen = useCallback(() => setOpen(true), [setOpen])\r\n  const onClose = useCallback(() => setOpen(false), [setOpen])\r\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\r\n  const artSetKeyList = useMemo(() => artifactSheets ? Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets)).reverse().flatMap(([, sets]) => sets).filter(key => !key.includes(\"Prayers\")) : [], [artifactSheets])\r\n\r\n  const [dbDirty, forceUpdate] = useForceUpdate()\r\n  useEffect(() => database.arts.followAny(forceUpdate), [database, forceUpdate])\r\n\r\n  const artSlotCount = useMemo(() => {\r\n    const artSlotCount: Dict<ArtifactSetKey, Record<SlotKey, number>> = Object.fromEntries(artSetKeyList.map(k => [k, Object.fromEntries(allSlotKeys.map(sk => [sk, 0]))]))\r\n    database.arts.values.map(art => artSlotCount[art.setKey] && artSlotCount[art.setKey]![art.slotKey]++)\r\n    return dbDirty && artSlotCount\r\n  }, [dbDirty, database, artSetKeyList])\r\n  const allowRainbow2 = !artSetExclusion.rainbow?.includes(2)\r\n  const allowRainbow4 = !artSetExclusion.rainbow?.includes(4)\r\n\r\n  const { allow2, allow4, exclude2, exclude4 } = useMemo(() => ({\r\n    allow2: artSetKeyList.filter(k => !artSetExclusion[k]?.includes(2)).length,\r\n    allow4: artSetKeyList.filter(k => !artSetExclusion[k]?.includes(4)).length,\r\n    exclude2: artSetKeyList.filter(k => artSetExclusion[k]?.includes(2)).length,\r\n    exclude4: artSetKeyList.filter(k => artSetExclusion[k]?.includes(4)).length,\r\n  }), [artSetKeyList, artSetExclusion])\r\n  const artifactCondCount = useMemo(() =>\r\n    (Object.keys(conditional)).filter(k =>\r\n      allArtifactSets.includes(k as ArtifactSetKey) && Object.keys(conditional[k]).length !== 0).length\r\n    , [conditional])\r\n  const fakeDataContextObj = useMemo(() => ({\r\n    ...dataContext,\r\n    data: new UIData({ ...dataContext.data.data[0], artSet: objectKeyMap(allArtifactSets, _ => constant(4)) }, undefined)\r\n  }), [dataContext])\r\n  const resetArtConds = useCallback(() => {\r\n    const tconditional = Object.fromEntries(Object.entries(conditional).filter(([k, v]) => !allArtifactSets.includes(k as any)))\r\n    characterDispatch({ conditional: tconditional })\r\n  }, [conditional, characterDispatch]);\r\n  const setAllExclusion = useCallback(\r\n    (setnum: number, exclude = true) => {\r\n      const artSetExclusion_ = deepClone(artSetExclusion)\r\n      artSetKeyList.forEach(k => {\r\n        if (exclude) artSetExclusion_[k] = [...(artSetExclusion_[k] ?? []), setnum];\r\n        else if (artSetExclusion_[k]) artSetExclusion_[k] = artSetExclusion_[k].filter(n => n !== setnum);\r\n      })\r\n      buildSettingDispatch({ artSetExclusion: artSetExclusion_ })\r\n    },\r\n    [artSetKeyList, artSetExclusion, buildSettingDispatch],\r\n  )\r\n\r\n  return <>\r\n    <CardLight sx={{ display: \"flex\" }}>\r\n      <CardContent sx={{ flexGrow: 1 }} >\r\n        <Typography>\r\n          <strong>{t`tabOptimize.artSetConfig.title`}</strong>\r\n        </Typography>\r\n        <Stack spacing={1}>\r\n          <Typography>{t`tabOptimize.artSetConfig.setEffCond`} <SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"tabOptimize.artSetConfig.enabled\")}</SqBadge></Typography>\r\n          <Typography>{t`sheet:2set`} <SqBadge color=\"success\">{allow2} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.allowed\")}</SqBadge>{!!exclude2 && \" / \"}{!!exclude2 && <SqBadge color=\"secondary\">{exclude2} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.excluded\")}</SqBadge>}</Typography>\r\n          <Typography>{t`sheet:4set`} <SqBadge color=\"success\">{allow4} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.allowed\")}</SqBadge>{!!exclude4 && \" / \"}{!!exclude4 && <SqBadge color=\"secondary\">{exclude4} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.excluded\")}</SqBadge>}</Typography>\r\n          <Typography>{t`tabOptimize.artSetConfig.2rainbow`} <SqBadge color={allowRainbow2 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow2 ? t<string>(\"tabOptimize.artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\r\n          <Typography>{t`tabOptimize.artSetConfig.4rainbow`} <SqBadge color={allowRainbow4 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow4 ? t<string>(\"tabOptimize.artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\r\n        </Stack>\r\n\r\n      </CardContent>\r\n      <Button onClick={onOpen} disabled={disabled} color=\"info\" sx={{ borderRadius: 0 }}>\r\n        <Settings />\r\n      </Button>\r\n    </CardLight>\r\n    {artifactSheets && <ModalWrapper open={open} onClose={onClose} ><CardDark>\r\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\r\n        <Typography variant=\"h6\" >{t`tabOptimize.artSetConfig.title`}</Typography>\r\n        <CloseButton onClick={onClose} />\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent >\r\n        <CardLight sx={{ mb: 1 }}><CardContent>\r\n          <Box display=\"flex\" gap={1}>\r\n            <Typography><strong>{t`tabOptimize.artSetConfig.modal.setCond.title`}</strong></Typography>\r\n            <Typography sx={{ flexGrow: 1 }}><SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"tabOptimize.artSetConfig.selected\")}</SqBadge></Typography>\r\n            <Button size='small' onClick={resetArtConds} color=\"error\" startIcon={<Replay />}>{t`tabOptimize.artSetConfig.modal.setCond.reset`}</Button>\r\n          </Box>\r\n          <Typography>{t`tabOptimize.artSetConfig.modal.setCond.text`}</Typography>\r\n        </CardContent></CardLight>\r\n        <CardLight sx={{ mb: 1 }}><CardContent>\r\n          <Typography sx={{ flexGrow: 1 }}><strong>\r\n            <Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.title\" >Artifact Sets <ColorText color='success'>Allowed<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Excluded<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText></Trans>\r\n          </strong></Typography>\r\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.intro\">You can allow/exclude which sets you want the builder to consider. In the following examples, <strong>A</strong> is on-set, and <strong>R</strong> is rainbow(off-set)</Trans></Typography>\r\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.2set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 2-Set</ColorText></strong> would exclude 2-Set builds: <strong><ColorText color='secondary' variant='light'>AA</ColorText>RRR</strong> and <strong><ColorText color='secondary' variant='light'>AAA</ColorText>RR</strong>.</Trans></Typography>\r\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.4set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 4-Set</ColorText></strong> would exclude 4-Set builds: <strong><ColorText color='secondary' variant='light'>AAAA</ColorText>R</strong> and <strong><ColorText color='secondary' variant='light'>AAAAA</ColorText></strong>.</Trans></Typography>\r\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.2rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 3-Rainbow</ColorText></strong> would exclude 2-Set + 3-Rainbow builds: <strong>AA<ColorText color='secondary' variant='light'>RRR</ColorText></strong> and <strong>AAA<ColorText color='secondary' variant='light'>RR</ColorText></strong>.</Trans></Typography>\r\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.4rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 5-Rainbow</ColorText></strong> would exclude full 5-Rainbow builds: <strong><ColorText color='secondary' variant='light'>RRRRR</ColorText></strong>.</Trans></Typography>\r\n        </CardContent></CardLight>\r\n        <Grid container columns={{ xs: 2, lg: 3 }} sx={{ mb: 1 }} spacing={1}>\r\n          <Grid item xs={1}>\r\n            <AllSetAllowExcludeCard setNum={2} numAllow={allow2} numExclude={exclude2} setAllExclusion={setAllExclusion} />\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            <AllSetAllowExcludeCard setNum={4} numAllow={allow4} numExclude={exclude4} setAllExclusion={setAllExclusion} />\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            <CardLight>\r\n              <CardContent>\r\n                <Typography gutterBottom><strong><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.alExRainbow\"><ColorText color='success'>Allow <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Exclude <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText> Rainbow Builds</Trans></strong></Typography>\r\n                <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 2 })} color={allowRainbow2 ? \"success\" : \"secondary\"} startIcon={!allowRainbow2 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`tabOptimize.artSetConfig.2rainbow`}</Button>\r\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 4 })} color={allowRainbow4 ? \"success\" : \"secondary\"} startIcon={!allowRainbow4 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`tabOptimize.artSetConfig.4rainbow`}</Button>\r\n                </Box>\r\n              </CardContent>\r\n            </CardLight>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1} columns={{ xs: 2, lg: 3 }}>\r\n          {artSetKeyList.map(setKey => {\r\n            return <ArtifactSetCard key={setKey} setKey={setKey} sheet={artifactSheets[setKey]} fakeDataContextObj={fakeDataContextObj} slotCount={artSlotCount[setKey]!} />\r\n          })}\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent sx={{ py: 1 }}>\r\n        <CloseButton large onClick={onClose} />\r\n      </CardContent>\r\n    </CardDark></ModalWrapper >}\r\n  </>\r\n}\r\nfunction AllSetAllowExcludeCard({ numAllow, numExclude, setNum, setAllExclusion }: { numAllow: number, numExclude: number, setNum: 2 | 4, setAllExclusion: (setNum: 2 | 4, exclude?: boolean) => void }) {\r\n  const { t } = useTranslation([\"page_character\", \"sheet\"])\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Typography gutterBottom><strong>{t(`sheet:${setNum}set`)}</strong> <SqBadge color=\"success\">{numAllow} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.allowed\")}</SqBadge>{!!numExclude && \" / \"}{!!numExclude && <SqBadge color=\"secondary\">{numExclude} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.excluded\")}</SqBadge>}</Typography>\r\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n        <Button fullWidth disabled={!numExclude} onClick={() => setAllExclusion(setNum, false)} color='success' startIcon={<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" />}>{t(`tabOptimize.artSetConfig.allowAll${setNum}set`)}</Button>\r\n        <Button fullWidth disabled={!numAllow} onClick={() => setAllExclusion(setNum, true)} color='secondary' startIcon={<FontAwesomeIcon icon={faBan} className=\"fa-fw\" />}>{t(`tabOptimize.artSetConfig.excludeAll${setNum}set`)}</Button>\r\n      </Box>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\nfunction ArtifactSetCard({ sheet, setKey, fakeDataContextObj, slotCount }: { setKey: ArtifactSetKey, sheet: ArtifactSheet, fakeDataContextObj: dataContextObj, slotCount: Record<SlotKey, number> }) {\r\n  const { t } = useTranslation(\"sheet\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\r\n  const setExclusionSet = buildSetting?.artSetExclusion?.[setKey] ?? []\r\n  const allow4 = !setExclusionSet.includes(4)\r\n  const slots = useMemo(() => Object.values(slotCount).reduce((tot, v) => tot + (v ? 1 : 0), 0), [slotCount])\r\n\r\n  /* Assumes that all conditionals are from 4-Set. needs to change if there are 2-Set conditionals */\r\n  const set4CondNums = useMemo(() => {\r\n    if (!allow4 || slots < 4) return []\r\n    return Object.keys(sheet.setEffects).filter(setNumKey => sheet.setEffects[setNumKey]?.document.some(doc => \"states\" in doc))\r\n  }, [sheet.setEffects, allow4, slots])\r\n  const exclude2 = setExclusionSet.includes(2)\r\n  const exclude4 = setExclusionSet.includes(4)\r\n  if (slots < 2) return null\r\n  return <Grid item key={setKey} xs={1}>\r\n    <CardLight sx={{ height: \"100%\" }}>\r\n      <Box className={`grad-${sheet.rarity[0]}star`} width=\"100%\" sx={{ display: \"flex\" }} >\r\n        <Box component=\"img\" src={sheet.defIconSrc} sx={{ height: 100, width: \"auto\", mx: -1 }} />\r\n        <Box sx={{ flexGrow: 1, px: 1, display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\r\n          <Typography variant=\"h6\">{sheet.name ?? \"\"}</Typography>\r\n          <Box display=\"flex\" gap={1}>\r\n            <Typography variant=\"subtitle1\">{sheet.rarity.map((ns, i) => <span key={ns}>{ns} <StarsDisplay stars={1} /> {i < (sheet.rarity.length - 1) ? \"/ \" : null}</span>)}</Typography>\r\n            {/* If there is ever a 2-Set conditional, we will need to change this */}\r\n            <InfoTooltip title={<Box>\r\n              <Typography><SqBadge color=\"success\">{t`2set`}</SqBadge></Typography>\r\n              <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.2\"} /></Typography>\r\n              <Box paddingTop={2} sx={{ opacity: setExclusionSet.includes(4) ? 0.6 : 1 }} >\r\n                <Typography><SqBadge color=\"success\">{t`4set`}</SqBadge></Typography>\r\n                <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.4\"} /></Typography>\r\n              </Box>\r\n            </Box>} />\r\n          </Box>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>{Object.entries(slotCount).map(([slotKey, count]) => <Typography key={slotKey} sx={{ flexGrow: 1 }} variant=\"subtitle2\" ><SqBadge sx={{ width: \"100%\" }} color={count ? \"primary\" : \"secondary\"}>{artifactSlotIcon(slotKey)}{count}</SqBadge></Typography>)}</Box>\r\n        </Box>\r\n      </Box>\r\n      <ButtonGroup sx={{ \".MuiButton-root\": { borderRadius: 0 } }} fullWidth>\r\n        {slots >= 2 && <Button startIcon={exclude2 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 2 })} color={exclude2 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude2 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`2set`}</Button>}\r\n        {slots >= 4 && <Button startIcon={exclude4 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 4 })} color={exclude4 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude4 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`4set`}</Button>}\r\n      </ButtonGroup>\r\n\r\n      {!!set4CondNums.length && <DataContext.Provider value={fakeDataContextObj}>\r\n        <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\r\n          {set4CondNums.map(setNumKey =>\r\n            <SetEffectDisplay key={setNumKey} setKey={setKey} setNumKey={parseInt(setNumKey) as SetNum} hideHeader conditionalsOnly />\r\n          )}\r\n        </CardContent>\r\n      </DataContext.Provider>}\r\n    </CardLight>\r\n  </Grid >\r\n}\r\n","import { MenuItem } from \"@mui/material\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport DropdownButton from \"../../../../../Components/DropdownMenu/DropdownButton\"\r\n\r\nconst levels = [0, 4, 8, 12, 16, 20] as const\r\nexport default function AssumeFullLevelToggle({ mainStatAssumptionLevel = 0, setmainStatAssumptionLevel, disabled }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  return <DropdownButton fullWidth color={mainStatAssumptionLevel ? \"success\" : \"primary\"} disabled={disabled}\r\n    title={mainStatAssumptionLevel ? t(\"tabOptimize.assumptionLvl.lvl\", { lvl: mainStatAssumptionLevel }) : t(\"tabOptimize.assumptionLvl.no\")}>\r\n    {levels.map((lvl) => <MenuItem key={lvl} onClick={() => setmainStatAssumptionLevel(lvl)}>{lvl ? t(\"tabOptimize.assumptionLvl.lvl\", { lvl }) : t(\"tabOptimize.assumptionLvl.no\")}</MenuItem>)}\r\n  </DropdownButton>\r\n}\r\n","import { CardContent, Divider, Typography } from '@mui/material';\r\nimport { useContext } from 'react';\r\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\r\nimport CardLight from '../../../../../Components/Card/CardLight';\r\nimport { NodeFieldDisplay } from '../../../../../Components/FieldDisplay';\r\nimport { DataContext } from '../../../../../Context/DataContext';\r\nimport { uiInput as input } from '../../../../../Formula';\r\nimport { NumNode } from '../../../../../Formula/type';\r\nexport default function BonusStatsCard() {\r\n  const { character: { bonusStats } } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const bonusStatsKeys = Object.keys(bonusStats)\r\n  if (!bonusStatsKeys.length) return null\r\n  const nodes = bonusStatsKeys.map(k => data.get(input.customBonus[k] as NumNode))\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Typography>Bonus Stats</Typography>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent>\r\n      {nodes.map(n => <NodeFieldDisplay key={n.info.key} node={n} />)}\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n","import { Alert, Grid, LinearProgress, styled, Typography } from '@mui/material';\r\nimport { ReactNode } from 'react';\r\nimport { timeStringMs } from '../../../../../Util/TimeUtil';\r\n\r\nexport const warningBuildNumber = 10000000\r\nexport type BuildStatus = {\r\n  type: \"active\" | \"inactive\"\r\n  tested: number      // tested, including `failed`\r\n  failed: number      // tested but fail the filter criteria, e.g., not enough EM\r\n  skipped: number\r\n  total: number\r\n  startTime?: number\r\n  finishTime?: number\r\n}\r\n\r\nconst Monospace = styled(\"strong\")({\r\n  fontFamily: \"monospace\"\r\n})\r\n\r\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\r\n  height: 10,\r\n  borderRadius: 5,\r\n}));\r\nexport default function BuildAlert({ status: { type, tested, failed, skipped, total, startTime, finishTime }, characterName }: { status: BuildStatus, characterName: Displayable }) {\r\n  const hasTotal = isFinite(total)\r\n\r\n  const generatingBuilds = type !== \"inactive\"\r\n  const unskipped = total - skipped\r\n\r\n  const testedString = <Monospace>{tested.toLocaleString()}</Monospace>\r\n  const unskippedString = <Monospace>{unskipped.toLocaleString()}</Monospace>\r\n  const skippedText = !!skipped && <span>(<b>{<Monospace>{skipped.toLocaleString()}</Monospace>}</b> skipped)</span>\r\n\r\n  const durationString = <Monospace>{timeStringMs(Math.round((finishTime ?? performance.now()) - (startTime ?? NaN)))}</Monospace>\r\n\r\n  let color = \"success\" as \"success\" | \"warning\" | \"error\"\r\n  let title = \"\" as ReactNode\r\n  let subtitle = \"\" as ReactNode\r\n  let progress = undefined as undefined | number\r\n\r\n  if (generatingBuilds) {\r\n    progress = tested * 100 / (unskipped)\r\n    title = <Typography>Generating and testing {testedString}{hasTotal ? <>/{unskippedString}</> : undefined} build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\r\n    subtitle = <Typography>Time elapsed: {durationString}</Typography>\r\n  } else if (tested + skipped) {\r\n    progress = 100\r\n    title = <Typography>Generated and tested {testedString} Build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\r\n    subtitle = <Typography>Total duration: {durationString}</Typography>\r\n  } else {\r\n    return null\r\n  }\r\n\r\n  return <Alert severity={color} variant=\"filled\" sx={{\r\n    \"& .MuiAlert-message\": {\r\n      flexGrow: 1\r\n    }\r\n  }}>\r\n    {title}\r\n    {subtitle}\r\n    {progress !== undefined && <Grid container spacing={1} alignItems=\"center\">\r\n      {hasTotal && <Grid item>\r\n        <Typography>{`${progress.toFixed(1)}%`}</Typography>\r\n      </Grid>}\r\n      <Grid item flexGrow={1} >\r\n        <BorderLinearProgress variant={hasTotal ? \"determinate\" : \"indeterminate\"} value={progress} color=\"primary\" />\r\n      </Grid>\r\n    </Grid>}\r\n  </Alert>\r\n}\r\n","import { BusinessCenter } from \"@mui/icons-material\";\r\nimport { alpha, Box, CardActionArea, Chip, Typography, useTheme } from \"@mui/material\";\r\nimport { useCallback } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Artifact from \"../../Data/Artifacts/Artifact\";\r\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\r\nimport KeyMap, { cacheValueString } from \"../../KeyMap\";\r\nimport useArtifact from \"../../ReactHooks/useArtifact\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport { ICachedSubstat } from \"../../Types/artifact\";\r\nimport { allElementsWithPhy, CharacterKey, SlotKey } from \"../../Types/consts\";\r\nimport { clamp } from \"../../Util/Util\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport CardDark from \"../Card/CardDark\";\r\nimport ColorText from \"../ColoredText\";\r\nimport ConditionalWrapper from \"../ConditionalWrapper\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport { StatColoredWithUnit } from \"../StatDisplay\";\r\nimport StatIcon from \"../StatIcon\";\r\nimport ArtifactTooltip from \"./ArtifactTooltip\";\r\n\r\ntype Data = {\r\n  artifactId?: string,\r\n  slotKey: SlotKey,\r\n  mainStatAssumptionLevel?: number,\r\n  onClick?: () => void,\r\n  showLocation?: boolean,\r\n  BGComponent?: React.ElementType\r\n}\r\n\r\nexport default function ArtifactCardNano({ artifactId, slotKey: pSlotKey, mainStatAssumptionLevel = 0, showLocation = false, onClick, BGComponent = CardDark }: Data) {\r\n  const art = useArtifact(artifactId)\r\n  const sheet = usePromise(() => ArtifactSheet.get(art?.setKey), [art?.setKey])\r\n  const actionWrapperFunc = useCallback(children => <CardActionArea onClick={onClick} sx={{ height: \"100%\" }}>{children}</CardActionArea>, [onClick],)\r\n  const theme = useTheme()\r\n  if (!art) return <BGComponent sx={{ display: \"flex\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n    <Box component=\"img\" src={Assets.slot[pSlotKey]} sx={{ width: \"25%\", height: \"auto\", opacity: 0.7 }} />\r\n  </BGComponent>\r\n\r\n  const { slotKey, rarity, level, mainStatKey, substats, location } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\r\n  const mainStatUnit = KeyMap.unit(mainStatKey)\r\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\r\n  const color = element ? alpha(theme.palette[element].main, 0.6) : alpha(theme.palette.secondary.main, 0.6)\r\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\r\n    <Box display=\"flex\" height=\"100%\">\r\n      <Box className={`grad-${rarity}star`} sx={{ position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\" }} >\r\n        <ArtifactTooltip art={art}>\r\n          <Box\r\n            component=\"img\"\r\n            src={sheet?.slotIcons[slotKey] ?? \"\"}\r\n            sx={{ m: -1, maxHeight: \"110%\", maxWidth: \"110%\" }}\r\n          />\r\n        </ArtifactTooltip>\r\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\r\n          <Chip size=\"small\" label={<strong>{` +${level}`}</strong>} color={Artifact.levelVariant(level)} />\r\n          {showLocation && <Chip size=\"small\" label={<LocationIcon location={location} />} color={\"secondary\"} sx={{\r\n            overflow: \"visible\", \".MuiChip-label\": {\r\n              overflow: \"visible\"\r\n            }\r\n          }} />}\r\n        </Box>\r\n        {/* mainstats */}\r\n        <Chip size=\"small\" sx={{ position: \"absolute\", bottom: 0, mb: 1, backgroundColor: color }}\r\n          label={<Typography sx={{ display: \"flex\", gap: 0.5, px: 1, zIndex: 1 }}>\r\n            <BootstrapTooltip placement=\"top\" title={<Typography><StatColoredWithUnit statKey={mainStatKey} /></Typography>} disableInteractive>\r\n              <span>{StatIcon[mainStatKey]}</span>\r\n            </BootstrapTooltip>\r\n            <ColorText color={mainStatLevel !== level ? \"warning\" : undefined}>{cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</ColorText>\r\n          </Typography>} />\r\n      </Box>\r\n      {/* substats */}\r\n      <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\" sx={{ p: 1, }}>\r\n        {substats.map((stat: ICachedSubstat, i: number) => <SubstatDisplay key={i + stat.key} stat={stat} />)}\r\n      </Box>\r\n    </Box>\r\n  </ConditionalWrapper></BGComponent >\r\n}\r\nfunction SubstatDisplay({ stat }: { stat: ICachedSubstat }) {\r\n  if (!stat.value) return null\r\n  const numRolls = stat.rolls?.length ?? 0\r\n  const rollColor = `roll${clamp(numRolls, 1, 6)}`\r\n  const unit = KeyMap.unit(stat.key)\r\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\r\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 0.5 }} color={(numRolls ? `${rollColor}.main` : \"error.main\") as any} component=\"span\">\r\n      <BootstrapTooltip placement=\"top\" title={<Typography>{stat.key && <StatColoredWithUnit statKey={stat.key} />}</Typography>} disableInteractive>\r\n        <span>{StatIcon[stat.key]}</span>\r\n      </BootstrapTooltip>\r\n      <span>{`${cacheValueString(stat.value, KeyMap.unit(stat.key))}${unit}`}</span>\r\n    </Typography>\r\n  </Box>)\r\n}\r\nfunction LocationIcon({ location }: { location: CharacterKey | \"\" }) {\r\n  const characterSheet = usePromise(() => CharacterSheet.get(location ?? \"\"), [location])\r\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} sx={{ height: \"3em\", marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\r\n}\r\n","import { Masonry } from \"@mui/lab\"\r\nimport { Divider, ListItem } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\nimport { useContext, useMemo } from \"react\"\r\nimport { DataContext } from \"../../Context/DataContext\"\r\nimport { OptimizationTargetContext } from \"../../Context/OptimizationTargetContext\"\r\nimport { getDisplayHeader, getDisplaySections } from \"../../Formula/DisplayUtil\"\r\nimport { DisplaySub } from \"../../Formula/type\"\r\nimport { NodeDisplay } from \"../../Formula/uiData\"\r\nimport { customRead } from \"../../Formula/utils\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { objectMap } from \"../../Util/Util\"\r\nimport CardDark from \"../Card/CardDark\"\r\nimport CardHeaderCustom from \"../Card/CardHeaderCustom\"\r\nimport { FieldDisplayList, NodeFieldDisplay } from \"../FieldDisplay\"\r\nimport ImgIcon from \"../Image/ImgIcon\"\r\nimport SqBadge from \"../SqBadge\"\r\n\r\nexport default function StatDisplayComponent() {\r\n  const { data } = useContext(DataContext)\r\n  const sections = useMemo(() =>\r\n    getDisplaySections(data).filter(([, ns]) => Object.values(ns).some(n => !n.isEmpty)),\r\n    [data])\r\n  return <Box sx={{ mr: -1, mb: -1 }}>\r\n    <Masonry columns={{ xs: 1, sm: 2, md: 3, xl: 4 }} spacing={1}>\r\n      {sections.map(([key, Nodes]) =>\r\n        <Section key={key} displayNs={Nodes} sectionKey={key} />)}\r\n    </Masonry >\r\n  </Box>\r\n}\r\n\r\nfunction Section({ displayNs, sectionKey }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\r\n  const optimizationTarget = useContext(OptimizationTargetContext)\r\n  const { data, oldData } = useContext(DataContext)\r\n  const header = usePromise(() => getDisplayHeader(data, sectionKey), [data, sectionKey])\r\n  const displayNsReads = useMemo(() => objectMap(displayNs, (n, nodeKey) => customRead([\"display\", sectionKey, nodeKey])), [displayNs, sectionKey]);\r\n  if (!header) return <CardDark></CardDark>\r\n\r\n  const { title, icon, action } = header\r\n  return <CardDark >\r\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\r\n    <Divider />\r\n    <FieldDisplayList sx={{ m: 0 }}>\r\n      {Object.entries(displayNs).map(([nodeKey, n]) =>\r\n        <NodeFieldDisplay key={nodeKey} node={n} oldValue={oldData ? oldData.get(displayNsReads[nodeKey]!).value : undefined} component={ListItem}\r\n          emphasize={JSON.stringify(optimizationTarget) === JSON.stringify([sectionKey, nodeKey])}\r\n        />)}\r\n    </FieldDisplayList>\r\n  </CardDark>\r\n}\r\n","import { BusinessCenter } from \"@mui/icons-material\";\r\nimport { Box, CardActionArea, Chip, Skeleton, Typography } from \"@mui/material\";\r\nimport { useCallback, useMemo } from \"react\";\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\r\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\r\nimport { input } from \"../../Formula\";\r\nimport { computeUIData, dataObjForWeapon } from \"../../Formula/api\";\r\nimport { NodeDisplay } from '../../Formula/uiData';\r\nimport KeyMap, { valueString } from \"../../KeyMap\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport useWeapon from \"../../ReactHooks/useWeapon\";\r\nimport { MainStatKey, SubstatKey } from \"../../Types/artifact\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport CardDark from \"../Card/CardDark\";\r\nimport ConditionalWrapper from \"../ConditionalWrapper\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport StatIcon from \"../StatIcon\";\r\nimport WeaponNameTooltip from \"./WeaponNameTooltip\";\r\n\r\ntype Data = {\r\n  weaponId?: string,\r\n  onClick?: () => void,\r\n  showLocation?: boolean,\r\n  BGComponent?: React.ElementType,\r\n}\r\n\r\nexport default function WeaponCardNano({ weaponId, showLocation = false, onClick, BGComponent = CardDark, }: Data) {\r\n  const weapon = useWeapon(weaponId)\r\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n  const actionWrapperFunc = useCallback(children => <CardActionArea sx={{ height: \"100%\" }} onClick={onClick}>{children}</CardActionArea>, [onClick],)\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  if (!weapon || !weaponSheet || !UIData) return <BGComponent sx={{ height: \"100%\" }}><Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\" }} /></BGComponent>;\r\n  const { refinement, location } = weapon\r\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\r\n    <Box display=\"flex\" height=\"100%\" alignItems=\"stretch\" >\r\n      <Box className={`grad-${weaponSheet.rarity}star`} sx={{ height: \"100%\", position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"flex-end\" }} >\r\n        <WeaponNameTooltip sheet={weaponSheet}>\r\n          <Box\r\n            component=\"img\"\r\n            src={weaponSheet.getImg(weapon.ascension)}\r\n            sx={{ mx: -1, maxHeight: \"100%\", maxWidth: \"100%\" }}\r\n          />\r\n        </WeaponNameTooltip>\r\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\r\n          <Chip size=\"small\" label={<strong>{WeaponSheet.getLevelString(weapon)}</strong>} color=\"primary\" />\r\n          {showLocation && <Chip size=\"small\" label={<LocationIcon location={location} />} color={\"secondary\"} sx={{\r\n            overflow: \"visible\", \".MuiChip-label\": {\r\n              overflow: \"visible\"\r\n            }\r\n          }} />}\r\n        </Box>\r\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"flex-end\", alignItems: \"flex-end\" }} >\r\n          {weaponSheet.hasRefinement && <Chip size=\"small\" color=\"info\" label={<strong>R{refinement}</strong>} />}\r\n        </Box>\r\n      </Box>\r\n      <Box display=\"flex\" flexDirection=\"column\" sx={{ p: 1, }}>\r\n        <WeaponStat node={UIData.get(input.weapon.main)} />\r\n        <WeaponStat node={UIData.get(input.weapon.sub)} />\r\n      </Box>\r\n    </Box>\r\n  </ConditionalWrapper></BGComponent >\r\n}\r\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\r\n  if (!node.info.key) return null\r\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\r\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\r\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 1 }} component=\"span\">\r\n      <BootstrapTooltip placement=\"top\" title={<Typography>{node.info.key && KeyMap.getArtStr(node.info.key as MainStatKey | SubstatKey)}</Typography>} disableInteractive>\r\n        <span>{StatIcon[node.info.key]}</span>\r\n      </BootstrapTooltip>\r\n      <span>{val}</span>\r\n    </Typography>\r\n  </Box>)\r\n}\r\nfunction LocationIcon({ location }) {\r\n  const characterSheet = usePromise(() => CharacterSheet.get(location ?? \"\"), [location])\r\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} sx={{ height: \"3em\", marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\r\n}\r\n","import { ChevronRight } from '@mui/icons-material';\r\nimport { Button, CardContent, Grid, Skeleton, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport { ArtifactSlotKey } from 'pipeline';\r\nimport { Suspense, useCallback, useContext, useMemo, useState } from 'react';\r\nimport ArtifactCardNano from '../../../../../Components/Artifact/ArtifactCardNano';\r\nimport ArtifactSetTooltip from '../../../../../Components/Artifact/ArtifactSetTooltip';\r\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\r\nimport CardDark from '../../../../../Components/Card/CardDark';\r\nimport CardLight from '../../../../../Components/Card/CardLight';\r\nimport StatDisplayComponent from '../../../../../Components/Character/StatDisplayComponent';\r\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\r\nimport SqBadge from '../../../../../Components/SqBadge';\r\nimport WeaponCardNano from '../../../../../Components/Weapon/WeaponCardNano';\r\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\r\nimport { DataContext } from '../../../../../Context/DataContext';\r\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\r\nimport { DatabaseContext } from '../../../../../Database/Database';\r\nimport { uiInput as input } from '../../../../../Formula';\r\nimport ArtifactCard from '../../../../../PageArtifact/ArtifactCard';\r\nimport usePromise from '../../../../../ReactHooks/usePromise';\r\nimport { allSlotKeys, ArtifactSetKey, SlotKey } from '../../../../../Types/consts';\r\nimport useBuildSetting from '../useBuildSetting';\r\n\r\ntype NewOld = {\r\n  newId: string,\r\n  oldId?: string\r\n}\r\n\r\ntype BuildDisplayItemProps = {\r\n  index?: number,\r\n  compareBuild: boolean,\r\n  disabled?: boolean,\r\n  extraButtons?: JSX.Element\r\n}\r\n//for displaying each artifact build\r\nexport default function BuildDisplayItem({ index, compareBuild, extraButtons, disabled }: BuildDisplayItemProps) {\r\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\r\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\r\n  const { database } = useContext(DatabaseContext)\r\n  const dataContext = useContext(DataContext)\r\n\r\n  const { data, oldData } = dataContext\r\n  const [newOld, setNewOld] = useState(undefined as NewOld | undefined)\r\n  const close = useCallback(() => setNewOld(undefined), [setNewOld],)\r\n\r\n  const equipBuild = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to equip this build to this character?\")) return\r\n    const newBuild = Object.fromEntries(allSlotKeys.map(s => [s, data.get(input.art[s].id).value])) as Record<SlotKey, string>\r\n    database.chars.equipArtifacts(characterKey, newBuild)\r\n    database.weapons.set(data.get(input.weapon.id).value!, { location: characterKey })\r\n  }, [characterKey, data, database])\r\n\r\n  const statProviderContext = useMemo(() => {\r\n    const dataContext_ = { ...dataContext }\r\n    if (!compareBuild) dataContext_.oldData = undefined\r\n    return dataContext_\r\n  }, [dataContext, compareBuild])\r\n\r\n  // Memoize Arts because of its dynamic onClick\r\n  const artNanos = useMemo(() => allSlotKeys.map(slotKey =>\r\n    <Grid item xs={1} key={slotKey} >\r\n      <ArtifactCardNano showLocation slotKey={slotKey} artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel} onClick={() => {\r\n        const oldId = equippedArtifacts[slotKey]\r\n        const newId = data.get(input.art[slotKey].id).value!\r\n        setNewOld({ oldId: oldId !== newId ? oldId : undefined, newId })\r\n      }} />\r\n    </Grid>), [data, setNewOld, equippedArtifacts, mainStatAssumptionLevel])\r\n\r\n  if (!oldData) return null\r\n  const currentlyEquipped = allSlotKeys.every(slotKey => data.get(input.art[slotKey].id).value === oldData.get(input.art[slotKey].id).value) && data.get(input.weapon.id).value === oldData.get(input.weapon.id).value\r\n\r\n  return <CardLight>\r\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\r\n      {newOld && <CompareArtifactModal newOld={newOld} mainStatAssumptionLevel={mainStatAssumptionLevel} onClose={close} />}\r\n      <CardContent>\r\n        <Box display=\"flex\" gap={1} sx={{ pb: 1 }} flexWrap=\"wrap\">\r\n          {index !== undefined && <SqBadge color=\"info\"><Typography><strong>#{index + 1}{currentlyEquipped ? \" (Equipped)\" : \"\"}</strong></Typography></SqBadge>}\r\n          <SetBadges currentlyEquipped={currentlyEquipped} />\r\n          <Box sx={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          </Box>\r\n          <Button size='small' color=\"success\" onClick={equipBuild} disabled={disabled || currentlyEquipped}>Equip Build</Button>\r\n          {extraButtons}\r\n        </Box>\r\n        <Grid container spacing={1} sx={{ pb: 1 }} columns={{ xs: 2, sm: 3, md: 4, lg: 6 }}>\r\n          <Grid item xs={1}>\r\n            <WeaponCardNano showLocation weaponId={data.get(input.weapon.id).value} />\r\n          </Grid>\r\n          {artNanos}\r\n        </Grid>\r\n        <DataContext.Provider value={statProviderContext}>\r\n          <StatDisplayComponent />\r\n        </DataContext.Provider>\r\n      </CardContent>\r\n    </Suspense>\r\n  </CardLight>\r\n}\r\nfunction SetBadges({ currentlyEquipped = false }: { currentlyEquipped: boolean }) {\r\n  const { data } = useContext(DataContext)\r\n  const setToSlots: Partial<Record<ArtifactSetKey, SlotKey[]>> = {}\r\n  allSlotKeys.forEach(slotKey => {\r\n    const set = data.get(input.art[slotKey].set).value as ArtifactSetKey | undefined\r\n    if (!set) return\r\n    if (setToSlots[set]) setToSlots[set]!.push(slotKey)\r\n    else setToSlots[set] = [slotKey]\r\n  })\r\n  return <>{Object.entries(setToSlots).sort(([k1, slotarr1], [k2, slotarr2]) => slotarr2.length - slotarr1.length).map(([key, slotarr]) =>\r\n    <SetBadge key={key} setKey={key} currentlyEquipped={currentlyEquipped} slotarr={slotarr} />\r\n  )}</>\r\n\r\n}\r\nfunction SetBadge({ setKey, currentlyEquipped = false, slotarr }: { setKey: ArtifactSetKey, currentlyEquipped: boolean, slotarr: ArtifactSlotKey[] }) {\r\n  const artifactSheet = usePromise(() => ArtifactSheet.get(setKey), [])\r\n  if (!artifactSheet) return null\r\n  const numInSet = slotarr.length\r\n  const setActive = Object.keys(artifactSheet.setEffects).map((setKey) => parseInt(setKey)).filter(setNum => setNum <= numInSet)\r\n  return <Box>\r\n    <ArtifactSetTooltip artifactSheet={artifactSheet} numInSet={numInSet} >\r\n      <SqBadge color={currentlyEquipped ? \"success\" : \"primary\"} ><Typography >\r\n        {slotarr.map(slotKey => artifactSlotIcon(slotKey))} {artifactSheet.name ?? \"\"}\r\n        {setActive.map(n => <SqBadge sx={{ ml: 0.5 }} key={n} color=\"success\">{n}</SqBadge>)}\r\n      </Typography></SqBadge>\r\n    </ArtifactSetTooltip>\r\n  </Box>\r\n}\r\n\r\nfunction CompareArtifactModal({ newOld: { newId, oldId }, mainStatAssumptionLevel, onClose }: { newOld: NewOld, mainStatAssumptionLevel: number, onClose: () => void }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const onEquip = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to equip this artifact to this character?\")) return\r\n    database.arts.set(newId, { location: characterKey })\r\n    onClose()\r\n  }, [newId, database, characterKey, onClose])\r\n\r\n  return <ModalWrapper open={!!newId} onClose={onClose} containerProps={{ maxWidth: oldId ? \"md\" : \"xs\" }}>\r\n    <CardDark>\r\n      <CardContent sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"stretch\", gap: 2, height: \"100%\" }}>\r\n        {oldId && <Box minWidth={320}><ArtifactCard artifactId={oldId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip /></Box>}\r\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\r\n        {oldId && <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\"><Button onClick={onEquip} sx={{ display: \"flex\" }}><ChevronRight sx={{ fontSize: 40 }} /></Button></Box>}\r\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\r\n        <Box minWidth={320}><ArtifactCard artifactId={newId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip /></Box>\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n","import { CheckBox, CheckBoxOutlineBlank, Download, Info } from '@mui/icons-material';\r\nimport { Button, CardContent, Collapse, Divider, Grid, MenuItem, styled, Tooltip, Typography } from '@mui/material';\r\nimport { useContext, useMemo, useState } from 'react';\r\nimport { CartesianGrid, ComposedChart, Legend, Line, ResponsiveContainer, Scatter, XAxis, YAxis, ZAxis } from 'recharts';\r\nimport CardDark from '../../../../../Components/Card/CardDark';\r\nimport CardLight from '../../../../../Components/Card/CardLight';\r\nimport DropdownButton from '../../../../../Components/DropdownMenu/DropdownButton';\r\nimport { DataContext } from '../../../../../Context/DataContext';\r\nimport { uiInput as input } from '../../../../../Formula';\r\nimport { NumNode } from '../../../../../Formula/type';\r\nimport KeyMap from '../../../../../KeyMap';\r\nimport { MainStatKey, SubstatKey } from '../../../../../Types/artifact';\r\nimport { Build } from '../common';\r\n\r\nexport type ChartData = {\r\n  valueNode: NumNode,\r\n  plotNode: NumNode,\r\n  data: Build[]\r\n}\r\ntype ChartCardProps = {\r\n  chartData?: ChartData\r\n  plotBase: MainStatKey | SubstatKey | \"\",\r\n  setPlotBase: (key: MainStatKey | SubstatKey | \"\") => void\r\n  disabled?: boolean\r\n}\r\ntype Point = { x: number, y: number, min?: number }\r\nexport default function ChartCard({ chartData, plotBase, setPlotBase, disabled = false }: ChartCardProps) {\r\n  const [showDownload, setshowDownload] = useState(false)\r\n  const [showMin, setshowMin] = useState(true)\r\n  const { data } = useContext(DataContext)\r\n  const statKeys = [\"atk\", \"hp\", \"def\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\"]\r\n  if (data.get(input.weaponType).value !== \"catalyst\") statKeys.push(\"physical_dmg_\")\r\n  statKeys.push(`${data.get(input.charEle).value}_dmg_`)\r\n\r\n  const { displayData, downloadData } = useMemo(() => {\r\n    if (!chartData) return { displayData: null, downloadData: null }\r\n    const points = chartData.data.map(({ value: y, plot: x }) => ({ x, y })) as Point[]\r\n    const increasingX: Point[] = points.sort((a, b) => a.x - b.x)\r\n    const minimumData: Point[] = []\r\n    for (const point of increasingX) {\r\n      let last: Point | undefined\r\n      while ((last = minimumData.pop())) {\r\n        if (last.y > point.y) {\r\n          minimumData.push(last)\r\n          break\r\n        }\r\n      }\r\n      minimumData.push(point)\r\n    }\r\n\r\n    // Note:\r\n    // We can also just use `minimumData` if the plotter supports multiple data sources.\r\n    // It could be faster too since there're no empty entries in `minimumData`.\r\n    if (minimumData[0]?.x !== increasingX[0]?.x)\r\n      increasingX[0].min = minimumData[0].y\r\n    minimumData.forEach(x => { x.min = x.y })\r\n\r\n    const downloadData = {\r\n      minimum: minimumData.map(({ x, y }) => [x, y]),\r\n      allData: increasingX.map(({ x, y }) => [x, y]),\r\n    }\r\n    return { displayData: increasingX, downloadData }\r\n  }, [chartData])\r\n\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Grid container spacing={1} alignItems=\"center\">\r\n        <Grid item>\r\n          <Typography variant=\"h6\" >Optimization Target vs</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <DropdownButton title={plotBase ? KeyMap.get(plotBase) : \"Not Selected\"}\r\n            color={plotBase ? \"success\" : \"primary\"}\r\n            disabled={disabled}\r\n          >\r\n            <MenuItem onClick={() => { setPlotBase(\"\") }}>Unselect</MenuItem>\r\n            <Divider />\r\n            {statKeys.map(sKey => <MenuItem key={sKey} onClick={() => { setPlotBase(sKey as any) }}>{KeyMap.get(sKey)}</MenuItem>)}\r\n          </DropdownButton>\r\n        </Grid>\r\n        <Grid item flexGrow={1}>\r\n          <Tooltip placement=\"top\" title=\"Using data from the builder, this will generate a graph to visualize Optimization Target vs. a selected stat. The graph will show the maximum Optimization Target value per 0.01 of the selected stat.\">\r\n            <Info />\r\n          </Tooltip>\r\n        </Grid>\r\n        {!!downloadData && <Grid item>\r\n          <Button startIcon={showMin ? <CheckBox /> : <CheckBoxOutlineBlank />}\r\n            color={showMin ? \"success\" : \"secondary\"}\r\n            onClick={() => setshowMin(!showMin)}>Show Min Stat Threshold</Button>\r\n        </Grid>}\r\n        {!!downloadData && <Grid item>\r\n          <Button color=\"info\" startIcon={<Download />} onClick={() => setshowDownload(!showDownload)}>Download Data</Button>\r\n        </Grid>}\r\n      </Grid>\r\n    </CardContent>\r\n    {!!displayData && <Divider />}\r\n    {chartData && !!displayData && <CardContent>\r\n      <Collapse in={!!downloadData && showDownload}>\r\n        <CardDark sx={{ mb: 2 }}>\r\n          <CardContent>\r\n            <Typography>Min Data</Typography>\r\n            <DataDisplay data={downloadData?.minimum} />\r\n            <Typography>All Data</Typography>\r\n            <DataDisplay data={downloadData?.allData} />\r\n          </CardContent>\r\n        </CardDark>\r\n      </Collapse>\r\n      <Chart displayData={displayData} plotNode={chartData.plotNode} valueNode={chartData.valueNode} showMin={showMin} />\r\n    </CardContent>}\r\n  </CardLight >\r\n}\r\nconst TextArea = styled(\"textarea\")({\r\n  width: \"100%\",\r\n  fontFamily: \"monospace\",\r\n  resize: \"vertical\",\r\n  minHeight: \"5em\"\r\n})\r\nfunction DataDisplay({ data, }: { data?: object }) {\r\n  return <TextArea readOnly value={JSON.stringify(data)} onClick={e => {\r\n    const target = e.target as HTMLTextAreaElement;\r\n    target.selectionStart = 0;\r\n    target.selectionEnd = target.value.length;\r\n  }} />\r\n}\r\nfunction Chart({ displayData, plotNode, valueNode, showMin }: {\r\n  displayData: Point[],\r\n  plotNode: NumNode,\r\n  valueNode: NumNode,\r\n  showMin: boolean\r\n}) {\r\n  const plotBaseUnit = KeyMap.unit(plotNode.info?.key)\r\n  const valueUnit = KeyMap.unit(valueNode.info?.key)\r\n  return <ResponsiveContainer width=\"100%\" height={600}>\r\n    <ComposedChart data={displayData}>\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis dataKey=\"x\" scale=\"linear\" unit={plotBaseUnit} domain={[\"auto\", \"auto\"]} tick={{ fill: 'white' }} type=\"number\" tickFormatter={n => n > 10000 ? n.toFixed() : n.toFixed(1)} />\r\n      <YAxis name=\"DMG\" domain={[\"auto\", \"auto\"]} unit={valueUnit} allowDecimals={false} tick={{ fill: 'white' }} type=\"number\" />\r\n      <ZAxis dataKey=\"y\" range={[3, 25]} />\r\n      <Legend />\r\n      <Scatter name=\"Optimization Target\" dataKey=\"y\" fill=\"#8884d8\" line lineType=\"fitting\" isAnimationActive={false} />\r\n      {showMin && <Line name=\"Minimum Stat Requirement Threshold\" dataKey=\"min\" stroke=\"#ff7300\" type=\"stepBefore\" connectNulls strokeWidth={2} isAnimationActive={false} />}\r\n    </ComposedChart>\r\n  </ResponsiveContainer>\r\n}\r\n","import { Replay } from '@mui/icons-material';\r\nimport { Button, CardContent, Divider, Grid, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\r\nimport BootstrapTooltip from '../../../../../Components/BootstrapTooltip';\r\nimport SqBadge from '../../../../../Components/SqBadge';\r\nimport { StatColoredWithUnit } from '../../../../../Components/StatDisplay';\r\nimport StatIcon from '../../../../../Components/StatIcon';\r\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\r\nimport Artifact from '../../../../../Data/Artifacts/Artifact';\r\nimport { allElementsWithPhy } from '../../../../../Types/consts';\r\nimport useBuildSetting from '../useBuildSetting';\r\n\r\nexport const artifactsSlotsToSelectMainStats = [\"sands\", \"goblet\", \"circlet\"] as const\r\n\r\nexport default function MainStatSelectionCard({ disabled = false, }: {\r\n  disabled?: boolean\r\n}) {\r\n  const { t } = useTranslation(\"artifact\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { buildSetting: { mainStatKeys }, buildSettingDispatch } = useBuildSetting(characterKey)\r\n\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n    {artifactsSlotsToSelectMainStats.map(slotKey => {\r\n      const numSel = mainStatKeys[slotKey].length\r\n      return <Box key={slotKey}>\r\n        <Divider />\r\n        <CardContent sx={{ pt: 1 }}>\r\n          <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\", pb: 1 }}>\r\n            <BootstrapTooltip placement=\"top\" title={<Typography>{t(`slotName.${slotKey}`)}</Typography>}>\r\n              <span>{artifactSlotIcon(slotKey)}</span>\r\n            </BootstrapTooltip>\r\n            <Box flexGrow={1}>\r\n              <SqBadge color=\"info\">{numSel ? `${numSel} Selected` : `Any`}</SqBadge>\r\n            </Box>\r\n            <Button color=\"error\" size=\"small\" disabled={!mainStatKeys[slotKey].length || disabled} sx={{ mt: -1, mb: -1 }}\r\n              onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey })}>\r\n              <Replay />\r\n            </Button>\r\n          </Box>\r\n          <Grid container spacing={1}>\r\n            {Artifact.slotMainStats(slotKey).map((mainStatKey, i) => {\r\n              const element = allElementsWithPhy.find(ele => mainStatKey.includes(ele))\r\n              const color = mainStatKeys[slotKey].includes(mainStatKey)\r\n                ? element ?? \"success\"\r\n                : \"secondary\"\r\n              return <Grid item key={mainStatKey} flexGrow={1} xs={(i < 3 && slotKey !== \"goblet\") ? 4 : undefined} >\r\n                <BootstrapTooltip placement=\"top\" title={<Typography><strong><StatColoredWithUnit statKey={mainStatKey} /></strong></Typography>} disableInteractive>\r\n                  <Button fullWidth size=\"small\" color={color} sx={{ fontSize: \"1.2em\", height: \"100%\", pointerEvents: disabled ? \"none\" : undefined, cursor: disabled ? \"none\" : undefined }}\r\n                    onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey, mainStatKey })}>\r\n                    {StatIcon[mainStatKey]}\r\n                  </Button>\r\n                </BootstrapTooltip>\r\n              </Grid>\r\n            })}\r\n          </Grid>\r\n        </CardContent>\r\n      </Box>\r\n    })}\r\n  </Box >\r\n}\r\n","import { Box, CardContent, Typography } from \"@mui/material\"\r\nimport { useCallback, useContext, useMemo } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport CardLight from \"../../../../../Components/Card/CardLight\"\r\nimport InfoTooltip from \"../../../../../Components/InfoTooltip\"\r\nimport StatEditorList from \"../../../../../Components/StatEditorList\"\r\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\"\r\nimport { DataContext } from \"../../../../../Context/DataContext\"\r\nimport { input } from \"../../../../../Formula\"\r\nimport { StatKey } from \"../../../../../KeyMap\"\r\nimport { ElementKey, WeaponTypeKey } from \"../../../../../Types/consts\"\r\nimport useBuildSetting from \"../useBuildSetting\"\r\n\r\nexport default function StatFilterCard({ disabled = false }: { disabled?: boolean }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const { buildSetting: { statFilters }, buildSettingDispatch } = useBuildSetting(characterKey)\r\n  const setStatFilters = useCallback((statFilters: Dict<StatKey, number>) => buildSettingDispatch({ statFilters }), [buildSettingDispatch],)\r\n\r\n  const statKeys = useMemo(() => {\r\n    const statKeys: StatKey[] = [\"atk\", \"hp\", \"def\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\"]\r\n    if (data.get(input.weaponType).value as WeaponTypeKey !== \"catalyst\") statKeys.push(\"physical_dmg_\")\r\n    const charEle = data.get(input.charEle).value as ElementKey\r\n    statKeys.push(`${charEle}_dmg_`)\r\n    return statKeys\r\n  }, [data])\r\n\r\n\r\n  return <Box>\r\n    <CardLight>\r\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\r\n        <Typography>{t`tabOptimize.constraintFilter.title`}</Typography>\r\n        <InfoTooltip title={<Typography>{t`tabOptimize.constraintFilter.tooltip`}</Typography>} />\r\n      </CardContent>\r\n    </CardLight>\r\n    <Box display=\"flex\" flexDirection=\"column\" gap={0.5}>\r\n      <StatEditorList statKeys={statKeys} statFilters={statFilters} setStatFilters={setStatFilters} disabled={disabled} />\r\n    </Box>\r\n  </Box>\r\n}\r\n","import useDBState from \"../../../../ReactHooks/useDBState\";\r\nimport { CharacterKey } from \"../../../../Types/consts\";\r\n\r\nexport const defThreads = navigator.hardwareConcurrency || 4\r\n\r\nexport function initialTabOptimizeDBState(): {\r\n  equipmentPriority: CharacterKey[],\r\n  threads: number,\r\n} {\r\n  return {\r\n    equipmentPriority: [],\r\n    threads: defThreads\r\n  }\r\n}\r\n\r\nexport function useOptimizeDBState() {\r\n  return useDBState(\"TabOptimize\", initialTabOptimizeDBState)\r\n}\r\n","import { Add, CheckBox, CheckBoxOutlineBlank, Close, KeyboardArrowDown, KeyboardArrowUp, KeyboardDoubleArrowDown, KeyboardDoubleArrowUp, Replay, Settings } from \"@mui/icons-material\";\r\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Typography } from \"@mui/material\";\r\nimport { useCallback, useContext, useMemo } from \"react\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\r\nimport ArtifactCardPico from \"../../../../../Components/Artifact/ArtifactCardPico\";\r\nimport CardDark from \"../../../../../Components/Card/CardDark\";\r\nimport CardLight from \"../../../../../Components/Card/CardLight\";\r\nimport CharacterCardPico from \"../../../../../Components/Character/CharacterCardPico\";\r\nimport { CharacterSelectionModal } from \"../../../../../Components/Character/CharacterSelectionModal\";\r\nimport CloseButton from \"../../../../../Components/CloseButton\";\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../../../../../Components/CustomNumberInput\";\r\nimport ModalWrapper from \"../../../../../Components/ModalWrapper\";\r\nimport SqBadge from \"../../../../../Components/SqBadge\";\r\nimport WeaponCardPico from \"../../../../../Components/Weapon/WeaponCardPico\";\r\nimport { DatabaseContext } from \"../../../../../Database/Database\";\r\nimport useBoolState from \"../../../../../ReactHooks/useBoolState\";\r\nimport useCharacter from \"../../../../../ReactHooks/useCharacter\";\r\nimport useCharSelectionCallback from \"../../../../../ReactHooks/useCharSelectionCallback\";\r\nimport { ICachedCharacter } from \"../../../../../Types/character\";\r\nimport { CharacterKey } from \"../../../../../Types/consts\";\r\nimport useBuildSetting from \"../useBuildSetting\";\r\nimport { useOptimizeDBState } from \"../DBState\";\r\n\r\nexport default function UseEquipped({ disabled = false }: { disabled?: boolean }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { buildSetting: { useEquippedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\r\n  const { database } = useContext(DatabaseContext)\r\n  const [show, onOpen, onClose] = useBoolState(false)\r\n  const [{ equipmentPriority: tempEquipmentPriority }, setOptimizeDBState] = useOptimizeDBState()\r\n  //Basic validate for the equipmentPrio list to remove dups and characters that doesnt exist.\r\n  const equipmentPriority = useMemo(() => [...new Set(tempEquipmentPriority)].filter(ck => database.chars.get(ck)), [database, tempEquipmentPriority])\r\n  const setPrio = useCallback((equipmentPriority: CharacterKey[]) => setOptimizeDBState({ equipmentPriority }), [setOptimizeDBState])\r\n\r\n  const setPrioRank = useCallback((fromIndex, toIndex) => {\r\n    const arr = [...equipmentPriority]\r\n    var element = arr[fromIndex];\r\n    arr.splice(fromIndex, 1);\r\n    arr.splice(toIndex, 0, element);\r\n    setPrio(arr)\r\n  }, [equipmentPriority, setPrio])\r\n  const removePrio = useCallback((fromIndex) => {\r\n    const arr = [...equipmentPriority]\r\n    arr.splice(fromIndex, 1)\r\n    setPrio(arr)\r\n  }, [equipmentPriority, setPrio])\r\n  const addPrio = useCallback((ck: CharacterKey) => setPrio([...equipmentPriority, ck]), [equipmentPriority, setPrio])\r\n  const resetPrio = useCallback(() => setPrio([]), [setPrio])\r\n\r\n  const numAbove = useMemo(() => {\r\n    let numAbove = equipmentPriority.length\r\n    const index = equipmentPriority.indexOf(characterKey)\r\n    if (index >= 0) numAbove = index\r\n    return numAbove\r\n  }, [characterKey, equipmentPriority])\r\n  const numUseEquippedChar = useMemo(() => {\r\n    return database.chars.keys.length - 1 - numAbove\r\n  }, [numAbove, database])\r\n  const numUnlisted = useMemo(() => {\r\n    return database.chars.keys.length - equipmentPriority.length\r\n  }, [equipmentPriority, database])\r\n\r\n  return <Box display=\"flex\" gap={1}>\r\n    <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"sm\" }}><CardDark>\r\n      <CardContent>\r\n        <Grid container spacing={1}>\r\n          <Grid item flexGrow={1}>\r\n            <Typography variant=\"h6\"><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.title\">Character Priority for Equipped Artifacts</Trans></Typography>\r\n          </Grid>\r\n          <Grid item sx={{ mb: -1 }}>\r\n            <CloseButton onClick={onClose} />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent>\r\n        <CardLight sx={{ mb: 1 }}>\r\n          <CardContent>\r\n            <Typography gutterBottom><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.desc1\">When generating a build, the Optimizer will only consider equipped artifacts from characters below the current character or those not on the list.</Trans></Typography>\r\n            <Typography gutterBottom><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.desc2\">If the current character is not on the list, the Optimizer will only consider equipped artifacts from others characters that are not on the list.</Trans></Typography>\r\n          </CardContent>\r\n        </CardLight>\r\n        <Box display=\"flex\" flexDirection=\"column\" gap={2}>\r\n          {equipmentPriority.map((ck, i) =>\r\n            <SelectItem key={ck} characterKey={ck} rank={i + 1} maxRank={equipmentPriority.length} setRank={(num) => num && setPrioRank(i, num - 1)} onRemove={() => removePrio(i)} numAbove={numAbove} />)}\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <NewItem onAdd={addPrio} list={equipmentPriority} />\r\n            <Button color=\"error\" onClick={resetPrio} startIcon={<Replay />}><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.clearList\">Clear List</Trans></Button>\r\n          </Box>\r\n          {!!numUseEquippedChar && <SqBadge color=\"success\"><Typography><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.usingNum\" count={numUnlisted}>Using artifacts from <strong>{{ count: numUnlisted }}</strong> unlisted characters</Trans></Typography></SqBadge>}\r\n        </Box>\r\n      </CardContent>\r\n    </CardDark ></ModalWrapper>\r\n    <ButtonGroup sx={{ display: \"flex\", width: \"100%\" }}>\r\n      <Button sx={{ flexGrow: 1 }} onClick={() => buildSettingDispatch({ useEquippedArts: !useEquippedArts })} disabled={disabled} startIcon={useEquippedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useEquippedArts ? \"success\" : \"secondary\"}>\r\n        <Box>\r\n          <span><Trans t={t} i18nKey=\"tabOptimize.useEquipped.title\">Use Equipped Artifacts</Trans></span>\r\n          {useEquippedArts && <SqBadge><Trans t={t} i18nKey=\"tabOptimize.useEquipped.usingNum\" count={numUseEquippedChar}>Using from <strong>{{ count: numUseEquippedChar }}</strong> characters</Trans></SqBadge>}\r\n        </Box>\r\n      </Button>\r\n      {useEquippedArts && <Button sx={{ flexShrink: 1 }} color=\"info\" onClick={onOpen} disabled={disabled}><Settings /></Button>}\r\n    </ButtonGroup>\r\n  </Box>\r\n}\r\n\r\nconst itemSize = 60\r\nfunction SelectItem({ characterKey, rank, maxRank, setRank, onRemove, numAbove }: {\r\n  characterKey: CharacterKey,\r\n  rank: number,\r\n  maxRank: number,\r\n  setRank: (r: number | undefined) => void,\r\n  onRemove: () => void,\r\n  numAbove: number,\r\n}) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { database } = useContext(DatabaseContext)\r\n  const character = useCharacter(characterKey)\r\n  const onClick = useCharSelectionCallback()\r\n  if (!character) return null\r\n  const { equippedWeapon, equippedArtifacts } = character\r\n  return <CardLight sx={{ p: 1 }}  >\r\n    <Box sx={{ pb: 1, display: \"flex\", justifyContent: \"space-between\", gap: 1 }}>\r\n      <SqBadge color=\"info\">\r\n        <Typography>#{rank}</Typography>\r\n      </SqBadge>\r\n      <SqBadge sx={{ flexGrow: 1 }} color={numAbove === (rank - 1) ? \"warning\" : (rank - 1) < numAbove ? \"error\" : \"success\"}>\r\n        <Typography>{numAbove === (rank - 1) ? <Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.status.curr\">Current character</Trans>\r\n          : (rank - 1) < numAbove ? <Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.status.dont\">Don't Use artifacts</Trans> :\r\n            <Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.status.use\">Use artifacts</Trans>}</Typography>\r\n      </SqBadge>\r\n      <Box>\r\n        <ButtonGroup sx={{ flexGrow: 1 }} size=\"small\">\r\n          <CustomNumberInputButtonGroupWrapper >\r\n            <CustomNumberInput onChange={setRank} value={rank}\r\n              // startAdornment=\"Rank:\"\r\n              inputProps={{ min: 1, max: maxRank, sx: { textAlign: \"center\" } }}\r\n              sx={{ width: \"100%\", height: \"100%\", pl: 2 }} />\r\n          </CustomNumberInputButtonGroupWrapper>\r\n          <Button disabled={rank === 1} onClick={() => setRank(1)} >\r\n            <KeyboardDoubleArrowUp />\r\n          </Button>\r\n          <Button disabled={rank === 1} onClick={() => setRank(rank - 1)}  >\r\n            <KeyboardArrowUp />\r\n          </Button>\r\n          <Button disabled={rank === maxRank} onClick={() => setRank(rank + 1)}  >\r\n            <KeyboardArrowDown />\r\n          </Button>\r\n          <Button disabled={rank === maxRank} onClick={() => setRank(maxRank)}  >\r\n            <KeyboardDoubleArrowDown />\r\n          </Button>\r\n          <Button color=\"error\" onClick={onRemove}>\r\n            <Close />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Box>\r\n    </Box>\r\n    <Grid container columns={7} spacing={1}>\r\n      <Grid item xs={1} >\r\n        <CharacterCardPico characterKey={characterKey} onClick={onClick} />\r\n      </Grid>\r\n      <Grid item xs={1}><WeaponCardPico weaponId={equippedWeapon} /></Grid>\r\n      {Object.entries(equippedArtifacts).map(([slotKey, aId]) => <Grid item xs={1} key={slotKey} ><ArtifactCardPico slotKey={slotKey} artifactObj={database.arts.get(aId)} /></Grid>)}\r\n    </Grid>\r\n\r\n  </CardLight>\r\n}\r\nfunction NewItem({ onAdd, list }: { onAdd: (ck: CharacterKey) => void, list: CharacterKey[] }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const [show, onOpen, onClose] = useBoolState(false)\r\n  const filter = useCallback((char?: ICachedCharacter) => {\r\n    if (!char) return false\r\n    return !list.includes(char.key)\r\n  }, [list])\r\n  return <>\r\n    <CharacterSelectionModal show={show} onHide={onClose} onSelect={onAdd} filter={filter} />\r\n    <Button fullWidth sx={{ height: itemSize }} color=\"info\" onClick={onOpen} startIcon={<Add />} >\r\n      <Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.add\">Add character to list</Trans>\r\n    </Button>\r\n  </>\r\n}\r\n","import { CheckBox, CheckBoxOutlineBlank } from \"@mui/icons-material\";\r\nimport { Box, Button } from \"@mui/material\";\r\nimport { useContext, useMemo } from \"react\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\r\nimport SqBadge from \"../../../../../Components/SqBadge\";\r\nimport { DatabaseContext } from \"../../../../../Database/Database\";\r\nimport useBuildSetting from \"../useBuildSetting\";\r\n\r\nexport default function UseExcluded({ disabled = false, artsDirty }: { disabled?: boolean, artsDirty: object }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { buildSetting: { useExcludedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\r\n  const { database } = useContext(DatabaseContext)\r\n  const numExcludedArt = useMemo(() => artsDirty && database.arts.values.reduce((a, art) => a + ((art.exclude && art.location !== characterKey) ? 1 : 0), 0), [database, artsDirty, characterKey])\r\n  return <Button fullWidth onClick={() => buildSettingDispatch({ useExcludedArts: !useExcludedArts })} disabled={!numExcludedArt || disabled} startIcon={useExcludedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useExcludedArts ? \"success\" : \"secondary\"}>\r\n    <Box>\r\n      <span><Trans t={t} i18nKey=\"tabOptimize.useExcluded.title\" count={numExcludedArt}>Use Excluded Artifacts</Trans></span>\r\n      {useExcludedArts && <SqBadge><Trans t={t} i18nKey=\"tabOptimize.useExcluded.usingNum\" count={numExcludedArt}>Using <strong>{{ count: numExcludedArt }}</strong> excluded artifacts</Trans></SqBadge>}\r\n    </Box>\r\n  </Button>\r\n}\r\n","import Artifact from \"../../../../Data/Artifacts/Artifact\";\r\nimport { input } from \"../../../../Formula\";\r\nimport { computeUIData } from \"../../../../Formula/api\";\r\nimport { formulaString } from \"../../../../Formula/debug\";\r\nimport { Data, NumNode } from \"../../../../Formula/type\";\r\nimport { constant, setReadNodeKeys } from \"../../../../Formula/utils\";\r\nimport { allMainStatKeys, allSubstatKeys, ICachedArtifact } from \"../../../../Types/artifact\";\r\nimport { deepClone, objectKeyMap, objectMap } from \"../../../../Util/Util\";\r\nimport type { ArtifactBuildData, ArtifactsBySlot, DynStat } from \"./common\";\r\n\r\nconst dynamic = setReadNodeKeys(deepClone({ dyn: { ...input.art, ...input.artSet } }))\r\nexport const dynamicData = {\r\n  art: objectKeyMap([...allMainStatKeys, ...allSubstatKeys], key => dynamic.dyn[key]),\r\n  artSet: objectMap(input.artSet, (_, key) => dynamic.dyn[key]),\r\n}\r\n\r\nexport function compactArtifacts(arts: ICachedArtifact[], mainStatAssumptionLevel: number, allowPartial: boolean): ArtifactsBySlot {\r\n  const result: ArtifactsBySlot = {\r\n    base: {},\r\n    values: { flower: [], plume: [], goblet: [], circlet: [], sands: [] }\r\n  }\r\n  const keys = new Set<string>()\r\n\r\n  for (const art of arts) {\r\n    const mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.rarity, Math.max(Math.min(mainStatAssumptionLevel, art.rarity * 4), art.level))\r\n\r\n    const data: ArtifactBuildData = {\r\n      id: art.id, set: art.setKey,\r\n      values: {\r\n        [art.setKey]: 1,\r\n        [art.mainStatKey]: art.mainStatKey.endsWith('_') ? mainStatVal / 100 : mainStatVal,\r\n        ...Object.fromEntries(art.substats.map(substat =>\r\n          [substat.key, substat.key.endsWith('_') ? substat.accurateValue / 100 : substat.accurateValue]))\r\n      },\r\n    }\r\n    delete data.values[\"\"]\r\n    result.values[art.slotKey].push(data)\r\n    Object.keys(data.values).forEach(x => keys.add(x))\r\n  }\r\n  result.base = objectKeyMap([...keys], _ => 0)\r\n  if (allowPartial)\r\n    for (const value of Object.values(result.values))\r\n      value.push({ id: \"\", values: {} })\r\n  return result\r\n}\r\n\r\nexport function debugCompute(nodes: NumNode[], base: DynStat, arts: ArtifactBuildData[]) {\r\n  const stats = { ...base }\r\n  for (const art of arts) {\r\n    for (const [key, value] of Object.entries(art.values)) {\r\n      stats[key] = (stats[key] ?? 0) + value\r\n    }\r\n  }\r\n  const data = { dyn: Object.fromEntries(Object.entries(stats).map(([key, value]) => [key, constant(value)])) } as Data\r\n  const uiData = computeUIData([data])\r\n  return {\r\n    base, arts, stats,\r\n    data, uiData,\r\n    nodes: nodes.map(formulaString),\r\n    results: nodes.map(node => uiData.get(node)),\r\n  }\r\n}\r\n","import { CheckBox, CheckBoxOutlineBlank, Close, TrendingUp } from '@mui/icons-material';\r\nimport { Alert, Box, Button, ButtonGroup, CardContent, Divider, Grid, Link, MenuItem, Skeleton, ToggleButton, Typography } from '@mui/material';\r\nimport React, { Suspense, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// eslint-disable-next-line\r\nimport Worker from \"worker-loader!./BackgroundWorker\";\r\nimport ArtifactLevelSlider from '../../../../Components/Artifact/ArtifactLevelSlider';\r\nimport BootstrapTooltip from '../../../../Components/BootstrapTooltip';\r\nimport CardLight from '../../../../Components/Card/CardLight';\r\nimport CharacterCard from '../../../../Components/Character/CharacterCard';\r\nimport DropdownButton from '../../../../Components/DropdownMenu/DropdownButton';\r\nimport { HitModeToggle, ReactionToggle } from '../../../../Components/HitModeEditor';\r\nimport SolidToggleButtonGroup from '../../../../Components/SolidToggleButtonGroup';\r\nimport { CharacterContext } from '../../../../Context/CharacterContext';\r\nimport { DataContext, dataContextObj } from '../../../../Context/DataContext';\r\nimport { OptimizationTargetContext } from '../../../../Context/OptimizationTargetContext';\r\nimport { DatabaseContext } from '../../../../Database/Database';\r\nimport { mergeData, uiDataForTeam } from '../../../../Formula/api';\r\nimport { uiInput as input } from '../../../../Formula/index';\r\nimport { optimize } from '../../../../Formula/optimization';\r\nimport { NumNode } from '../../../../Formula/type';\r\nimport { UIData } from '../../../../Formula/uiData';\r\nimport KeyMap from '../../../../KeyMap';\r\nimport useCharacterReducer from '../../../../ReactHooks/useCharacterReducer';\r\nimport useCharSelectionCallback from '../../../../ReactHooks/useCharSelectionCallback';\r\nimport useDBState from '../../../../ReactHooks/useDBState';\r\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate';\r\nimport useTeamData, { getTeamData } from '../../../../ReactHooks/useTeamData';\r\nimport { initGlobalSettings } from '../../../../stateInit';\r\nimport { ICachedArtifact } from '../../../../Types/artifact';\r\nimport { CharacterKey } from '../../../../Types/consts';\r\nimport { objPathValue, range } from '../../../../Util/Util';\r\nimport { FinalizeResult, Setup, WorkerCommand, WorkerResult } from './BackgroundWorker';\r\nimport { maxBuildsToShowList } from './Build';\r\nimport { artSetPerm, Build, filterFeasiblePerm, mergeBuilds, mergePlot, pruneAll, RequestFilter } from './common';\r\nimport ArtifactSetConfig from './Components/ArtifactSetConfig';\r\nimport AssumeFullLevelToggle from './Components/AssumeFullLevelToggle';\r\nimport BonusStatsCard from './Components/BonusStatsCard';\r\nimport BuildAlert, { BuildStatus } from './Components/BuildAlert';\r\nimport BuildDisplayItem from './Components/BuildDisplayItem';\r\nimport ChartCard, { ChartData } from './Components/ChartCard';\r\nimport MainStatSelectionCard from './Components/MainStatSelectionCard';\r\nimport OptimizationTargetSelector from './Components/OptimizationTargetSelector';\r\nimport StatFilterCard from './Components/StatFilterCard';\r\nimport UseEquipped from './Components/UseEquipped';\r\nimport UseExcluded from './Components/UseExcluded';\r\nimport { defThreads, useOptimizeDBState } from './DBState';\r\nimport { compactArtifacts, dynamicData } from './foreground';\r\nimport useBuildSetting from './useBuildSetting';\r\n\r\nexport default function TabBuild() {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character: { key: characterKey, compareData } } = useContext(CharacterContext)\r\n  const [{ tcMode }] = useDBState(\"GlobalSettings\", initGlobalSettings)\r\n  const { database } = useContext(DatabaseContext)\r\n\r\n  const [buildStatus, setBuildStatus] = useState({ type: \"inactive\", tested: 0, failed: 0, skipped: 0, total: 0 } as BuildStatus)\r\n  const generatingBuilds = buildStatus.type !== \"inactive\"\r\n\r\n  const [chartData, setchartData] = useState(undefined as ChartData | undefined)\r\n\r\n  const [artsDirty, setArtsDirty] = useForceUpdate()\r\n\r\n  const [{ equipmentPriority, threads = defThreads }, setOptimizeDBState] = useOptimizeDBState()\r\n  const maxWorkers = threads > defThreads ? defThreads : threads\r\n  const setMaxWorkers = useCallback(threads => setOptimizeDBState({ threads }), [setOptimizeDBState],)\r\n\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const onClickTeammate = useCharSelectionCallback()\r\n\r\n  const noArtifact = useMemo(() => !database.arts.values.length, [database])\r\n\r\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\r\n  const { plotBase, optimizationTarget, mainStatAssumptionLevel, allowPartial, builds, buildDate, maxBuildsToShow, levelLow, levelHigh } = buildSetting\r\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel)\r\n  const { characterSheet, target: data } = teamData?.[characterKey as CharacterKey] ?? {}\r\n  const buildsArts = useMemo(() => builds.map(build => build.map(i => database.arts.get(i)!)), [builds, database])\r\n\r\n  //register changes in artifact database\r\n  useEffect(() =>\r\n    database.arts.followAny(setArtsDirty),\r\n    [setArtsDirty, database])\r\n\r\n  // Provides a function to cancel the work\r\n  const cancelToken = useRef(() => { })\r\n  //terminate worker when component unmounts\r\n  useEffect(() => () => cancelToken.current(), [])\r\n  const generateBuilds = useCallback(async () => {\r\n    const { artSetExclusion, plotBase, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useExcludedArts, useEquippedArts, allowPartial, maxBuildsToShow, levelLow, levelHigh } = buildSetting\r\n    if (!characterKey || !optimizationTarget) return\r\n\r\n    let cantTakeList: CharacterKey[] = []\r\n    if (useEquippedArts) {\r\n      const index = equipmentPriority.indexOf(characterKey)\r\n      if (index < 0) cantTakeList = [...equipmentPriority]\r\n      else cantTakeList = equipmentPriority.slice(0, index)\r\n    }\r\n    const filteredArts = database.arts.values.filter(art => {\r\n      if (art.level < levelLow) return false\r\n      if (art.level > levelHigh) return false\r\n      const mainStats = mainStatKeys[art.slotKey]\r\n      if (mainStats?.length && !mainStats.includes(art.mainStatKey)) return false\r\n\r\n      // If its equipped on the selected character, bypass the check\r\n      if (art.location === characterKey) return true\r\n\r\n      if (art.exclude && !useExcludedArts) return false\r\n      if (art.location && !useEquippedArts) return false\r\n      if (art.location && useEquippedArts && cantTakeList.includes(art.location)) return false\r\n      return true\r\n    })\r\n    const split = compactArtifacts(filteredArts, mainStatAssumptionLevel, allowPartial)\r\n\r\n    const teamData = await getTeamData(database, characterKey, mainStatAssumptionLevel, [])\r\n    if (!teamData) return\r\n    const workerData = uiDataForTeam(teamData.teamData, characterKey)[characterKey as CharacterKey]?.target.data![0]\r\n    if (!workerData) return\r\n    Object.assign(workerData, mergeData([workerData, dynamicData])) // Mark art fields as dynamic\r\n    let optimizationTargetNode = objPathValue(workerData.display ?? {}, optimizationTarget) as NumNode | undefined\r\n    if (!optimizationTargetNode) return\r\n    const targetNode = optimizationTargetNode\r\n    const valueFilter: { value: NumNode, minimum: number }[] = Object.entries(statFilters).map(([key, value]) => {\r\n      if (key.endsWith(\"_\")) value = value / 100 // TODO: Conversion\r\n      return { value: input.total[key], minimum: value }\r\n    }).filter(x => x.value && x.minimum > -Infinity)\r\n\r\n    setchartData(undefined)\r\n\r\n    const cancelled = new Promise<void>(r => cancelToken.current = r)\r\n\r\n    let nodes = [...valueFilter.map(x => x.value), optimizationTargetNode], arts = split!\r\n    const setPerms = filterFeasiblePerm(artSetPerm(artSetExclusion, Object.values(split.values).flatMap(x => x.map(x => x.set!))), split)\r\n\r\n    const minimum = [...valueFilter.map(x => x.minimum), -Infinity]\r\n    const status: Omit<BuildStatus, \"type\"> = { tested: 0, failed: 0, skipped: 0, total: NaN, startTime: performance.now() }\r\n    if (plotBase) {\r\n      nodes.push(input.total[plotBase])\r\n      minimum.push(-Infinity)\r\n    }\r\n\r\n    const prepruneArts = arts\r\n    nodes = optimize(nodes, workerData, ({ path: [p] }) => p !== \"dyn\");\r\n    ({ nodes, arts } = pruneAll(nodes, minimum, arts, maxBuildsToShow, artSetExclusion, {\r\n      reaffine: true, pruneArtRange: true, pruneNodeRange: true, pruneOrder: true\r\n    }))\r\n    nodes = optimize(nodes, {}, _ => false)\r\n\r\n    const plotBaseNode = plotBase ? nodes.pop() : undefined\r\n    optimizationTargetNode = nodes.pop()!\r\n\r\n    const wrap = { buildValues: Array(maxBuildsToShow).fill(0).map(_ => -Infinity) }\r\n\r\n    const minFilterCount = 8_000_000, maxRequestFilterInFlight = maxWorkers * 4\r\n    const unprunedFilters = setPerms[Symbol.iterator](), requestFilters: RequestFilter[] = []\r\n    const idleWorkers: number[] = [], splittingWorkers = new Set<number>()\r\n    const workers: Worker[] = []\r\n\r\n    function fetchContinueWork(): WorkerCommand {\r\n      return { command: \"split\", filter: undefined, minCount: minFilterCount, threshold: wrap.buildValues[maxBuildsToShow - 1] }\r\n    }\r\n    function fetchPruningWork(): WorkerCommand | undefined {\r\n      const { done, value } = unprunedFilters.next()\r\n      return done ? undefined : {\r\n        command: \"split\", minCount: minFilterCount,\r\n        threshold: wrap.buildValues[maxBuildsToShow - 1], filter: value,\r\n      }\r\n    }\r\n    function fetchRequestWork(): WorkerCommand | undefined {\r\n      const filter = requestFilters.pop()\r\n      return !filter ? undefined : {\r\n        command: \"iterate\",\r\n        threshold: wrap.buildValues[maxBuildsToShow - 1], filter\r\n      }\r\n    }\r\n\r\n    const filters = nodes\r\n      .map((value, i) => ({ value, min: minimum[i] }))\r\n      .filter(x => x.min > -Infinity)\r\n\r\n    const finalizedList: Promise<FinalizeResult>[] = []\r\n    for (let i = 0; i < maxWorkers; i++) {\r\n      const worker = new Worker()\r\n\r\n      const setup: Setup = {\r\n        command: \"setup\",\r\n        id: i, arts,\r\n        optimizationTarget: optimizationTargetNode,\r\n        plotBase: plotBaseNode,\r\n        maxBuilds: maxBuildsToShow,\r\n        filters\r\n      }\r\n      worker.postMessage(setup, undefined)\r\n      if (i === 0) {\r\n        const countCommand: WorkerCommand = { command: \"count\", exclusion: artSetExclusion, arts: [arts, prepruneArts] }\r\n        worker.postMessage(countCommand, undefined)\r\n      }\r\n      let finalize: (_: FinalizeResult) => void\r\n      const finalized = new Promise<FinalizeResult>(r => finalize = r)\r\n      worker.onmessage = async ({ data }: { data: { id: number } & WorkerResult }) => {\r\n        switch (data.command) {\r\n          case \"interim\":\r\n            status.tested += data.tested\r\n            status.failed += data.failed\r\n            status.skipped += data.skipped\r\n            if (data.buildValues) {\r\n              wrap.buildValues.push(...data.buildValues)\r\n              wrap.buildValues.sort((a, b) => b - a).splice(maxBuildsToShow)\r\n            }\r\n            break\r\n          case \"split\":\r\n            if (data.filter) {\r\n              requestFilters.push(data.filter)\r\n              splittingWorkers.add(data.id)\r\n            } else splittingWorkers.delete(data.id)\r\n            idleWorkers.push(data.id)\r\n            break\r\n          case \"iterate\":\r\n            idleWorkers.push(data.id)\r\n            break\r\n          case \"finalize\":\r\n            worker.terminate()\r\n            finalize(data);\r\n            return\r\n          case \"count\":\r\n            const [pruned, prepruned] = data.counts\r\n            status.total = prepruned\r\n            status.skipped += prepruned - pruned\r\n            return\r\n          default: console.log(\"DEBUG\", data)\r\n        }\r\n        while (idleWorkers.length) {\r\n          const id = idleWorkers.pop()!, worker = workers[id]\r\n          let work: WorkerCommand | undefined\r\n          if (requestFilters.length < maxRequestFilterInFlight) {\r\n            work = fetchPruningWork()\r\n            if (!work && splittingWorkers.has(id)) work = fetchContinueWork()\r\n          }\r\n          if (!work) work = fetchRequestWork()\r\n          if (work) worker.postMessage(work)\r\n          else {\r\n            idleWorkers.push(id)\r\n            if (idleWorkers.length === 8 * maxWorkers) {\r\n              const command: WorkerCommand = { command: \"finalize\" }\r\n              workers.forEach(worker => worker.postMessage(command))\r\n            }\r\n            break\r\n          }\r\n        }\r\n      }\r\n\r\n      workers.push(worker)\r\n      cancelled.then(() => worker.terminate())\r\n      finalizedList.push(finalized)\r\n    }\r\n    for (let i = 0; i < 7; i++)\r\n      idleWorkers.push(...range(0, maxWorkers - 1))\r\n\r\n    const buildTimer = setInterval(() => setBuildStatus({ type: \"active\", ...status }), 100)\r\n    const results = await Promise.any([Promise.all(finalizedList), cancelled])\r\n    clearInterval(buildTimer)\r\n    cancelToken.current = () => { }\r\n\r\n    if (!results) {\r\n      status.tested = 0\r\n      status.failed = 0\r\n      status.skipped = 0\r\n      status.total = 0\r\n    } else {\r\n      if (plotBase) {\r\n        const plotData = mergePlot(results.map(x => x.plotData!))\r\n        const plotBaseNode = input.total[plotBase] as NumNode\r\n        let data = Object.values(plotData)\r\n        if (KeyMap.unit(targetNode.info?.key) === \"%\")\r\n          data = data.map(({ value, plot }) => ({ value: value * 100, plot })) as Build[]\r\n        if (KeyMap.unit(plotBaseNode!.info?.key) === \"%\")\r\n          data = data.map(({ value, plot }) => ({ value, plot: (plot ?? 0) * 100 })) as Build[]\r\n        setchartData({\r\n          valueNode: targetNode,\r\n          plotNode: plotBaseNode,\r\n          data\r\n        })\r\n      }\r\n      const builds = mergeBuilds(results.map(x => x.builds), maxBuildsToShow)\r\n      if (process.env.NODE_ENV === \"development\") console.log(\"Build Result\", builds)\r\n      buildSettingDispatch({ builds: builds.map(build => build.artifactIds), buildDate: Date.now() })\r\n    }\r\n    setBuildStatus({ ...status, type: \"inactive\", finishTime: performance.now() })\r\n  }, [characterKey, database, buildSettingDispatch, maxWorkers, buildSetting, equipmentPriority])\r\n\r\n  const characterName = characterSheet?.name ?? \"Character Name\"\r\n\r\n  const setPlotBase = useCallback(plotBase => {\r\n    buildSettingDispatch({ plotBase })\r\n    setchartData(undefined)\r\n  }, [buildSettingDispatch])\r\n  const dataContext: dataContextObj | undefined = useMemo(() => {\r\n    return data && teamData && { data, teamData }\r\n  }, [data, teamData])\r\n\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n    {noArtifact && <Alert severity=\"warning\" variant=\"filled\"> Opps! It looks like you haven't added any artifacts to GO yet! You should go to the <Link component={RouterLink} to=\"/artifact\">Artifacts</Link> page and add some!</Alert>}\r\n    {/* Build Generator Editor */}\r\n    {dataContext && <DataContext.Provider value={dataContext}>\r\n\r\n      <Grid container spacing={1} >\r\n        {/* 1*/}\r\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n          {/* character card */}\r\n          <Box><CharacterCard characterKey={characterKey} onClickTeammate={onClickTeammate} /></Box>\r\n        </Grid>\r\n\r\n        {/* 2 */}\r\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n          <CardLight>\r\n            <CardContent  >\r\n              <Typography gutterBottom>Main Stat</Typography>\r\n              <BootstrapTooltip placement=\"top\" title={<Typography><strong>Level Assumption</strong> changes mainstat value to be at least a specific level. Does not change substats.</Typography>}>\r\n                <Box>\r\n                  <AssumeFullLevelToggle mainStatAssumptionLevel={mainStatAssumptionLevel} setmainStatAssumptionLevel={mainStatAssumptionLevel => buildSettingDispatch({ mainStatAssumptionLevel })} disabled={generatingBuilds} />\r\n                </Box>\r\n              </BootstrapTooltip>\r\n            </CardContent>\r\n            {/* main stat selector */}\r\n            <MainStatSelectionCard disabled={generatingBuilds} />\r\n          </CardLight>\r\n          <BonusStatsCard />\r\n        </Grid>\r\n\r\n        {/* 3 */}\r\n        <Grid item xs={12} sm={6} lg={6} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n          <ArtifactSetConfig disabled={generatingBuilds} />\r\n\r\n          {/* use excluded */}\r\n          <UseExcluded disabled={generatingBuilds} artsDirty={artsDirty} />\r\n\r\n          {/* use equipped */}\r\n          <UseEquipped disabled={generatingBuilds} />\r\n\r\n          <Button fullWidth startIcon={allowPartial ? <CheckBox /> : <CheckBoxOutlineBlank />} color={allowPartial ? \"success\" : \"secondary\"} onClick={() => buildSettingDispatch({ allowPartial: !allowPartial })}>{t`tabOptimize.allowPartial`}</Button>\r\n          { /* Level Filter */}\r\n          <CardLight>\r\n            <CardContent>Artifact Level Filter</CardContent>\r\n            <ArtifactLevelSlider levelLow={levelLow} levelHigh={levelHigh}\r\n              setLow={levelLow => buildSettingDispatch({ levelLow })}\r\n              setHigh={levelHigh => buildSettingDispatch({ levelHigh })}\r\n              setBoth={(levelLow, levelHigh) => buildSettingDispatch({ levelLow, levelHigh })}\r\n              disabled={generatingBuilds}\r\n            />\r\n          </CardLight>\r\n\r\n          {/*Minimum Final Stat Filter */}\r\n          <StatFilterCard disabled={generatingBuilds} />\r\n\r\n        </Grid>\r\n      </Grid>\r\n      {/* Footer */}\r\n      <Grid container spacing={1}>\r\n        <Grid item flexGrow={1} >\r\n          <ButtonGroup>\r\n            <Button\r\n              disabled={!characterKey || generatingBuilds || !optimizationTarget || !objPathValue(data?.getDisplay(), optimizationTarget)}\r\n              color={characterKey ? \"success\" : \"warning\"}\r\n              onClick={generateBuilds}\r\n              startIcon={<TrendingUp />}\r\n            >Generate Builds</Button>\r\n            <DropdownButton disabled={generatingBuilds || !characterKey}\r\n              title={<span><b>{maxBuildsToShow}</b> {maxBuildsToShow === 1 ? \"Build\" : \"Builds\"}</span>}>\r\n              <MenuItem>\r\n                <Typography variant=\"caption\" color=\"info.main\">\r\n                  Decreasing the number of generated build will decrease build calculation time for large number of builds.\r\n                </Typography>\r\n              </MenuItem>\r\n              <Divider />\r\n              {maxBuildsToShowList.map(v => <MenuItem key={v}\r\n                onClick={() => buildSettingDispatch({ maxBuildsToShow: v })}>{v} {v === 1 ? \"Build\" : \"Builds\"}</MenuItem>)}\r\n            </DropdownButton>\r\n            <DropdownButton disabled={generatingBuilds || !characterKey}\r\n              title={<span><b>{maxWorkers}</b> {maxWorkers === 1 ? \"Thread\" : \"Threads\"}</span>}>\r\n              <MenuItem>\r\n                <Typography variant=\"caption\" color=\"info.main\">\r\n                  Increasing the number of threads will speed up build time, but will use more CPU power.\r\n                </Typography>\r\n              </MenuItem>\r\n              <Divider />\r\n              {range(1, defThreads).reverse().map(v => <MenuItem key={v}\r\n                onClick={() => setMaxWorkers(v)}>{v} {v === 1 ? \"Thread\" : \"Threads\"}</MenuItem>)}\r\n            </DropdownButton>\r\n            <Button\r\n              disabled={!generatingBuilds}\r\n              color=\"error\"\r\n              onClick={() => cancelToken.current()}\r\n              startIcon={<Close />}\r\n            >Cancel</Button>\r\n          </ButtonGroup>\r\n        </Grid>\r\n        <Grid item>\r\n          <span>Optimization Target: </span>\r\n          {<OptimizationTargetSelector\r\n            optimizationTarget={optimizationTarget}\r\n            setTarget={target => buildSettingDispatch({ optimizationTarget: target })}\r\n            disabled={!!generatingBuilds}\r\n          />}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {!!characterKey && <BuildAlert {...{ status: buildStatus, characterName, maxBuildsToShow }} />}\r\n      {tcMode && <Box >\r\n        <ChartCard disabled={generatingBuilds} chartData={chartData} plotBase={plotBase} setPlotBase={setPlotBase} />\r\n      </Box>}\r\n      <CardLight>\r\n        <CardContent>\r\n          <Box display=\"flex\" alignItems=\"center\" gap={1} mb={1} >\r\n            <Typography sx={{ flexGrow: 1 }}>\r\n              {builds ? <span>Showing <strong>{builds.length}</strong> Builds generated for {characterName}. {!!buildDate && <span>Build generated on: <strong>{(new Date(buildDate)).toLocaleString()}</strong></span>}</span>\r\n                : <span>Select a character to generate builds.</span>}\r\n            </Typography>\r\n            <Button disabled={!builds.length} color=\"error\" onClick={() => buildSettingDispatch({ builds: [], buildDate: 0 })} >Clear Builds</Button>\r\n          </Box>\r\n          <Grid container display=\"flex\" spacing={1}>\r\n            <Grid item><HitModeToggle size=\"small\" /></Grid>\r\n            <Grid item><ReactionToggle size=\"small\" /></Grid>\r\n            <Grid item flexGrow={1} />\r\n            <Grid item><SolidToggleButtonGroup exclusive value={compareData} onChange={(e, v) => characterDispatch({ compareData: v })} size=\"small\">\r\n              <ToggleButton value={false} disabled={!compareData}>Show new builds</ToggleButton>\r\n              <ToggleButton value={true} disabled={compareData}>Compare vs. equipped</ToggleButton>\r\n            </SolidToggleButtonGroup></Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </CardLight>\r\n      <OptimizationTargetContext.Provider value={optimizationTarget}>\r\n        <BuildList buildsArts={buildsArts} characterKey={characterKey} data={data} compareData={compareData} disabled={!!generatingBuilds} />\r\n      </OptimizationTargetContext.Provider>\r\n    </DataContext.Provider>}\r\n  </Box>\r\n}\r\nfunction BuildList({ buildsArts, characterKey, data, compareData, disabled }: {\r\n  buildsArts: ICachedArtifact[][],\r\n  characterKey?: \"\" | CharacterKey,\r\n  data?: UIData,\r\n  compareData: boolean,\r\n  disabled: boolean,\r\n}) {\r\n  // Memoize the build list because calculating/rendering the build list is actually very expensive, which will cause longer optimization times.\r\n  const list = useMemo(() => <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\r\n    {buildsArts?.map((build, index) => characterKey && data && <DataContextWrapper\r\n      key={index + build.join()}\r\n      characterKey={characterKey}\r\n      build={build}\r\n      oldData={data}\r\n    >\r\n      <BuildDisplayItem index={index} compareBuild={compareData} disabled={disabled} />\r\n    </DataContextWrapper>\r\n    )}\r\n  </Suspense>, [buildsArts, characterKey, data, compareData, disabled])\r\n  return list\r\n}\r\n\r\ntype Prop = {\r\n  children: React.ReactNode\r\n  characterKey: CharacterKey,\r\n  build: ICachedArtifact[],\r\n  oldData: UIData,\r\n}\r\nfunction DataContextWrapper({ children, characterKey, build, oldData }: Prop) {\r\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\r\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, build)\r\n  const providerValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [teamData, oldData, characterKey])\r\n  if (!providerValue) return null\r\n  return <DataContext.Provider value={providerValue}>\r\n    {children}\r\n  </DataContext.Provider>\r\n}\r\n","import { Close, Difference } from \"@mui/icons-material\"\r\nimport { Button, Skeleton, Tooltip, Typography } from \"@mui/material\"\r\nimport { Suspense, useContext, useMemo } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { CharacterContext } from \"../../../../Context/CharacterContext\"\r\nimport { HitModeToggle, ReactionToggle } from \"../../../../Components/HitModeEditor\"\r\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\r\nimport { DatabaseContext } from \"../../../../Database/Database\"\r\nimport { DataContext } from \"../../../../Context/DataContext\"\r\nimport useBoolState from \"../../../../ReactHooks/useBoolState\"\r\nimport useTeamData from \"../../../../ReactHooks/useTeamData\"\r\nimport { objectMap } from \"../../../../Util/Util\"\r\nimport useBuildSetting from \"../TabOptimize/useBuildSetting\"\r\nimport BuildDisplayItem from \"../TabOptimize/Components/BuildDisplayItem\"\r\n\r\nexport default function CompareBuildButton({ artId, weaponId }: { artId?: string, weaponId?: string }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const [show, onShow, onHide] = useBoolState(false)\r\n  const { database } = useContext(DatabaseContext)\r\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\r\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\r\n  const { data: oldData } = useContext(DataContext)\r\n  const build = useMemo(() => {\r\n    const newArt = database.arts.get(artId ?? \"\")\r\n    const artmap = objectMap(equippedArtifacts, (id, slot) => slot === newArt?.slotKey ? newArt : database.arts.get(id))\r\n    return Object.values(artmap)\r\n  }, [database, equippedArtifacts, artId])\r\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, build, weaponId ? database.weapons.get(weaponId) : undefined)\r\n  const dataProviderValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [characterKey, teamData, oldData])\r\n  return <>\r\n    <ModalWrapper open={show} onClose={onHide} containerProps={{ maxWidth: \"xl\" }}>\r\n      <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\r\n        {dataProviderValue && <DataContext.Provider value={dataProviderValue}>\r\n          <BuildDisplayItem compareBuild={true} extraButtons={<><HitModeToggle size=\"small\" /><ReactionToggle size=\"small\" /><Button size='small' color=\"error\" onClick={onHide} ><Close /></Button></>} />\r\n        </DataContext.Provider>}\r\n      </Suspense>\r\n    </ModalWrapper>\r\n    <Tooltip title={<Typography>{t`tabEquip.compare`}</Typography>} placement=\"top\" arrow>\r\n      <Button color=\"info\" size=\"small\" onClick={onShow} ><Difference /></Button>\r\n    </Tooltip>\r\n  </>\r\n}\r\n","import { Box, CardContent, Divider, Grid, Skeleton, Typography } from \"@mui/material\"\r\nimport { lazy, Suspense, useCallback, useContext, useEffect, useMemo, useReducer } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Assets from \"../../../../Assets/Assets\"\r\nimport CardDark from \"../../../../Components/Card/CardDark\"\r\nimport CloseButton from \"../../../../Components/CloseButton\"\r\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\r\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\r\nimport { DatabaseContext } from \"../../../../Database/Database\"\r\nimport ArtifactCard from \"../../../../PageArtifact/ArtifactCard\"\r\nimport { artifactFilterConfigs, FilterOption, initialFilterOption } from \"../../../../PageArtifact/ArtifactSort\"\r\nimport useForceUpdate from \"../../../../ReactHooks/useForceUpdate\"\r\nimport useMediaQueryUp from \"../../../../ReactHooks/useMediaQueryUp\"\r\nimport { SlotKey } from \"../../../../Types/consts\"\r\nimport { filterFunction } from \"../../../../Util/SortByFilters\"\r\nimport CompareBuildButton from \"./CompareBuildButton\"\r\nconst numToShowMap = { xs: 6, sm: 6, md: 9, lg: 12, xl: 12 }\r\n\r\nconst ArtifactFilterDisplay = lazy(() => import('../../../../Components/Artifact/ArtifactFilterDisplay'))\r\n\r\nexport default function ArtifactSwapModal({ onChangeId, slotKey, show, onClose }:\r\n  { onChangeId: (id: string) => void, slotKey: SlotKey, show: boolean, onClose: () => void }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { database } = useContext(DatabaseContext)\r\n  const clickHandler = useCallback((id) => {\r\n    onChangeId(id)\r\n    onClose()\r\n  }, [onChangeId, onClose])\r\n  const filterOptionReducer = useCallback((state, action) => ({ ...state, ...action, slotKeys: [slotKey] }), [slotKey],)\r\n\r\n  const [filterOption, filterOptionDispatch]: [FilterOption, (action: any) => void] = useReducer(filterOptionReducer, { ...initialFilterOption(), slotKeys: [slotKey] })\r\n\r\n  const [dbDirty, forceUpdate] = useForceUpdate()\r\n  useEffect(() => { return database.arts.followAny(forceUpdate) }, [database, forceUpdate])\r\n\r\n  const brPt = useMediaQueryUp()\r\n\r\n  const filterConfigs = useMemo(() => artifactFilterConfigs(), [])\r\n  const artIdList = useMemo(() => {\r\n    const filterFunc = filterFunction(filterOption, filterConfigs)\r\n    return dbDirty && database.arts.values.filter(filterFunc).map(art => art.id).slice(0, numToShowMap[brPt])\r\n  }, [dbDirty, database, filterConfigs, filterOption, brPt])\r\n\r\n  return <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"xl\" }} >\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1, display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n        <Typography variant=\"h6\">{slotKey ? <ImgIcon src={Assets.slot[slotKey]} /> : null} {t`tabEquip.swapArt`}</Typography>\r\n        <CloseButton onClick={onClose} />\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent>\r\n        <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={200} />}>\r\n          <ArtifactFilterDisplay filterOption={filterOption} filterOptionDispatch={filterOptionDispatch} disableSlotFilter />\r\n        </Suspense>\r\n        <Box mt={1}>\r\n          <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={300} />}>\r\n            <Grid container spacing={1} columns={{ xs: 2, md: 3, lg: 4 }}>\r\n              {artIdList.map(id =>\r\n                <Grid item key={id} xs={1} >\r\n                  <ArtifactCard\r\n                    artifactId={id}\r\n                    extraButtons={<CompareBuildButton artId={id} />}\r\n                    onClick={clickHandler}\r\n                  />\r\n                </Grid>)}\r\n            </Grid>\r\n          </Suspense>\r\n        </Box>\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n","import { Box, CardContent, Divider, Grid, TextField, ToggleButton, Typography } from \"@mui/material\"\r\nimport { ChangeEvent, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Assets from \"../../../../Assets/Assets\"\r\nimport CardDark from \"../../../../Components/Card/CardDark\"\r\nimport CloseButton from \"../../../../Components/CloseButton\"\r\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\r\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\r\nimport SolidToggleButtonGroup from \"../../../../Components/SolidToggleButtonGroup\"\r\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\"\r\nimport WeaponSheet from \"../../../../Data/Weapons/WeaponSheet\"\r\nimport { DatabaseContext } from \"../../../../Database/Database\"\r\nimport WeaponCard from \"../../../../PageWeapon/WeaponCard\"\r\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate'\r\nimport usePromise from \"../../../../ReactHooks/usePromise\"\r\nimport { allRarities, Rarity, WeaponTypeKey } from \"../../../../Types/consts\"\r\nimport { handleMultiSelect } from \"../../../../Util/MultiSelect\"\r\nimport { filterFunction, sortFunction } from '../../../../Util/SortByFilters'\r\nimport { weaponFilterConfigs, weaponSortConfigs } from '../../../../Util/WeaponSort'\r\nimport CompareBuildButton from \"./CompareBuildButton\"\r\n\r\nconst rarityHandler = handleMultiSelect([...allRarities])\r\n\r\nexport default function WeaponSwapModal({ onChangeId, weaponTypeKey, show, onClose }: { onChangeId: (id: string) => void, weaponTypeKey: WeaponTypeKey, show: boolean, onClose: () => void }) {\r\n  const { t } = useTranslation([\"page_character\", \"page_weapon\", \"weaponNames_gen\"])\r\n  const { database } = useContext(DatabaseContext)\r\n  const clickHandler = useCallback((id: string) => {\r\n    onChangeId(id)\r\n    onClose()\r\n  }, [onChangeId, onClose])\r\n\r\n  const [dbDirty, forceUpdate] = useForceUpdate()\r\n  useEffect(() => database.weapons.followAny(forceUpdate), [forceUpdate, database])\r\n\r\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\r\n\r\n  const filterConfigs = useMemo(() => weaponSheets && weaponFilterConfigs(weaponSheets), [weaponSheets])\r\n  const sortConfigs = useMemo(() => weaponSheets && weaponSortConfigs(weaponSheets), [weaponSheets])\r\n\r\n  const [rarity, setRarity] = useState<Rarity[]>([5, 4, 3])\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const deferredSearchTerm = useDeferredValue(searchTerm)\r\n\r\n  const weaponIdList = useMemo(() => (filterConfigs && sortConfigs && dbDirty && database.weapons.values\r\n    .filter(filterFunction({ weaponType: weaponTypeKey, rarity, name: deferredSearchTerm }, filterConfigs))\r\n    .sort(sortFunction(\"level\", false, sortConfigs))\r\n    .map(weapon => weapon.id)) ?? []\r\n    , [dbDirty, database, filterConfigs, sortConfigs, rarity, weaponTypeKey, deferredSearchTerm])\r\n\r\n  return <ModalWrapper open={show} onClose={onClose} >\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container>\r\n          <Grid item flexGrow={1}>\r\n            <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} {t`page_character:tabEquip.swapWeapon`}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <CloseButton onClick={onClose} />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent>\r\n        <Grid container spacing={1} mb={1}>\r\n          <Grid item>\r\n            <SolidToggleButtonGroup sx={{ height: \"100%\" }} value={rarity} size=\"small\">\r\n              {allRarities.map(star => <ToggleButton key={star} value={star} onClick={() => setRarity(rarityHandler(rarity, star))}>\r\n                <Box display=\"flex\" gap={1}><strong>{star}</strong><StarsDisplay stars={1} /></Box>\r\n              </ToggleButton>)}\r\n            </SolidToggleButtonGroup>\r\n          </Grid>\r\n          <Grid item flexGrow={1}>\r\n            <TextField\r\n              autoFocus\r\n              size=\"small\"\r\n              value={searchTerm}\r\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\r\n              label={t(\"page_weapon:weaponName\")}\r\n              sx={{ height: \"100%\" }}\r\n              InputProps={{\r\n                sx: { height: \"100%\" }\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1}>\r\n          {weaponIdList.map(weaponId =>\r\n            <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\r\n              <WeaponCard\r\n                weaponId={weaponId}\r\n                onClick={clickHandler}\r\n                extraButtons={<CompareBuildButton weaponId={weaponId} />}\r\n              />\r\n            </Grid>)}\r\n        </Grid>\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n","import { Settings, SwapHoriz } from '@mui/icons-material';\r\nimport { Box, Button, CardContent, Divider, Grid, ListItem, Stack, Tooltip, Typography, useMediaQuery } from '@mui/material';\r\nimport { useTheme } from \"@mui/system\";\r\nimport { lazy, Suspense, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport SetEffectDisplay from '../../../../Components/Artifact/SetEffectDisplay';\r\nimport SlotNameWithIcon from '../../../../Components/Artifact/SlotNameWIthIcon';\r\nimport SubstatToggle from '../../../../Components/Artifact/SubstatToggle';\r\nimport CardDark from '../../../../Components/Card/CardDark';\r\nimport CardLight from '../../../../Components/Card/CardLight';\r\nimport DocumentDisplay from \"../../../../Components/DocumentDisplay\";\r\nimport { BasicFieldDisplay, FieldDisplayList } from '../../../../Components/FieldDisplay';\r\nimport ModalWrapper from '../../../../Components/ModalWrapper';\r\nimport PercentBadge from '../../../../Components/PercentBadge';\r\nimport { CharacterContext } from '../../../../Context/CharacterContext';\r\nimport { DataContext } from '../../../../Context/DataContext';\r\nimport Artifact from '../../../../Data/Artifacts/Artifact';\r\nimport { ArtifactSheet } from '../../../../Data/Artifacts/ArtifactSheet';\r\nimport { DatabaseContext } from '../../../../Database/Database';\r\nimport { uiInput as input } from '../../../../Formula';\r\nimport ArtifactCard from '../../../../PageArtifact/ArtifactCard';\r\nimport WeaponCard from '../../../../PageWeapon/WeaponCard';\r\nimport useBoolState from '../../../../ReactHooks/useBoolState';\r\nimport useDBState from \"../../../../ReactHooks/useDBState\";\r\nimport usePromise from '../../../../ReactHooks/usePromise';\r\nimport { initCharMeta } from '../../../../stateInit';\r\nimport { allSubstatKeys } from '../../../../Types/artifact';\r\nimport { allSlotKeys, SlotKey, WeaponTypeKey } from '../../../../Types/consts';\r\nimport { IFieldDisplay } from '../../../../Types/fieldDisplay';\r\nimport useBuildSetting from '../TabOptimize/useBuildSetting';\r\nimport ArtifactSwapModal from './ArtifactSwapModal';\r\nimport WeaponSwapModal from './WeaponSwapModal';\r\n\r\nconst WeaponEditor = lazy(() => import('../../../../PageWeapon/WeaponEditor'))\r\n\r\nexport default function EquipmentSection() {\r\n  const { character: { equippedWeapon, key: characterKey }, characterSheet } = useContext(CharacterContext)\r\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\r\n  const { teamData, data } = useContext(DataContext)\r\n  const weaponSheet = teamData[characterKey]?.weaponSheet\r\n  const [weaponId, setweaponId] = useState(\"\")\r\n  const showWeapon = useCallback(() => setweaponId(equippedWeapon), [equippedWeapon],)\r\n  const hideWeapon = useCallback(() => setweaponId(\"\"), [])\r\n\r\n  //triggers when character swap weapons\r\n  useEffect(() => {\r\n    if (weaponId && weaponId !== equippedWeapon)\r\n      setweaponId(equippedWeapon)\r\n  }, [weaponId, equippedWeapon])\r\n\r\n  const theme = useTheme();\r\n  const breakpoint = useMediaQuery(theme.breakpoints.up('lg'));\r\n\r\n  const weaponDoc = useMemo(() => weaponSheet && weaponSheet.document.length > 0 && <CardLight><CardContent><DocumentDisplay sections={weaponSheet.document} /></CardContent></CardLight>, [weaponSheet])\r\n  const [{ rvFilter }] = useDBState(`charMeta_${characterKey}`, initCharMeta)\r\n  const deferredRvFilter = useDeferredValue(rvFilter)\r\n  const deferredRvSet = useMemo(() => new Set(deferredRvFilter), [deferredRvFilter])\r\n  return <Box >\r\n    <Suspense fallback={false}>\r\n      <WeaponEditor\r\n        weaponId={weaponId}\r\n        footer\r\n        onClose={hideWeapon}\r\n        extraButtons={<LargeWeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />}\r\n      />\r\n    </Suspense>\r\n    <Grid container spacing={1}>\r\n      {breakpoint && <Grid item xs={12} md={12} lg={3} xl={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\r\n        {weaponDoc && weaponDoc}\r\n        <ArtifactSectionCard />\r\n      </Grid>}\r\n      <Grid item xs={12} md={12} lg={9} xl={9} container spacing={1}>\r\n        <Grid item xs={12} sm={6} md={4} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n          <WeaponCard weaponId={equippedWeapon} onEdit={showWeapon} canEquip extraButtons={<WeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />} />\r\n        </Grid>\r\n        {allSlotKeys.map(slotKey => <Grid item xs={12} sm={6} md={4} key={slotKey} >\r\n          {!!data.get(input.art[slotKey].id).value ?\r\n            <ArtifactCard artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel} effFilter={deferredRvSet}\r\n              extraButtons={<ArtifactSwapButton slotKey={slotKey} />} editor canExclude canEquip /> :\r\n            <ArtSwapCard slotKey={slotKey} />}\r\n        </Grid>)}\r\n      </Grid>\r\n      {!breakpoint && <Grid item xs={12} md={12} xl={3} container spacing={1} >\r\n        {weaponDoc && <Grid item xs={12} md={6} lg={4}>{weaponDoc}</Grid>}\r\n        <Grid item xs={12} md={6} lg={4} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n          <ArtifactSectionCard />\r\n        </Grid>\r\n      </Grid>}\r\n    </Grid>\r\n  </Box>\r\n}\r\nfunction ArtSwapCard({ slotKey }: { slotKey: SlotKey }) {\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { database } = useContext(DatabaseContext)\r\n  const [show, onOpen, onClose] = useBoolState()\r\n  return <CardLight sx={{ height: \"100%\", width: \"100%\", minHeight: 300, display: \"flex\", flexDirection: \"column\" }}>\r\n    <CardContent>\r\n      <Typography><SlotNameWithIcon slotKey={slotKey} /></Typography>\r\n    </CardContent>\r\n    <Divider />\r\n    <Box sx={{\r\n      flexGrow: 1,\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\"\r\n    }}\r\n    >\r\n      <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: characterKey })} />\r\n      <Button onClick={onOpen} color=\"info\" sx={{ borderRadius: \"1em\", }}>\r\n        <SwapHoriz sx={{ height: 100, width: 100 }} />\r\n      </Button>\r\n    </Box>\r\n  </CardLight>\r\n}\r\nfunction WeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { database } = useContext(DatabaseContext)\r\n  const [show, onOpen, onClose] = useBoolState()\r\n  return <>\r\n    <Tooltip title={<Typography>{t`tabEquip.swapWeapon`}</Typography>} placement=\"top\" arrow>\r\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\r\n    </Tooltip>\r\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: characterKey })} show={show} onClose={onClose} />\r\n  </>\r\n}\r\nfunction LargeWeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { database } = useContext(DatabaseContext)\r\n  const [show, onOpen, onClose] = useBoolState()\r\n  return <>\r\n    <Button color=\"info\" onClick={onOpen} startIcon={<SwapHoriz />} >{t`tabEquip.swapWeapon`}</Button>\r\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: characterKey })} show={show} onClose={onClose} />\r\n  </>\r\n}\r\nfunction ArtifactSwapButton({ slotKey }: { slotKey: SlotKey }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { database } = useContext(DatabaseContext)\r\n  const [show, onOpen, onClose] = useBoolState()\r\n  return <>\r\n    <Tooltip title={<Typography>{t`tabEquip.swapArt`}</Typography>} placement=\"top\" arrow>\r\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\r\n    </Tooltip>\r\n    <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: characterKey })} />\r\n  </>\r\n}\r\nfunction ArtifactSectionCard() {\r\n  const { t } = useTranslation([\"page_character\", \"artifact\"])\r\n  const { database } = useContext(DatabaseContext)\r\n  const { character, character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\r\n  const hasEquipped = useMemo(() => !!Object.values(equippedArtifacts).filter(i => i).length, [equippedArtifacts])\r\n  const unequipArts = useCallback(() => {\r\n    if (!character) return\r\n    if (!window.confirm(\"Do you want to move all currently equipped artifacts to inventory?\")) return\r\n    Object.values(equippedArtifacts).forEach(aid => database.arts.set(aid, { location: \"\" }))\r\n  }, [character, database, equippedArtifacts])\r\n\r\n  const setEffects = useMemo(() => artifactSheets && ArtifactSheet.setEffects(artifactSheets, data), [artifactSheets, data])\r\n  const [{ rvFilter }, setCharMeta] = useDBState(`charMeta_${characterKey}`, initCharMeta)\r\n  const setRVFilter = useCallback(rvFilter => setCharMeta({ rvFilter }), [setCharMeta],)\r\n\r\n  const [show, onShow, onHide] = useBoolState()\r\n  const deferredrvFilter = useDeferredValue(rvFilter)\r\n  const { rvField, rvmField } = useMemo(() => {\r\n    const { currentEfficiency, currentEfficiency_, maxEfficiency, maxEfficiency_ } = Object.values(equippedArtifacts).reduce((a, artid) => {\r\n      const art = database.arts.get(artid)\r\n      if (art) {\r\n        const { currentEfficiency, maxEfficiency } = Artifact.getArtifactEfficiency(art, new Set(deferredrvFilter))\r\n        const { currentEfficiency: currentEfficiency_, maxEfficiency: maxEfficiency_ } = Artifact.getArtifactEfficiency(art, new Set(allSubstatKeys))\r\n        a.currentEfficiency = a.currentEfficiency + currentEfficiency\r\n        a.maxEfficiency = a.maxEfficiency + maxEfficiency\r\n\r\n        a.currentEfficiency_ = a.currentEfficiency_ + currentEfficiency_\r\n        a.maxEfficiency_ = a.maxEfficiency_ + maxEfficiency_\r\n      }\r\n      return a\r\n    }, { currentEfficiency: 0, currentEfficiency_: 0, maxEfficiency: 0, maxEfficiency_: 0 })\r\n    const rvField: IFieldDisplay = {\r\n      text: t`artifact:editor.curSubEff`,\r\n      value: !(currentEfficiency - currentEfficiency_) ? <PercentBadge value={currentEfficiency} max={4500} valid /> :\r\n        <span><PercentBadge value={currentEfficiency} max={4500} valid /> / <PercentBadge value={currentEfficiency_} max={4500} valid /></span>\r\n    }\r\n    const rvmField: IFieldDisplay = {\r\n      text: t`artifact:editor.maxSubEff`,\r\n      canShow: () => !!(currentEfficiency_ - maxEfficiency_),\r\n      value: !(maxEfficiency - maxEfficiency_) ? <PercentBadge value={maxEfficiency} max={4500} valid /> :\r\n        <span><PercentBadge value={maxEfficiency} max={4500} valid /> / <PercentBadge value={maxEfficiency_} max={4500} valid /></span>\r\n    }\r\n    return { rvField, rvmField }\r\n  }, [t, deferredrvFilter, equippedArtifacts, database])\r\n\r\n  return <CardLight>\r\n    {hasEquipped && <Button color=\"error\" onClick={unequipArts} fullWidth sx={{ borderBottomRightRadius: 0, borderBottomLeftRadius: 0 }}>{t`tabEquip.unequipArts`}</Button>}\r\n    <CardContent >\r\n      <Stack spacing={1}>\r\n        <CardDark >\r\n          <Button fullWidth color=\"info\" startIcon={<Settings />} sx={{ borderBottomLeftRadius: 0, borderBottomRightRadius: 0 }} onClick={onShow}>RV Filter</Button>\r\n          <ModalWrapper open={show} onClose={onHide}>\r\n            <CardDark>\r\n              <CardContent>\r\n                <SubstatToggle selectedKeys={rvFilter} onChange={setRVFilter} />\r\n              </CardContent>\r\n            </CardDark>\r\n          </ModalWrapper>\r\n          <FieldDisplayList >\r\n            <BasicFieldDisplay field={rvField} component={ListItem} />\r\n            {rvmField?.canShow?.(data) && <BasicFieldDisplay field={rvmField} component={ListItem} />}\r\n          </FieldDisplayList>\r\n        </CardDark>\r\n        {artifactSheets && setEffects && Object.entries(setEffects).flatMap(([setKey, setNumKeyArr]) =>\r\n          setNumKeyArr.map(setNumKey => <CardDark key={setKey + setNumKey} sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\r\n            <SetEffectDisplay key={setKey + setNumKey} setKey={setKey} setNumKey={setNumKey} />\r\n          </CardDark>)\r\n        )}\r\n      </Stack>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n","import { Favorite, FavoriteBorder } from \"@mui/icons-material\";\r\nimport { Badge, Box, CardActionArea, CardContent, Chip, Grid, IconButton, Stack, Typography } from \"@mui/material\";\r\nimport { useCallback, useContext, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Assets from \"../../../../Assets/Assets\";\r\nimport ArtifactCardNano from \"../../../../Components/Artifact/ArtifactCardNano\";\r\nimport CardLight from \"../../../../Components/Card/CardLight\";\r\nimport CharacterCardPico from \"../../../../Components/Character/CharacterCardPico\";\r\nimport StatDisplayComponent from \"../../../../Components/Character/StatDisplayComponent\";\r\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\";\r\nimport SqBadge from \"../../../../Components/SqBadge\";\r\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\";\r\nimport StatIcon from \"../../../../Components/StatIcon\";\r\nimport WeaponCardNano from \"../../../../Components/Weapon/WeaponCardNano\";\r\nimport { CharacterContext } from \"../../../../Context/CharacterContext\";\r\nimport { DataContext } from \"../../../../Context/DataContext\";\r\nimport { TalentSheetElementKey } from \"../../../../Data/Characters/CharacterSheet\";\r\nimport { getLevelString } from \"../../../../Data/LevelData\";\r\nimport { uiInput as input } from \"../../../../Formula\";\r\nimport useCharacterReducer from \"../../../../ReactHooks/useCharacterReducer\";\r\nimport useDBState from \"../../../../ReactHooks/useDBState\";\r\nimport { initCharMeta } from \"../../../../stateInit\";\r\nimport { allSlotKeys, Ascension, ElementKey } from \"../../../../Types/consts\";\r\nimport { range } from \"../../../../Util/Util\";\r\nimport EquipmentSection from \"./EquipmentSection\";\r\n\r\nexport default function TabOverview() {\r\n  const scrollRef = useRef<HTMLDivElement>()\r\n  const onScroll = useCallback(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), [scrollRef])\r\n\r\n  return <Stack spacing={1}>\r\n    <Grid container spacing={1} sx={{ justifyContent: \"center\" }}>\r\n      <Grid item xs={8} sm={5} md={4} lg={2.3}  >\r\n        <CharacterProfileCard />\r\n      </Grid>\r\n      <Grid item xs={12} sm={7} md={8} lg={9.7} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\r\n        <EquipmentRow onClick={onScroll} />\r\n        <CardLight sx={{ flexGrow: 1, p: 1 }}>\r\n          <StatDisplayComponent />\r\n        </CardLight>\r\n      </Grid>\r\n    </Grid >\r\n    <Box ref={scrollRef}>\r\n      <EquipmentSection />\r\n    </Box>\r\n  </Stack>\r\n}\r\nfunction EquipmentRow({ onClick }: { onClick: () => void }) {\r\n  const { character: { equippedWeapon } } = useContext(CharacterContext)\r\n  const { data, } = useContext(DataContext)\r\n\r\n  return <Grid container spacing={1} columns={{ xs: 2, sm: 2, md: 3, lg: 6, xl: 6 }}>\r\n    <Grid item xs={1}>\r\n      <WeaponCardNano weaponId={equippedWeapon} BGComponent={CardLight} onClick={onClick} />\r\n    </Grid>\r\n    {allSlotKeys.map(slotKey =>\r\n      <Grid item key={slotKey} xs={1} >\r\n        <ArtifactCardNano artifactId={data.get(input.art[slotKey].id).value} slotKey={slotKey} BGComponent={CardLight} onClick={onClick} />\r\n      </Grid>)}\r\n  </Grid>\r\n}\r\n/* Image card with star and name and level */\r\nfunction CharacterProfileCard() {\r\n  const { characterSheet, character: { key: characterKey, team } } = useContext(CharacterContext)\r\n  const { data, } = useContext(DataContext)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const navigate = useNavigate()\r\n  const charEle = data.get(input.charEle).value as ElementKey\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  const level = data.get(input.lvl).value\r\n  const ascension = data.get(input.asc).value as Ascension\r\n  const constellation = data.get(input.constellation).value\r\n  const tlvl = {\r\n    auto: data.get(input.total.auto).value,\r\n    skill: data.get(input.total.skill).value,\r\n    burst: data.get(input.total.burst).value,\r\n  }\r\n  const tBoost = {\r\n    auto: data.get(input.bonus.auto).value,\r\n    skill: data.get(input.bonus.skill).value,\r\n    burst: data.get(input.bonus.burst).value,\r\n  }\r\n  const [{ favorite }, setCharMeta] = useDBState(`charMeta_${characterKey}`, initCharMeta)\r\n  return <CardLight sx={{ height: \"100%\" }} >\r\n    <Box sx={{ position: \"relative\" }}>\r\n      <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\" }}>\r\n        <Typography variant=\"h6\" sx={{ position: \"absolute\", left: \"50%\", bottom: 0, transform: \"translate(-50%, -50%)\", opacity: 0.75 }}>\r\n          <StarsDisplay stars={characterSheet.rarity} colored />\r\n        </Typography>\r\n        <Box sx={{ position: \"absolute\", left: \"50%\", bottom: \"5%\", transform: \"translate(-50%, -50%)\", opacity: 0.85, width: \"100%\", display: \"flex\", justifyContent: \"center\", px: 1 }}>\r\n          <Chip color={charEle} sx={{ height: \"auto\" }}\r\n            label={<Typography variant=\"h6\" sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\r\n              {StatIcon[charEle]}\r\n              <Box sx={{ whiteSpace: \"normal\", textAlign: \"center\" }}>{characterSheet.name}</Box>\r\n              <ImgIcon src={Assets.weaponTypes?.[weaponTypeKey]} />\r\n            </Typography>} />\r\n        </Box>\r\n        <Box sx={{ position: \"absolute\", left: 0, top: 0 }}>\r\n          <IconButton sx={{ p: 1 }} color=\"error\" onClick={() => setCharMeta({ favorite: !favorite })}>\r\n            {favorite ? <Favorite /> : <FavoriteBorder />}\r\n          </IconButton>\r\n        </Box>\r\n        <Typography sx={{ p: 1, position: \"absolute\", right: 0, top: 0, opacity: 0.8 }}>\r\n          <SqBadge>{getLevelString(level, ascension)}</SqBadge>\r\n        </Typography>\r\n      </Box>\r\n      <Box src={characterSheet.cardImg} component=\"img\" width=\"100%\" height=\"auto\" />\r\n    </Box>\r\n    <CardContent>\r\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"talent\")}>\r\n        <Grid container spacing={1} mt={-1}>\r\n          {([\"auto\", \"skill\", \"burst\"] as TalentSheetElementKey[]).map(tKey =>\r\n            <Grid item xs={4} key={tKey}>\r\n              <Badge badgeContent={tlvl[tKey]} color={tBoost[tKey] ? \"info\" : \"secondary\"}\r\n                overlap=\"circular\"\r\n                anchorOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'right',\r\n                }}\r\n                sx={{\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  \"& > .MuiBadge-badge\": {\r\n                    fontSize: \"1.25em\",\r\n                    padding: \".25em .4em\",\r\n                    borderRadius: \".5em\",\r\n                    lineHeight: 1,\r\n                    height: \"1.25em\"\r\n                  }\r\n                }}>\r\n                <Box component=\"img\" src={characterSheet.getTalentOfKey(tKey, charEle)?.img} width=\"100%\" height=\"auto\" />\r\n              </Badge>\r\n            </Grid>)}\r\n        </Grid>\r\n      </CardActionArea>\r\n      <Typography sx={{ textAlign: \"center\", mt: 1 }} variant=\"h6\">{characterSheet.constellationName}</Typography>\r\n      <Grid container spacing={1}>\r\n        {range(1, 6).map(i =>\r\n          <Grid item xs={4} key={i}>\r\n            <CardActionArea onClick={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}>\r\n              <Box component=\"img\" src={characterSheet.getTalentOfKey(`constellation${i}` as TalentSheetElementKey, charEle)?.img}\r\n                sx={{\r\n                  ...(constellation >= i ? {} : { filter: \"brightness(50%)\" })\r\n                }}\r\n                width=\"100%\" height=\"auto\" />\r\n            </CardActionArea>\r\n          </Grid>)}\r\n      </Grid>\r\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"teambuffs\")}>\r\n        <Grid container columns={3} spacing={1}>\r\n          {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={team[i]} index={i} /></Grid>)}\r\n        </Grid>\r\n      </CardActionArea>\r\n    </CardContent>\r\n  </CardLight >\r\n}\r\n","import { Box, CardActionArea, CardContent, Grid, MenuItem, Typography, useMediaQuery } from \"@mui/material\";\r\nimport { useTheme } from \"@mui/system\";\r\nimport React, { useCallback, useContext, useMemo } from 'react';\r\nimport { CharacterContext } from \"../../../Context/CharacterContext\";\r\nimport CardDark from \"../../../Components/Card/CardDark\";\r\nimport CardLight from \"../../../Components/Card/CardLight\";\r\nimport ConditionalWrapper from \"../../../Components/ConditionalWrapper\";\r\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\r\nimport DropdownButton from \"../../../Components/DropdownMenu/DropdownButton\";\r\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\r\nimport { TalentSheetElementKey } from \"../../../Data/Characters/CharacterSheet\";\r\nimport { DataContext } from '../../../Context/DataContext';\r\nimport { uiInput as input } from \"../../../Formula\";\r\nimport { NumNode } from \"../../../Formula/type\";\r\nimport { NodeDisplay } from '../../../Formula/uiData';\r\nimport useCharacterReducer from \"../../../ReactHooks/useCharacterReducer\";\r\nimport { ElementKey } from \"../../../Types/consts\";\r\nimport { DocumentSection } from \"../../../Types/sheet\";\r\nimport { range } from \"../../../Util/Util\";\r\n\r\nconst talentSpacing = {\r\n  xs: 12,\r\n  sm: 6,\r\n  md: 4\r\n}\r\n\r\nexport default function CharacterTalentPane() {\r\n  const { character, characterSheet } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const characterDispatch = useCharacterReducer(character.key)\r\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]] as [TalentSheetElementKey, string][]\r\n  const passivesList: [tKey: TalentSheetElementKey, tText: string, asc: number][] = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n  const charEle = data.get(input.charEle).value as ElementKey | undefined\r\n  const ascension = data.get(input.asc).value\r\n  const constellation = data.get(input.constellation).value\r\n\r\n  const theme = useTheme();\r\n  const grlg = useMediaQuery(theme.breakpoints.up('lg'));\r\n  const constellationCards = useMemo(() => range(1, 6).map(i =>\r\n    <SkillDisplayCard\r\n      talentKey={`constellation${i}` as TalentSheetElementKey}\r\n      subtitle={`Constellation Lv. ${i}`}\r\n      onClickTitle={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}\r\n    />), [constellation, characterDispatch])\r\n  return <>\r\n    <ReactionDisplay />\r\n    <Grid container spacing={1}>\r\n      {/* constellations for 4column */}\r\n      {grlg && <Grid item xs={12} md={12} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\r\n        <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\r\n        {constellationCards.map((c, i) => <Box key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} >{c}</Box>)}\r\n      </Grid>}\r\n      <Grid item xs={12} md={12} lg={9} container spacing={1} >\r\n        {/* auto, skill, burst */}\r\n        {skillBurstList.map(([tKey, tText]) =>\r\n          <Grid item key={tKey} {...talentSpacing} >\r\n            <SkillDisplayCard\r\n              talentKey={tKey}\r\n              subtitle={tText}\r\n            />\r\n          </Grid>)}\r\n        {!!characterSheet.getTalentOfKey(\"sprint\", charEle) && <Grid item {...talentSpacing} >\r\n          <SkillDisplayCard\r\n            talentKey=\"sprint\"\r\n            subtitle=\"Alternative Sprint\"\r\n          />\r\n        </Grid>}\r\n        {!!characterSheet.getTalentOfKey(\"passive\", charEle) && <Grid item {...talentSpacing} >\r\n          <SkillDisplayCard\r\n            talentKey=\"passive\"\r\n            subtitle=\"Passive\"\r\n          />\r\n        </Grid>}\r\n        {/* passives */}\r\n        {passivesList.map(([tKey, tText, asc]) => {\r\n          let enabled = ascension >= asc\r\n          if (!characterSheet.getTalentOfKey(tKey, charEle)) return null\r\n          return <Grid item key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} {...talentSpacing} >\r\n            <SkillDisplayCard\r\n              talentKey={tKey}\r\n              subtitle={tText}\r\n            />\r\n          </Grid>\r\n        })}\r\n      </Grid>\r\n      {/* constellations for < 4 columns */}\r\n      {!grlg && <Grid item xs={12} md={12} lg={3} container spacing={1} >\r\n        <Grid item xs={12}>\r\n          <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\r\n        </Grid>\r\n        {constellationCards.map((c, i) => <Grid item key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} {...talentSpacing} >{c}</Grid>)}\r\n      </Grid>}\r\n    </Grid>\r\n  </>\r\n}\r\nfunction ReactionDisplay() {\r\n  const { data } = useContext(DataContext)\r\n  const reaction = data.getDisplay().reaction as { [key: string]: NodeDisplay }\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Grid container spacing={1}>\r\n        {Object.entries(reaction).map(([key, node]) => {\r\n          return <Grid item key={key}>\r\n            <CardDark><CardContent sx={{ p: 1, \"&:last-child\": { pb: 1 } }}>\r\n              <NodeFieldDisplay node={node} />\r\n            </CardContent></CardDark>\r\n          </Grid>\r\n        })}\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\ntype SkillDisplayCardProps = {\r\n  talentKey: TalentSheetElementKey,\r\n  subtitle: string,\r\n  onClickTitle?: (any) => any\r\n}\r\nfunction SkillDisplayCard({ talentKey, subtitle, onClickTitle }: SkillDisplayCardProps) {\r\n  const { character: { talent }, characterSheet, characterDispatch } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n\r\n  const actionWrapeprFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickTitle}>{children}</CardActionArea>,\r\n    [onClickTitle],\r\n  )\r\n\r\n  const setTalentLevel = useCallback((tKey: TalentSheetElementKey, newTalentLevelKey: number) =>\r\n    characterDispatch({ talent: { ...talent, [tKey]: newTalentLevelKey } }), [talent, characterDispatch])\r\n\r\n  let header: Displayable | null = null\r\n\r\n  if (talentKey in talent) {\r\n    const levelBoost = data.get(input.bonus[talentKey] as NumNode).value\r\n    const level = data.get(input.total[talentKey]).value\r\n    const asc = data.get(input.asc).value\r\n\r\n    header = <DropdownButton fullWidth title={`Talent Lv. ${level}`} color={levelBoost ? \"info\" : \"primary\"} sx={{ borderRadius: 0 }}>\r\n      {range(1, talentLimits[asc]).map(i =>\r\n        <MenuItem key={i} selected={talent[talentKey] === (i)} disabled={talent[talentKey] === (i)} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost}</MenuItem>)}\r\n    </DropdownButton>\r\n  }\r\n  const talentSheet = characterSheet.getTalentOfKey(talentKey, data.get(input.charEle).value as ElementKey | undefined)\r\n\r\n  // Hide header if the header matches the current talent\r\n  const hideHeader = (section: DocumentSection): boolean => {\r\n    let headerAction = section.header?.action\r\n    if (headerAction && (typeof headerAction !== \"string\")) {\r\n      const key: string = headerAction.props.children.props.key18\r\n      return key.includes(talentKey)\r\n    }\r\n    return false\r\n  }\r\n\r\n  return <CardLight sx={{ height: \"100%\" }}>\r\n    {header}\r\n    <CardContent>\r\n      <ConditionalWrapper condition={!!onClickTitle} wrapper={actionWrapeprFunc} >\r\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\r\n          <Grid item>\r\n            <Box component=\"img\" src={talentSheet?.img} sx={{ width: 60, height: \"auto\" }} />\r\n          </Grid>\r\n          <Grid item flexGrow={1} sx={{ pl: 1 }}>\r\n            <Typography variant=\"h6\">{talentSheet?.name}</Typography>\r\n            <Typography variant=\"subtitle1\">{subtitle}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </ConditionalWrapper>\r\n      {/* Display document sections */}\r\n      {talentSheet?.sections ? <DocumentDisplay sections={talentSheet.sections} hideDesc hideHeader={hideHeader} /> : null}\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n","import { DeleteForever, Info } from \"@mui/icons-material\";\r\nimport { Box, Button, ButtonGroup, CardContent, CardHeader, Divider, Grid, ListItem, MenuItem, Skeleton, Stack, ToggleButton } from \"@mui/material\";\r\nimport { WeaponTypeKey } from \"pipeline\";\r\nimport { useCallback, useContext, useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ArtifactSetSingleAutocomplete } from \"../../../../Components/Artifact/ArtifactAutocomplete\";\r\nimport ArtifactSetTooltip from \"../../../../Components/Artifact/ArtifactSetTooltip\";\r\nimport SetEffectDisplay from \"../../../../Components/Artifact/SetEffectDisplay\";\r\nimport { slotIconSVG } from \"../../../../Components/Artifact/SlotNameWIthIcon\";\r\nimport CardDark from \"../../../../Components/Card/CardDark\";\r\nimport CardLight from \"../../../../Components/Card/CardLight\";\r\nimport StatDisplayComponent from \"../../../../Components/Character/StatDisplayComponent\";\r\nimport CustomNumberInput from \"../../../../Components/CustomNumberInput\";\r\nimport DocumentDisplay from \"../../../../Components/DocumentDisplay\";\r\nimport DropdownButton from \"../../../../Components/DropdownMenu/DropdownButton\";\r\nimport { FieldDisplayList, NodeFieldDisplay } from \"../../../../Components/FieldDisplay\";\r\nimport FontAwesomeSvgIcon from \"../../../../Components/FontAwesomeSvgIcon\";\r\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\";\r\nimport LevelSelect from \"../../../../Components/LevelSelect\";\r\nimport RefinementDropdown from \"../../../../Components/RefinementDropdown\";\r\nimport SolidToggleButtonGroup from \"../../../../Components/SolidToggleButtonGroup\";\r\nimport { StatColoredWithUnit, StatWithUnit } from \"../../../../Components/StatDisplay\";\r\nimport StatIcon from \"../../../../Components/StatIcon\";\r\nimport WeaponSelectionModal from \"../../../../Components/Weapon/WeaponSelectionModal\";\r\nimport { CharacterContext } from \"../../../../Context/CharacterContext\";\r\nimport { DataContext, dataContextObj } from \"../../../../Context/DataContext\";\r\nimport Artifact from \"../../../../Data/Artifacts/Artifact\";\r\nimport { ArtifactSheet } from \"../../../../Data/Artifacts/ArtifactSheet\";\r\nimport WeaponSheet from \"../../../../Data/Weapons/WeaponSheet\";\r\nimport { initCharTC } from \"../../../../Database/Data/CharacterTCData\";\r\nimport { DatabaseContext } from \"../../../../Database/Database\";\r\nimport { uiInput as input } from \"../../../../Formula\";\r\nimport { computeUIData, dataObjForWeapon } from \"../../../../Formula/api\";\r\nimport { constant, percent } from \"../../../../Formula/utils\";\r\nimport KeyMap, { cacheValueString } from \"../../../../KeyMap\";\r\nimport useBoolState from \"../../../../ReactHooks/useBoolState\";\r\nimport usePromise from \"../../../../ReactHooks/usePromise\";\r\nimport useTeamData from \"../../../../ReactHooks/useTeamData\";\r\nimport { MainStatKey, SubstatKey } from \"../../../../Types/artifact\";\r\nimport { ICharTC } from \"../../../../Types/character\";\r\nimport { allSlotKeys, ArtifactSetKey, SetNum, SlotKey, SubstatType, substatType } from \"../../../../Types/consts\";\r\nimport { ICachedWeapon } from \"../../../../Types/weapon\";\r\nimport { deepClone, objectMap } from \"../../../../Util/Util\";\r\nimport useCharTC from \"./useCharTC\";\r\ntype ILevels = ICharTC[\"artifact\"][\"levels\"]\r\ntype IMainstatKeys = ICharTC[\"artifact\"][\"mainstatKeys\"]\r\ntype ISet = Partial<Record<ArtifactSetKey, 1 | 2 | 4>>\r\nexport default function TabTheorycraft() {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { data: oldData } = useContext(DataContext)\r\n  const { character, character: { key: characterKey, compareData }, characterSheet, characterDispatch } = useContext(CharacterContext)\r\n  const data = useCharTC(characterKey)\r\n  const setData = useCallback((data: ICharTC) => database.charTCs.set(characterKey, data), [characterKey, database])\r\n\r\n  const setWeapon = useCallback(\r\n    (action: Partial<ICharTC[\"weapon\"]>) => {\r\n      setData({ ...data, weapon: { ...data.weapon, ...action } })\r\n    },\r\n    [setData, data],\r\n  )\r\n  const copyFromEquipped = useCallback(\r\n    () => {\r\n      const eWeapon = database.weapons.get(character.equippedWeapon)!\r\n      const newData = initCharTC(eWeapon.key)\r\n      newData.artifact.substats.type = data.artifact.substats.type\r\n\r\n      newData.weapon.level = eWeapon.level\r\n      newData.weapon.ascension = eWeapon.ascension\r\n      newData.weapon.refinement = eWeapon.refinement\r\n\r\n      const sets = {}\r\n      Object.values(character.equippedArtifacts).forEach(a => {\r\n        const art = database.arts.get(a)\r\n        if (!art) return\r\n        const { slotKey, setKey, substats, mainStatKey, level } = art\r\n        newData.artifact.levels[slotKey] = level\r\n        if (slotKey in newData.artifact.mainstatKeys) newData.artifact.mainstatKeys[slotKey] = mainStatKey\r\n        sets[setKey] = (sets[setKey] ?? 0) + 1\r\n        substats.forEach(substat =>\r\n          newData.artifact.substats.stats[substat.key] = (newData.artifact.substats.stats[substat.key] ?? 0) + substat.accurateValue\r\n        )\r\n      })\r\n      newData.artifact.sets = Object.fromEntries(Object.entries(sets).map(([key, value]) => [key,\r\n        value === 3 ? 2 :\r\n          value === 5 ? 4 :\r\n            value === 1 && !(key as string).startsWith(\"PrayersFor\") ? 0 : value\r\n      ]).filter(([key, value]) => value))\r\n\r\n      setData(newData)\r\n    },\r\n    [database, data, character.equippedArtifacts, character.equippedWeapon, setData],\r\n  )\r\n\r\n  const weapon: ICachedWeapon = useMemo(() => {\r\n    return {\r\n      ...data.weapon,\r\n      location: \"\",\r\n      lock: false,\r\n      id: \"\"\r\n    }\r\n  }, [data])\r\n  const setLevels = useCallback((levels: ILevels) => {\r\n    const data_ = deepClone(data)\r\n    data_.artifact.levels = levels\r\n    setData(data_)\r\n  }, [data, setData])\r\n\r\n  const setMainStatKeys = useCallback((mainstatKeys: IMainstatKeys) => {\r\n    const data_ = deepClone(data)\r\n    data_.artifact.mainstatKeys = mainstatKeys\r\n    setData(data_)\r\n  }, [data, setData])\r\n\r\n  const setSubstatsType = useCallback((t: SubstatType) => {\r\n    const data_ = deepClone(data)\r\n    data_.artifact.substats.type = t\r\n    setData(data_)\r\n  }, [data, setData])\r\n\r\n  const setSubstats = useCallback((setSubstats: Record<SubstatKey, number>) => {\r\n    const data_ = deepClone(data)\r\n    data_.artifact.substats.stats = setSubstats\r\n    setData(data_)\r\n  }, [data, setData])\r\n\r\n  const setArtSet = useCallback((artSet: ISet) => {\r\n    const data_ = deepClone(data)\r\n    data_.artifact.sets = artSet\r\n    setData(data_)\r\n  }, [data, setData])\r\n\r\n  const overriderArtData = useMemo(() => {\r\n    const stats = { ...data.artifact.substats.stats }\r\n    allSlotKeys.forEach(slotKey => {\r\n      const mainStatKey = slotKey === \"flower\" ? \"hp\" : slotKey === \"plume\" ? \"atk\" : data.artifact.mainstatKeys[slotKey]\r\n      stats[mainStatKey] = (stats[mainStatKey] ?? 0) + Artifact.mainStatValue(mainStatKey, 5, data.artifact.levels[slotKey])\r\n    })\r\n    return {\r\n      art: objectMap(stats, (v, k) => k.endsWith(\"_\") ? percent(v / 100) : constant(v)),\r\n      artSet: objectMap(data.artifact.sets, v => constant(v)),\r\n    }\r\n  }, [data])\r\n\r\n  const overrideWeapon: ICachedWeapon = useMemo(() => ({\r\n    id: \"\",\r\n    location: \"\",\r\n    key: data.weapon.key,\r\n    level: data.weapon.level,\r\n    ascension: data.weapon.ascension,\r\n    refinement: data.weapon.refinement,\r\n    lock: false\r\n  }), [data])\r\n  const teamData = useTeamData(characterKey, 0, overriderArtData, overrideWeapon)\r\n\r\n  const { target: charUIData } = teamData?.[characterKey] ?? {}\r\n\r\n  const dataContextValue: dataContextObj | undefined = useMemo(() => {\r\n    if (!teamData || !charUIData) return undefined\r\n    return {\r\n      data: charUIData,\r\n      teamData,\r\n      oldData: compareData ? oldData : undefined,\r\n    }\r\n  }, [charUIData, teamData, compareData, oldData])\r\n\r\n  return <Stack spacing={1}>\r\n    {dataContextValue ? <DataContext.Provider value={dataContextValue}>\r\n      <Box>\r\n        <CardLight>\r\n          <CardContent sx={{ display: \"flex\", gap: 1 }}>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n              <Button color=\"info\" onClick={copyFromEquipped}>Copy from equipped</Button>\r\n            </Box>\r\n            <SolidToggleButtonGroup exclusive value={compareData} onChange={(e, v) => characterDispatch({ compareData: v })} size=\"small\">\r\n              <ToggleButton value={false} disabled={!compareData}>Show TC stats</ToggleButton>\r\n              <ToggleButton value={true} disabled={compareData}>Compare vs. equipped</ToggleButton>\r\n            </SolidToggleButtonGroup>\r\n          </CardContent>\r\n        </CardLight>\r\n      </Box>\r\n      <Box>\r\n        <Grid container spacing={1} sx={{ justifyContent: \"center\" }} columns={4}>\r\n          <Grid item sx={{ flexGrow: 1 }}  >\r\n            <WeaponEditorCard weapon={weapon} setWeapon={setWeapon} weaponTypeKey={characterSheet.weaponTypeKey} />\r\n          </Grid>\r\n          <Grid item sx={{ flexGrow: 10 }}  >\r\n            <ArtifactMainLevelCard levels={data.artifact.levels} setLevels={setLevels} mainStatKeys={data.artifact.mainstatKeys} setMainStatKeys={setMainStatKeys} artSet={data.artifact.sets} setArtSet={setArtSet} />\r\n          </Grid>\r\n          <Grid item sx={{ flexGrow: 10 }}  >\r\n            <ArtifactSubCard substats={data.artifact.substats.stats} setSubstats={setSubstats} substatsType={data.artifact.substats.type} setSubstatsType={setSubstatsType} />\r\n          </Grid>\r\n        </Grid >\r\n      </Box>\r\n      <CardLight sx={{ flexGrow: 1, p: 1 }}>\r\n        <StatDisplayComponent />\r\n      </CardLight>\r\n    </DataContext.Provider> : <Skeleton variant='rectangular' width='100%' height={1000} />}\r\n  </Stack>\r\n}\r\n\r\nfunction WeaponEditorCard({ weapon, setWeapon, weaponTypeKey }: { weapon: ICachedWeapon, weaponTypeKey: WeaponTypeKey, setWeapon: (action: Partial<ICharTC[\"weapon\"]>) => void }) {\r\n  const { key, level = 0, refinement = 1, ascension = 0 } = weapon\r\n  const weaponSheet = usePromise(() => WeaponSheet.get(key), [key])\r\n  const [show, onShow, onHide] = useBoolState()\r\n  const { data } = useContext(DataContext)\r\n  const weaponUIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  return <CardLight sx={{ p: 1, height: \"100%\" }} >\r\n    <WeaponSelectionModal ascension={ascension} show={show} onHide={onHide} onSelect={k => setWeapon({ key: k })} weaponTypeFilter={weaponTypeKey} />\r\n    <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n      <Box display=\"flex\" gap={1}>\r\n        {weaponSheet && <Box\r\n          className={`grad-${weaponSheet.rarity}star`}\r\n          component=\"img\"\r\n          src={weaponSheet.getImg(weapon.ascension)}\r\n          sx={{ flexshrink: 1, flexBasis: 0, maxWidth: \"30%\", borderRadius: 1 }}\r\n        />}\r\n        <Stack spacing={1} flexGrow={1}>\r\n          <Button fullWidth color=\"info\" sx={{ flexGrow: 1 }} onClick={onShow}>{weaponSheet?.name}</Button>\r\n          {weaponSheet?.hasRefinement && <RefinementDropdown refinement={refinement} setRefinement={r => setWeapon({ refinement: r })} />}\r\n        </Stack>\r\n      </Box>\r\n      {weaponSheet && <LevelSelect level={level} ascension={ascension} setBoth={setWeapon} useLow={!weaponSheet.hasRefinement} />}\r\n      <CardDark >\r\n        <CardHeader title={\"Main Stats\"} titleTypographyProps={{ variant: \"subtitle2\" }} />\r\n        <Divider />\r\n        {weaponUIData && <FieldDisplayList>\r\n          {[input.weapon.main, input.weapon.sub, input.weapon.sub2].map((node, i) => {\r\n            const n = weaponUIData.get(node)\r\n            if (n.isEmpty || !n.value) return null\r\n            return <NodeFieldDisplay key={n.info.key} node={n} component={ListItem} />\r\n          })}\r\n        </FieldDisplayList>}\r\n      </CardDark>\r\n      {data && weaponSheet?.document && <DocumentDisplay sections={weaponSheet.document} />}\r\n    </Box>\r\n  </CardLight >\r\n}\r\n\r\nfunction ArtifactMainLevelCard({ levels, setLevels, mainStatKeys, setMainStatKeys, artSet, setArtSet }:\r\n  { levels: ILevels, setLevels: (levels: ILevels) => void, mainStatKeys: IMainstatKeys, setMainStatKeys: (mainStatKeys: IMainstatKeys) => void, artSet: ISet, setArtSet: (a: ISet) => void }) {\r\n  const setLevel = useCallback((slotKey: SlotKey) => (level: number) => {\r\n    setLevels({ ...levels, [slotKey]: level })\r\n  }, [levels, setLevels])\r\n\r\n  const setMainStatKey = useCallback((slotKey: SlotKey) => (msk: MainStatKey) => {\r\n    setMainStatKeys({ ...mainStatKeys, [slotKey]: msk })\r\n  }, [mainStatKeys, setMainStatKeys])\r\n  return <Stack spacing={1} sx={{ height: \"100%\" }}>\r\n    <CardLight sx={{ p: 1 }}>\r\n      <Stack spacing={1}>\r\n        {allSlotKeys.map(s => <ArtifactMainLevelSlot key={s} slotKey={s} level={levels[s]} mainStatKey={s === \"flower\" ? \"hp\" : s === \"plume\" ? \"atk\" : mainStatKeys[s]} setMainStatKey={setMainStatKey(s)} setLevel={setLevel(s)} />)}\r\n      </Stack>\r\n    </CardLight>\r\n    <ArtifactSetsEditor artSet={artSet} setArtSet={setArtSet} />\r\n  </Stack>\r\n}\r\nfunction ArtifactMainLevelSlot({ slotKey, level, setLevel, mainStatKey, setMainStatKey }: { slotKey: SlotKey, level: number, setLevel: (l: number) => void, mainStatKey: MainStatKey, setMainStatKey: (msk: MainStatKey) => void }) {\r\n  const keys = Artifact.slotMainStats(slotKey)\r\n  return <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\r\n    <FontAwesomeSvgIcon icon={slotIconSVG[slotKey]} />\r\n    <CardDark sx={{ height: \"100%\", minWidth: \"5em\", flexGrow: 1 }}>\r\n      {keys.length === 1 ?\r\n        <Box p={1} justifyContent=\"center\" alignItems=\"center\" width=\"100%\" display=\"flex\" gap={1}>{StatIcon[keys[0]]}{KeyMap.getStr(keys[0])}</Box> :\r\n        <DropdownButton fullWidth title={<StatWithUnit statKey={mainStatKey} />} color={KeyMap.getVariant(mainStatKey) ?? \"success\"}>\r\n          {keys.map(msk =>\r\n            <MenuItem key={msk} disabled={mainStatKey === msk} onClick={() => setMainStatKey(msk)}>\r\n              <StatColoredWithUnit statKey={msk} />\r\n            </MenuItem>)}\r\n        </DropdownButton>}\r\n    </CardDark>\r\n    <CustomNumberInput startAdornment=\"+\" value={level} color={Artifact.levelVariant(level)} onChange={l => l !== undefined && setLevel(l)} sx={{ borderRadius: 1, pl: 1, my: 0, height: \"100%\" }} inputProps={{ sx: { pl: 0.5, width: \"2em\" }, max: 20, min: 0 }} />\r\n    <CardDark sx={{ height: \"100%\", minWidth: \"4em\" }}>\r\n      <Box p={1} textAlign=\"center\">{`${cacheValueString(Artifact.mainStatValue(mainStatKey, 5, level), KeyMap.unit(mainStatKey))}${KeyMap.unit(mainStatKey)}`}</Box>\r\n    </CardDark>\r\n  </Box>\r\n}\r\n\r\nfunction ArtifactSetsEditor({ artSet, setArtSet }: { artSet: ISet, setArtSet(artSet: ISet) }) {\r\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\r\n  const setSet = useCallback((setKey: ArtifactSetKey | \"\") => {\r\n    if (!setKey || !artifactSheets) return\r\n    setArtSet({ ...artSet, [setKey]: parseInt(Object.keys(artifactSheets[setKey].setEffects)[0]) })\r\n  }, [artSet, setArtSet, artifactSheets])\r\n\r\n  const setValue = useCallback((setKey: ArtifactSetKey) => (value: 1 | 2 | 4) => setArtSet({ ...artSet, [setKey]: value }), [artSet, setArtSet])\r\n  const deleteValue = useCallback((setKey: ArtifactSetKey) => () => {\r\n    const { [setKey]: _, ...rest } = artSet\r\n    setArtSet({ ...rest })\r\n  }, [artSet, setArtSet])\r\n\r\n  const remaining = 5 - Object.values(artSet).reduce((a, b) => a + b, 0)\r\n\r\n  return <Stack spacing={1} sx={{ flexGrow: 1 }}>\r\n    {Object.entries(artSet).map(([setKey, value]) => <ArtifactSetEditor key={setKey} setKey={setKey} value={value} setValue={setValue(setKey)} deleteValue={deleteValue(setKey)} remaining={remaining} />)}\r\n    <CardLight sx={{ flexGrow: 1 }}>\r\n      <ArtifactSetSingleAutocomplete\r\n        showDefault\r\n        disableClearable\r\n        size=\"small\"\r\n        artSetKey={\"\"}\r\n        setArtSetKey={setSet}\r\n        sx={(theme) => ({\r\n          flexGrow: 1,\r\n          \".MuiFilledInput-root\": {\r\n            borderBottomRightRadius: theme.shape.borderRadius,\r\n            borderBottomLeftRadius: theme.shape.borderRadius\r\n          }\r\n        })}\r\n        defaultText={\"New Artifact Set\"}\r\n        disable={(setKey) => Object.keys(artSet).includes(setKey) || !artifactSheets?.[setKey] || Object.keys(artifactSheets[setKey].setEffects).every(n => parseInt(n) > remaining)}\r\n      />\r\n    </CardLight>\r\n\r\n  </Stack>\r\n}\r\nfunction ArtifactSetEditor({ setKey, value, setValue, deleteValue, remaining }: { setKey: ArtifactSetKey, value: 1 | 2 | 4, setValue: (v: 1 | 2 | 4) => void, deleteValue: () => void, remaining: number }) {\r\n  const artifactSheet = usePromise(() => ArtifactSheet.get(setKey), [])\r\n\r\n  /* Assumes that all conditionals are from 4-Set. needs to change if there are 2-Set conditionals */\r\n  const set4CondNums = useMemo(() => {\r\n    if (value < 4 || !artifactSheet) return []\r\n    return Object.keys(artifactSheet.setEffects).filter(setNumKey => artifactSheet.setEffects[setNumKey]?.document.some(doc => \"states\" in doc))\r\n  }, [artifactSheet, value])\r\n\r\n  if (!artifactSheet) return null\r\n  return <CardLight>\r\n    <Box display=\"flex\">\r\n      <ArtifactSetTooltip artifactSheet={artifactSheet} numInSet={value}>\r\n        <Box flexGrow={1} p={1} display=\"flex\" gap={1} alignItems=\"center\">\r\n          <ImgIcon size={2} sx={{ m: -1 }} src={artifactSheet.defIconSrc} />\r\n          <Box >{artifactSheet.setName}</Box>\r\n          <Info />\r\n        </Box>\r\n      </ArtifactSetTooltip>\r\n      <ButtonGroup>\r\n        <DropdownButton size=\"small\" title={<Box whiteSpace=\"nowrap\">{value}-set</Box>}>\r\n          {Object.keys(artifactSheet.setEffects).map(setKey => parseInt(setKey)).map(setKey =>\r\n            <MenuItem key={setKey} disabled={value === setKey || setKey > (remaining + value)} onClick={() => setValue(setKey as 1 | 2 | 4)}>{setKey}-set</MenuItem>\r\n          )}\r\n        </DropdownButton>\r\n        <Button color=\"error\" size=\"small\" onClick={deleteValue}>\r\n          <DeleteForever />\r\n        </Button>\r\n      </ButtonGroup>\r\n    </Box>\r\n    <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\r\n      {set4CondNums.map(setNumKey =>\r\n        <SetEffectDisplay key={setNumKey} setKey={setKey} setNumKey={parseInt(setNumKey) as SetNum} hideHeader conditionalsOnly />\r\n      )}\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\nfunction ArtifactSubCard({ substats, setSubstats, substatsType, setSubstatsType }: { substats: Record<SubstatKey, number>, setSubstats: (substats: Record<SubstatKey, number>) => void, substatsType: SubstatType, setSubstatsType: (t: SubstatType) => void }) {\r\n  const setValue = useCallback((key: SubstatKey) => (v: number) => setSubstats({ ...substats, [key]: v }), [substats, setSubstats])\r\n  const { t } = useTranslation(\"page_character\")\r\n  return <CardLight sx={{ p: 1, height: \"100%\" }}>\r\n    <CardDark sx={{ mb: 1 }}>\r\n      <DropdownButton fullWidth title={t(`tabTheorycraft.substatType.${substatsType}`)}>\r\n        {substatType.map(st => <MenuItem key={st} disabled={substatsType === st} onClick={() => setSubstatsType(st)}>{t(`tabTheorycraft.substatType.${st}`)}</MenuItem>)}\r\n      </DropdownButton>\r\n    </CardDark>\r\n    <Stack spacing={1}>\r\n      {Object.entries(substats).map(([k, v]) => <ArtifactSubstatEditor key={k} statKey={k} value={v} setValue={setValue(k)} substatsType={substatsType} />)}\r\n    </Stack>\r\n  </CardLight>\r\n}\r\nfunction ArtifactSubstatEditor({ statKey, value, setValue, substatsType }: { statKey: SubstatKey, value: number, setValue: (v: number) => void, substatsType: SubstatType }) {\r\n  const unit = KeyMap.unit(statKey)\r\n  const substatValue = Artifact.substatValue(statKey, 5, substatsType)\r\n  const rv = value / Artifact.substatValue(statKey) * 100\r\n  return <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\r\n    <CardDark sx={{ p: 0.5, minWidth: \"11em\", flexGrow: 1, display: \"flex\", gap: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n      {StatIcon[statKey]}{KeyMap.getStr(statKey)}{KeyMap.unit(statKey)}\r\n    </CardDark>\r\n    <CustomNumberInput\r\n      float={KeyMap.unit(statKey) === \"%\"}\r\n      endAdornment={KeyMap.unit(statKey) || <Box width=\"1em\" component=\"span\" />}\r\n      value={parseFloat(value.toFixed(2))}\r\n      onChange={v => v !== undefined && setValue(v)}\r\n      sx={{ borderRadius: 1, px: 1, height: \"100%\", width: \"6em\" }}\r\n      inputProps={{ sx: { textAlign: \"right\" }, min: 0 }} />\r\n    <CustomNumberInput\r\n      float\r\n      startAdornment={<Box sx={{ whiteSpace: \"nowrap\", width: \"7em\", display: \"flex\", justifyContent: \"space-between\" }}><span>{cacheValueString(substatValue, unit)}{unit}</span><span>x</span></Box>}\r\n      value={parseFloat((value / substatValue).toFixed(2))}\r\n      onChange={v => v !== undefined && setValue(v * substatValue)}\r\n      sx={{ borderRadius: 1, px: 1, my: 0, height: \"100%\", width: \"7em\" }}\r\n      inputProps={{ sx: { textAlign: \"right\", pr: 0.5, }, min: 0 }} />\r\n    <CardDark sx={{ textAlign: \"center\", p: 0.5, minWidth: \"8em\" }}>\r\n      RV: <strong>{rv.toFixed(1)}%</strong>\r\n    </CardDark>\r\n  </Box>\r\n\r\n}\r\n","import { useContext, useEffect, useState } from \"react\"\r\nimport { DatabaseContext } from \"../../../../Database/Database\"\r\nimport { CharacterKey } from \"../../../../Types/consts\"\r\n\r\nexport default function useCharTC(characterKey: CharacterKey) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [charTC, setCharTC] = useState(database.charTCs.get(characterKey))\r\n  useEffect(() => setCharTC(database.charTCs.get(characterKey)), [database, characterKey])\r\n  useEffect(() =>\r\n    characterKey ? database.charTCs.follow(characterKey, (cTC) => cTC && setCharTC(cTC)) : undefined,\r\n    [characterKey, setCharTC, database])\r\n  return charTC\r\n}\r\n","import { PersonAdd } from \"@mui/icons-material\";\r\nimport { CardContent, CardHeader, Divider, Grid, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { useContext, useMemo } from 'react';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CardLight from \"../../../Components/Card/CardLight\";\r\nimport CharacterAutocomplete from \"../../../Components/Character/CharacterAutocomplete\";\r\nimport CharacterCard from \"../../../Components/Character/CharacterCard\";\r\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\r\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\r\nimport InfoTooltip from \"../../../Components/InfoTooltip\";\r\nimport { CharacterContext, CharacterContextObj } from \"../../../Context/CharacterContext\";\r\nimport { DataContext, dataContextObj } from \"../../../Context/DataContext\";\r\nimport { ArtifactSheet } from \"../../../Data/Artifacts/ArtifactSheet\";\r\nimport { resonanceSheets } from \"../../../Data/Resonance\";\r\nimport { uiInput as input } from \"../../../Formula\";\r\nimport { NodeDisplay } from \"../../../Formula/uiData\";\r\nimport useCharSelectionCallback from \"../../../ReactHooks/useCharSelectionCallback\";\r\nimport usePromise from \"../../../ReactHooks/usePromise\";\r\nimport { ElementKey } from \"../../../Types/consts\";\r\nimport { objPathValue, range } from \"../../../Util/Util\";\r\n\r\nexport default function TabTeambuffs() {\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1} alignItems=\"stretch\">\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} md={6} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n        <TeamBuffDisplay />\r\n        <ResonanceDisplay />\r\n      </Grid>\r\n      {range(0, 2).map(i => <Grid item xs={12} md={6} lg={3} key={i}>\r\n        <TeammateDisplay index={i} />\r\n      </Grid>)}\r\n    </Grid>\r\n  </Box>\r\n}\r\nexport function TeamBuffDisplay() {\r\n  const { data, oldData } = useContext(DataContext)\r\n  const teamBuffs = data.getTeamBuff()\r\n  const nodes: Array<[string[], NodeDisplay<number>]> = []\r\n  Object.entries(teamBuffs.total ?? {}).forEach(([key, node]) =>\r\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"total\", key], node]))\r\n  Object.entries(teamBuffs.premod ?? {}).forEach(([key, node]) =>\r\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"premod\", key], node]))\r\n  Object.entries(teamBuffs.enemy ?? {}).forEach(([key, node]) =>\r\n    !node.isEmpty && typeof node.value === \"number\" && node.value !== 0 && nodes.push([[\"enemy\", key], node as NodeDisplay<number>]))\r\n  if (!nodes.length) return null\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Typography>Team Buffs</Typography>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent>\r\n      <Grid container>\r\n        {nodes.map(([path, n], i) => n && <Grid item xs={12} key={(n.info.key ?? \"\") + i} >\r\n          <NodeFieldDisplay node={n} oldValue={objPathValue(oldData?.getTeamBuff(), path)?.value} />\r\n        </Grid>)}\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\nfunction ResonanceDisplay() {\r\n  const { data } = useContext(DataContext)\r\n  return <>\r\n    {resonanceSheets.map((res, i) => {\r\n      const icon = <InfoTooltip title={<Typography>{res.desc}</Typography>} />\r\n      const title = <span>{res.name} {icon}</span>\r\n      return <CardLight key={i} sx={{ opacity: res.canShow(data) ? 1 : 0.5, }}>\r\n        <CardHeader title={title} action={res.icon} titleTypographyProps={{ variant: \"subtitle2\" }} />\r\n        {res.canShow(data) && <Divider />}\r\n        {res.canShow(data) && <CardContent>\r\n          <DocumentDisplay sections={res.sections} teamBuffOnly hideDesc />\r\n        </CardContent>}\r\n      </CardLight>\r\n    })}\r\n  </>\r\n}\r\nfunction TeammateDisplay({ index }: { index: number }) {\r\n  const { teamData } = useContext(DataContext)\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character: active, character: { key: activeCharacterKey }, characterDispatch } = useContext(CharacterContext)\r\n  const teamMateKey = active.team[index]\r\n  const onClickHandler = useCharSelectionCallback()\r\n\r\n  const dataBundle = teamData[teamMateKey]\r\n  const teammateCharacterContext: CharacterContextObj | undefined = useMemo(() => dataBundle && {\r\n    character: { ...dataBundle.character, conditional: active.teamConditional[teamMateKey] ?? {} },\r\n    characterSheet: dataBundle.characterSheet,\r\n    characterDispatch: (state) => {\r\n      if (!teamMateKey) return\r\n      if (!(\"conditional\" in state)) return\r\n      const { conditional } = state\r\n      characterDispatch({ type: \"teamConditional\", teamMateKey: teamMateKey, conditional })\r\n    }\r\n  }, [active, teamMateKey, dataBundle, characterDispatch])\r\n  const teamMateDataContext: dataContextObj | undefined = useMemo(() => dataBundle && {\r\n    data: dataBundle.target,\r\n    teamData: teamData,\r\n  }, [dataBundle, teamData])\r\n  return <CardLight>\r\n    <CharacterAutocomplete fullWidth value={teamMateKey}\r\n      onChange={charKey => characterDispatch({ type: \"team\", index, charKey })}\r\n      disable={ck => ck === activeCharacterKey || (ck !== \"\" && active.team.includes(ck))}\r\n      labelText={t(\"teammate\", { count: index + 1 })}\r\n      defaultText={t(\"none\")}\r\n      defaultIcon={<PersonAdd />}\r\n      showDefault\r\n    />\r\n    {teammateCharacterContext && <CharacterContext.Provider value={teammateCharacterContext}>\r\n      {teamMateDataContext && <DataContext.Provider value={teamMateDataContext}>\r\n        <CharacterCard characterKey={teamMateKey}\r\n          onClickHeader={onClickHandler}\r\n          // Need to wrap these elements with the providers for them to use the correct functions.\r\n          artifactChildren={<CharacterContext.Provider value={teammateCharacterContext}>\r\n            <DataContext.Provider value={teamMateDataContext}>\r\n              <CharArtifactCondDisplay />\r\n            </DataContext.Provider>\r\n          </CharacterContext.Provider>}\r\n          weaponChildren={<CharacterContext.Provider value={teammateCharacterContext}>\r\n            <DataContext.Provider value={teamMateDataContext}>\r\n              <CharWeaponCondDisplay />\r\n            </DataContext.Provider>\r\n          </CharacterContext.Provider>}\r\n          characterChildren={<CharacterContext.Provider value={teammateCharacterContext}>\r\n            <DataContext.Provider value={teamMateDataContext}>\r\n              <CharTalentCondDisplay />\r\n            </DataContext.Provider>\r\n          </CharacterContext.Provider>}\r\n          isTeammateCard\r\n        />\r\n      </DataContext.Provider>}\r\n    </CharacterContext.Provider>}\r\n  </CardLight>\r\n}\r\nfunction CharArtifactCondDisplay() {\r\n  const { data, } = useContext(DataContext)\r\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\r\n  const sections = useMemo(() => artifactSheets &&\r\n    Object.entries(ArtifactSheet.setEffects(artifactSheets, data))\r\n      .flatMap(([setKey, setNums]) =>\r\n        setNums.flatMap(sn => artifactSheets[setKey]!.setEffectDocument(sn)!))\r\n    , [artifactSheets, data])\r\n  if (!sections) return null\r\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\r\n}\r\nfunction CharWeaponCondDisplay() {\r\n  const { character: { key: charKey } } = useContext(CharacterContext)\r\n  const { teamData } = useContext(DataContext)\r\n  const weaponSheet = teamData[charKey]!.weaponSheet\r\n  if (!weaponSheet.document) return null\r\n  return <DocumentDisplay sections={weaponSheet.document} teamBuffOnly={true} />\r\n}\r\nfunction CharTalentCondDisplay() {\r\n  const { character: { key: charKey } } = useContext(CharacterContext)\r\n  const { data, teamData } = useContext(DataContext)\r\n  const characterSheet = teamData[charKey]!.characterSheet\r\n  const talent = characterSheet.getTalent(data.get(input.charEle).value as ElementKey)!\r\n  const sections = Object.values(talent.sheets).flatMap(sts => sts.sections)\r\n  if (!sections) return null\r\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\r\n}\r\n","import { MenuItem } from '@mui/material';\r\nimport { useContext } from 'react';\r\nimport ColorText from '../../Components/ColoredText';\r\nimport DropdownButton from '../../Components/DropdownMenu/DropdownButton';\r\nimport { CharacterContext } from '../../Context/CharacterContext';\r\nimport { sgt } from '../../Data/SheetUtil';\r\n\r\nexport default function TravelerElementSelect() {\r\n  const { character, characterSheet, characterDispatch } = useContext(CharacterContext)\r\n  const { elementKey = \"anemo\", } = character\r\n\r\n  if (!(\"talents\" in characterSheet.sheet)) return null\r\n\r\n  return <DropdownButton color={elementKey} title={<strong>{sgt(`element.${elementKey}`)}</strong>}>\r\n    {Object.keys(characterSheet.sheet.talents).map(eleKey =>\r\n      <MenuItem key={eleKey} selected={elementKey === eleKey} disabled={elementKey === eleKey} onClick={() => characterDispatch({ elementKey: eleKey })}>\r\n        <strong><ColorText color={eleKey}>{sgt(`element.${eleKey}`)}</ColorText></strong></MenuItem>)}\r\n  </DropdownButton>\r\n}\r\n","import { BarChart, Calculate, FactCheck, Groups, Person, Science, TrendingUp } from '@mui/icons-material';\r\nimport { Box, Button, CardContent, Skeleton, Tab, Tabs } from '@mui/material';\r\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link as RouterLink, Navigate, Route, Routes, useMatch, useNavigate, useParams } from 'react-router-dom';\r\nimport CardDark from '../../Components/Card/CardDark';\r\nimport CardLight from '../../Components/Card/CardLight';\r\nimport CloseButton from '../../Components/CloseButton';\r\nimport { HitModeToggle, InfusionAuraDropdown, ReactionToggle } from '../../Components/HitModeEditor';\r\nimport { CharacterContext, CharacterContextObj } from '../../Context/CharacterContext';\r\nimport { DataContext, dataContextObj } from '../../Context/DataContext';\r\nimport { FormulaDataContext, FormulaDataWrapper } from '../../Context/FormulaDataContext';\r\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\r\nimport useBoolState from '../../ReactHooks/useBoolState';\r\nimport useCharacter from '../../ReactHooks/useCharacter';\r\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport useTeamData from '../../ReactHooks/useTeamData';\r\nimport useTitle from '../../ReactHooks/useTitle';\r\nimport { allCharacterKeys, CharacterKey } from '../../Types/consts';\r\nimport { CustomMultiTargetButton } from '../CustomMultiTarget';\r\nimport CharSelectDropdown from './CharSelectDropdown';\r\nimport FormulaModal from './FormulaModal';\r\nimport LevelSelect from '../../Components/LevelSelect';\r\nimport StatModal from './StatModal';\r\nimport TabBuild from './Tabs/TabOptimize';\r\nimport TabOverview from './Tabs/TabOverview';\r\nimport TabTalent from './Tabs/TabTalent';\r\nimport TabTheorycraft from './Tabs/TabTheorycraft';\r\nimport TabTeambuffs from './Tabs/TabTeambuffs';\r\nimport TravelerElementSelect from './TravelerElementSelect';\r\n\r\nexport default function CharacterDisplay() {\r\n  const navigate = useNavigate();\r\n  const onClose = useCallback(() => navigate(\"/characters\"), [navigate])\r\n  let { characterKey } = useParams<{ characterKey?: CharacterKey }>();\r\n  const invalidKey = !allCharacterKeys.includes(characterKey as any ?? \"\")\r\n  if (invalidKey)\r\n    return <Navigate to=\"/characters\" />\r\n\r\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}>\r\n      {characterKey && <CharacterDisplayCard characterKey={characterKey} onClose={onClose} />}\r\n    </Suspense>\r\n  </Box>\r\n}\r\n\r\ntype CharacterDisplayCardProps = {\r\n  characterKey: CharacterKey,\r\n  onClose?: () => void,\r\n}\r\nfunction CharacterDisplayCard({ characterKey, onClose }: CharacterDisplayCardProps) {\r\n  const character = useCharacter(characterKey)\r\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey), [characterKey])\r\n  const teamData = useTeamData(characterKey)\r\n  const { target: charUIData } = teamData?.[characterKey] ?? {}\r\n  let { params: { tab = \"overview\" } } = useMatch({ path: \"/characters/:charKey/:tab\", end: false }) ?? { params: { tab: \"overview\" } }\r\n  const { t } = useTranslation()\r\n  useTitle(`${t(`char_${characterKey}_gen:name`)} - ${t(`page_character:tabs.${tab}`)}`)\r\n  const characterDispatch = useCharacterReducer(character?.key ?? \"\")\r\n\r\n  const dataContextValue: dataContextObj | undefined = useMemo(() => {\r\n    if (!teamData || !charUIData) return undefined\r\n    return {\r\n      data: charUIData,\r\n      teamData,\r\n      oldData: undefined,\r\n    }\r\n  }, [charUIData, teamData])\r\n\r\n  const characterContextValue: CharacterContextObj | undefined = useMemo(() => {\r\n    if (!character || !characterSheet) return undefined\r\n    return {\r\n      character,\r\n      characterSheet,\r\n      characterDispatch\r\n    }\r\n  }, [character, characterSheet, characterDispatch])\r\n  return <CardDark >\r\n    {dataContextValue && characterContextValue ? <CharacterContext.Provider value={characterContextValue}><DataContext.Provider value={dataContextValue}>\r\n      <FormulaDataWrapper><CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n        <Box display=\"flex\" >\r\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" flexGrow={1}>\r\n            <CharSelectDropdown />\r\n            <TravelerElementSelect />\r\n            <DetailStatButton />\r\n            <CustomMultiTargetButton />\r\n            <FormulasButton />\r\n          </Box>\r\n          {!!onClose && <CloseButton onClick={onClose} />}\r\n        </Box>\r\n        <Box display=\"flex\" gap={1} flexWrap=\"wrap\">\r\n          {character && <LevelSelect level={character.level} ascension={character.ascension} setBoth={characterDispatch} />}\r\n          <HitModeToggle size=\"small\" />\r\n          <InfusionAuraDropdown />\r\n          <ReactionToggle size=\"small\" />\r\n        </Box>\r\n        <CardLight>\r\n          <TabNav tab={tab} />\r\n        </CardLight>\r\n        <CharacterPanel />\r\n        <CardLight>\r\n          <TabNav tab={tab} />\r\n        </CardLight>\r\n      </CardContent></FormulaDataWrapper>\r\n    </DataContext.Provider></CharacterContext.Provider> : <Skeleton variant='rectangular' width='100%' height={1000} />\r\n    }\r\n  </CardDark >\r\n}\r\nfunction CharacterPanel() {\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={500} />}>\r\n    <Routes>\r\n      {/* Character Panel */}\r\n      <Route index element={<TabOverview />} />\r\n      <Route path=\"/talent\" element={<TabTalent />} />\r\n      <Route path=\"/teambuffs\" element={<TabTeambuffs />} />\r\n      <Route path=\"/optimize\" element={<TabBuild />} />\r\n      <Route path=\"/theorycraft\" element={<TabTheorycraft />} />\r\n    </Routes>\r\n  </Suspense>\r\n}\r\nfunction TabNav({ tab }: { tab: string }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  return <Tabs\r\n    value={tab}\r\n    variant=\"scrollable\"\r\n    allowScrollButtonsMobile\r\n    sx={{\r\n      \"& .MuiTab-root:hover\": {\r\n        transition: \"background-color 0.25s ease\",\r\n        backgroundColor: \"rgba(255,255,255,0.1)\"\r\n      },\r\n    }}\r\n  >\r\n    <Tab sx={{ minWidth: \"20%\" }} value=\"overview\" label={t(\"tabs.overview\")} icon={<Person />} component={RouterLink} to=\"\" />\r\n    <Tab sx={{ minWidth: \"20%\" }} value=\"talent\" label={t(\"tabs.talent\")} icon={<FactCheck />} component={RouterLink} to=\"talent\" />\r\n    <Tab sx={{ minWidth: \"20%\" }} value=\"teambuffs\" label={t(\"tabs.teambuffs\")} icon={<Groups />} component={RouterLink} to=\"teambuffs\" />\r\n    <Tab sx={{ minWidth: \"20%\" }} value=\"optimize\" label={t(\"tabs.optimize\")} icon={<TrendingUp />} component={RouterLink} to=\"optimize\" />\r\n    <Tab sx={{ minWidth: \"20%\" }} value=\"theorycraft\" label={t(\"tabs.theorycraft\")} icon={<Science />} component={RouterLink} to=\"theorycraft\" />\r\n  </Tabs>\r\n}\r\n\r\n\r\nfunction DetailStatButton() {\r\n  const [open, onOpen, onClose] = useBoolState()\r\n  return <>\r\n    <Button color=\"info\" startIcon={<BarChart />} onClick={onOpen}>Detailed Stats</Button>\r\n    <StatModal open={open} onClose={onClose} />\r\n  </>\r\n}\r\nfunction FormulasButton() {\r\n  const { onModalOpen } = useContext(FormulaDataContext)\r\n  return <>\r\n    <Button color=\"info\" startIcon={<Calculate />} onClick={onModalOpen}>Formulas {\"&\"} Calcs</Button>\r\n    <FormulaModal />\r\n  </>\r\n}\r\n","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { BusinessCenter, Lock, LockOpen } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, IconButton, Skeleton, Tooltip, Typography } from \"@mui/material\"\r\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport CharacterAutocomplete from '../Components/Character/CharacterAutocomplete'\r\nimport LocationName from \"../Components/Character/LocationName\"\r\nimport ConditionalWrapper from \"../Components/ConditionalWrapper\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport { StarsDisplay } from \"../Components/StarDisplay\"\r\nimport StatIcon from \"../Components/StatIcon\"\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\r\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport { uiInput as input } from \"../Formula\"\r\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\r\nimport KeyMap, { valueString } from \"../KeyMap\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport useWeapon from \"../ReactHooks/useWeapon\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\n\r\ntype WeaponCardProps = { weaponId: string, onClick?: (weaponId: string) => void, onEdit?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, canEquip?: boolean, extraButtons?: JSX.Element }\r\nexport default function WeaponCard({ weaponId, onClick, onEdit, onDelete, canEquip = false, extraButtons }: WeaponCardProps) {\r\n  const { t } = useTranslation([\"page_weapon\", \"ui\"]);\r\n  const { database } = useContext(DatabaseContext)\r\n  const databaseWeapon = useWeapon(weaponId)\r\n  const weapon = databaseWeapon\r\n  const weaponSheet = usePromise(() => weapon?.key ? WeaponSheet.get(weapon.key) : undefined, [weapon?.key])\r\n\r\n  const filter = useCallback(\r\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\r\n    [weaponSheet],\r\n  )\r\n\r\n  const wrapperFunc = useCallback(children => <CardActionArea onClick={() => onClick?.(weaponId)} >{children}</CardActionArea>, [onClick, weaponId],)\r\n  const falseWrapperFunc = useCallback(children => <Box >{children}</Box>, [])\r\n\r\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => database.weapons.set(weaponId, { location: charKey }), [database, weaponId],)\r\n\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n  const { level, ascension, refinement, id, location = \"\", lock } = weapon\r\n  const weaponTypeKey = UIData.get(input.weapon.type).value!\r\n  const stats = [input.weapon.main, input.weapon.sub, input.weapon.sub2].map(x => UIData.get(x))\r\n  const img = weaponSheet.getImg(ascension)\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 300 }} />}>\r\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\" }}>\r\n      <ConditionalWrapper condition={!!onClick} wrapper={wrapperFunc} falseWrapper={falseWrapperFunc}>\r\n        <Box className={`grad-${weaponSheet.rarity}star`} sx={{ position: \"relative\", pt: 2, px: 2, }}>\r\n          {!onClick && <IconButton color=\"primary\" onClick={() => database.weapons.set(id, { lock: !lock })} sx={{ position: \"absolute\", right: 0, bottom: 0, zIndex: 2 }}>\r\n            {lock ? <Lock /> : <LockOpen />}\r\n          </IconButton>}\r\n          <Box sx={{ position: \"relative\", zIndex: 1 }}>\r\n            <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\", gap: 1, mb: 1 }}>\r\n              <ImgIcon sx={{ fontSize: \"1.5em\" }} src={Assets.weaponTypes?.[weaponTypeKey]} />\r\n              <Typography noWrap sx={{ textAlign: \"center\", backgroundColor: \"rgba(100,100,100,0.35)\", borderRadius: \"1em\", px: 1 }}><strong>{weaponSheet.name}</strong></Typography>\r\n            </Box>\r\n            <Typography component=\"span\" variant=\"h5\">Lv. {level}</Typography>\r\n            <Typography component=\"span\" variant=\"h5\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n            <Typography variant=\"h6\">Refinement <strong>{refinement}</strong></Typography>\r\n            <Typography><StarsDisplay stars={weaponSheet.rarity} colored /></Typography>\r\n          </Box>\r\n          <Box sx={{ height: \"100%\", position: \"absolute\", right: 0, top: 0 }}>\r\n            <Box\r\n              component=\"img\"\r\n              src={img ?? \"\"}\r\n              width=\"auto\"\r\n              height=\"100%\"\r\n              sx={{ float: \"right\" }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <CardContent>\r\n          {stats.map(node => {\r\n            if (!node.info.key) return null\r\n            const displayVal = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\r\n            return <Box key={node.info.key} sx={{ display: \"flex\" }}>\r\n              <Typography flexGrow={1}>{StatIcon[node.info.key!]} {KeyMap.get(node.info.key)}</Typography>\r\n              <Typography>{displayVal}</Typography>\r\n            </Box>\r\n          })}\r\n        </CardContent>\r\n      </ConditionalWrapper>\r\n      <Box sx={{ p: 1, display: \"flex\", gap: 1, justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n        {canEquip\r\n          ? <CharacterAutocomplete size=\"small\" sx={{ flexGrow: 1 }} disable={(v: any) => v === \"\"}\r\n            showDefault defaultIcon={<BusinessCenter />} defaultText={t(\"ui:inventory\")}\r\n            value={location} onChange={equipOnChar} filter={filter} disableClearable />\r\n          : <LocationName location={location} />}\r\n        <ButtonGroup>\r\n          {!!onEdit && <Tooltip title={<Typography>{t`page_weapon:edit`}</Typography>} placement=\"top\" arrow>\r\n            <Button color=\"info\" onClick={() => onEdit(id)} >\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>\r\n          </Tooltip>}\r\n          {!!onDelete && <Button color=\"error\" onClick={() => onDelete(id)} disabled={!!location || lock} >\r\n            <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n          </Button>}\r\n          {extraButtons}\r\n        </ButtonGroup>\r\n      </Box>\r\n    </CardLight>\r\n  </Suspense>\r\n}\r\n","import { strPadLeft } from \"./Util\"\r\n\r\nexport const SECOND_MS = 1000\r\nexport const MINUTE_MS = 60 * SECOND_MS\r\nexport const HOUR_MS = 60 * MINUTE_MS\r\nexport const DAY_MS = 24 * HOUR_MS\r\n\r\nexport function msToUnits(ms: number) {\r\n  let milliseconds = ms % 1000\r\n  let seconds = Math.floor((ms / 1000) % 60)\r\n  let minutes = Math.floor((ms / (1000 * 60)) % 60)\r\n  let hours = Math.floor((ms / (1000 * 60 * 60)))\r\n  return { hours, minutes, seconds, milliseconds }\r\n}\r\nexport function timeString(ms: number) {\r\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\r\n  let { hours, minutes, seconds } = msToUnits(ms)\r\n  let timeText = \"Minutes\"\r\n  if (hours) timeText = \"Hours\"\r\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)} ${timeText}`;\r\n}\r\nexport function timeStringMs(ms: number) {\r\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\r\n  let { hours, minutes, seconds, milliseconds } = msToUnits(ms)\r\n  let timeText = \"Minutes\"\r\n  if (hours) timeText = \"Hours\"\r\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)}.${strPadLeft(milliseconds, '0', 3)} ${timeText}`;\r\n}\r\n","import { WeaponKey } from \"../Types/consts\";\r\nimport { ICachedWeapon } from \"../Types/weapon\";\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\";\r\nimport { FilterConfigs, SortConfigs } from \"./SortByFilters\";\r\nimport i18n from \"../i18n\";\r\nexport const weaponSortKeys = [\"level\", \"rarity\"]\r\nexport type WeaponSortKey = typeof weaponSortKeys[number]\r\n\r\nexport function weaponSortConfigs(weaponSheets: Record<WeaponKey, WeaponSheet>): SortConfigs<WeaponSortKey, ICachedWeapon> {\r\n  return {\r\n    level: {\r\n      getValue: wp => wp.level * wp.ascension ?? 0,\r\n      tieBreaker: \"rarity\"\r\n    },\r\n    rarity: {\r\n      getValue: wp => weaponSheets?.[wp.key]?.rarity,\r\n      tieBreaker: \"level\"\r\n    }\r\n  }\r\n}\r\nexport function weaponFilterConfigs(weaponSheets: Record<WeaponKey, WeaponSheet>): FilterConfigs<\"rarity\" | \"weaponType\" | \"name\", ICachedWeapon> {\r\n  return {\r\n    rarity: (wp, filter) => filter.includes(weaponSheets?.[wp.key]?.rarity),\r\n    weaponType: (wp, filter) => filter.includes(weaponSheets?.[wp.key]?.weaponType),\r\n    // TODO: Add types to this. filter may or may not be an array?\r\n    name: (wp, filter) => i18n.t(`weaponNames_gen:${wp.key}`).toLowerCase().includes(filter.toLowerCase()),\r\n  }\r\n}\r\n"],"names":["ArtifactMultiAutocomplete","allArtifactKeysWithGrouper","selectedArtifactKeys","setArtifactKeys","getName","getImage","label","props","theme","useTheme","options","useMemo","map","key","grouper","autoHighlight","multiple","disableCloseOnSelect","value","onChange","_","v","getOptionLabel","option","isOptionEqualToValue","renderInput","params","variant","InputLabelProps","style","color","palette","text","primary","length","type","renderOption","image","isSelected","includes","renderTags","selected","getTagProps","index","element","allElementsWithPhy","ele","undefined","icon","ArtifactSetMultiAutocomplete","artSetKeys","setArtSetKeys","artifactSheets","usePromise","ArtifactSheet","t","useTranslation","allArtifactSetsAndRarities","Object","entries","flatMap","rarity","set","sort","sortByRarityAndName","nameRaw","defIcon","groupBy","toString","renderGroup","group","component","Box","sx","top","stars","children","ArtifactMainStatMultiAutocomplete","mainStatKeys","setMainStatKeys","allMainStatKeys","KeyMap","StatIcon","ArtifactSubstatMultiAutocomplete","substatKeys","setSubstatKeys","allSubstatKeys","ArtifactSingleAutocomplete","selectedArtifactKey","setArtifactKey","disable","showDefault","defaultText","defaultIcon","concat","clearIcon","event","newValue","reason","getOptionDisabled","startAdornment","hasValue","ArtifactSetSingleAutocomplete","artSetKey","setArtSetKey","a","b","aName","i18n","bName","ArtifactLevelSlider","levelLow","levelHigh","setLow","setHigh","setBoth","dark","disabled","showLevelText","useState","sliderLow","setsliderLow","sliderHigh","setsliderHigh","setSlider","useCallback","e","TypeError","l","h","useEffect","width","display","alignItems","bgcolor","val","clamp","px","pl","inputProps","textAlign","flexGrow","mx","getAriaLabel","onChangeCommitted","valueLabelDisplay","min","max","step","marks","CardHeaderCustom","avatar","title","action","gap","p","ConditionalSelector","conditional","keys","states","SimpleConditionalSelector","ExclusiveConditionalSelector","MultipleConditionalSelector","useContext","CharacterContext","character","characterDispatch","data","DataContext","setConditional","conditionalValues","deepClone","layeredAssignment","path","deletePropPath","conditionalValue","get","stateKey","badge","getStateBadge","name","condName","getCondName","Button","fullWidth","size","borderRadius","onClick","startIcon","CheckBox","CheckBoxOutlineBlank","state","SqBadge","DropdownButton","MenuItem","Divider","st","ButtonGroup","orientation","disableElevation","isElement","disp","stateName","badgeColor","badgeText","ml","key18","ns","values","Translate","useBadge","ConditionalDisplay","fields","hideHeader","hideDesc","condVal","CardDark","evalIfFunc","HeaderDisplay","header","CardContent","pb","DocumentDisplay","sections","teamBuffOnly","sectionDisplays","s","i","canShow","teamBuff","SectionDisplay","section","filter","flexDirection","FieldsSectionDisplay","TextSectionDisplay","hideDivider","description","displayTitle","InfoTooltip","Typography","LevelSelect","level","ascension","useLow","ascensionMaxLevels","ascensionMaxLevelLow","ascensionMaxLevel","setLevel","maxLevelLow","maxLevel","findIndex","ascenML","setAscension","lowerAscension","contentDark","main","height","whiteSpace","ambiguousLevelLow","ambiguousLevel","milestoneLevelsLow","milestoneLevels","lv","as","RefinementDropdown","refinement","setRefinement","allRefinement","r","DisabledButton","styled","backgroundColor","secondary","TextButton","WeaponSelectionModal","show","onHide","onSelect","weaponTypeFilter","weaponSheets","WeaponSheet","allWeaponTypeKeys","weaponFilter","setWeaponfilter","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","weaponIdList","allWeaponKeys","wKey","weaponType","toLowerCase","open","onClose","py","container","spacing","item","autoFocus","target","InputProps","weaponKey","weaponSheet","lg","md","src","getImg","className","Assets","colored","large","CharSelectDropdown","characterSheet","showModal","setshowModal","setCharacter","useCharSelectionCallback","CharacterSelectionModal","ThumbSide","thumbImgSide","FormulaModal","modalOpen","FormulaDataContext","setFormulaData","onCloseHandler","ModalWrapper","CardHeader","CloseButton","pt","CalculationDisplay","contextData","getDisplaySections","Suspense","fallback","Skeleton","mr","mb","Nodes","FormulaCalc","displayNs","sectionKey","getDisplayHeader","every","isEmpty","CardLight","ImgIcon","m","node","FormulaAccordian","contextNode","expanded","setExpanded","handleChange","isExpanded","scrollRef","useRef","setTimeout","current","scrollIntoView","behavior","Accordion","ref","AccordionSummary","expandIcon","ExpandMore","info","valueString","unit","allAmpReactions","AmpReactionModeText","reaction","trigger","subVariant","AccordionDetails","formulas","subform","expand","other","IconButton","transform","marginLeft","transition","transitions","create","duration","shortest","FlexButtonGroup","StatInput","placeholder","defaultValue","onValueChange","percent","onReset","restProps","CustomNumberInput","flexBasis","float","endAdornment","flexShrink","Replay","EnemyExpandCard","setexpanded","toggle","eLvlNode","input","eDefRed","eDefIgn","Grid","Chip","EnemyResText","Collapse","in","timeout","unmountOnExit","EnemyEditor","content","isFinite","bsProps","xs","enemyOverride","eLvl","enemyLevel","enemyDefIgn_","enemyDefRed_","href","rel","contentLight","statKey","eleKey","elementImmunity","Number","MAX_VALUE","Infinity","cols","StatModal","Stack","BonusStatsEditor","MainStatsCards","allInputPremodKeys","wrapperFunc","bonusStats","setFilter","columns","StatEditorList","statKeys","statFilters","setStatFilters","mainSubKeys","mainReadNodes","k","mainEditKeys","otherStatKeys","allEleDmgKeys","allEleResKeys","miscStatkeys","StatDisplayContent","nodes","extra","oldData","FieldDisplay","rn","ListItem","oldValue","elementKey","specialNode","charEle","isMelee","otherStatReadNodes","eles","allElements","n","some","miscStatReadNodes","StatDisplayCard","justifyContent","Worker_fn","Worker","OptimizationTargetContext","createContext","filterFeasiblePerm","artSetPerm","pruneAll","minimum","arts","numTop","exclusion","forced","should","deps","pruneNodeRange","reaffine","pruneOrder","pruneArtRange","count","x","newArts","newNodes","forceRename","affineNodes","Set","topLevelAffine","visit","isAffine","add","operands","forEach","_op","op","has","dynKeys","forEachNodes","f","operation","accu","Error","nonConst","assertUnreachable","base","nextDynKey","affine","affineMap","Map","customRead","reaffineArt","stat","constantFold","dyn","objectMap","constant","fromEntries","result","mapFormulas","objectKeyMap","allSlotKeys","slot","id","offsets","baseValue","progress","noRainbow","rainbow","noSwitchIn","noSwitchOut","list","newList","art","greaterEqual","greater","baseRange","wrap","artRanges","computeArtRange","otherArtRanges","addArtRange","read","newRange","computeNodeRange","nodeRange","operandRanges","threshold","pass","fail","newOperands","op1","op2","j","ranges","range","reads","_f","computeMinMax","allOperations","reduce","c","sum","NaN","minMaxes","Math","mergeBuilds","builds","maxNum","slice","mergePlot","plots","scale","round","plot","build","filters","_artSets","artSets","available","kind","sets","exclusionToAllowed","populateShapes","indexOfShape","check","shape","check_free","remaining","rainbows","isolated","missing","rejected","required","allowedSet","allowedCounts","counts","push","find","groupped","used","requiredRainbows","usableRainbows","delete","replacing","allowedRainbows","shapes","noFilter","SetEffectDisplay","setKey","setNumKey","conditionalsOnly","sheet","document","setEffectDocument","useBuildSetting","characterKey","database","DatabaseContext","buildSettings","buildSetting","setBuildSetting","follow","buildSettingDispatch","ArtifactSetConfig","dataContext","artSetExclusion","setOpen","onOpen","artSetKeyList","reverse","useForceUpdate","dbDirty","forceUpdate","followAny","artSlotCount","sk","slotKey","allowRainbow2","allowRainbow4","allow2","allow4","exclude2","exclude4","artifactCondCount","allArtifactSets","fakeDataContextObj","UIData","artSet","resetArtConds","tconditional","setAllExclusion","setnum","exclude","artSetExclusion_","faChartLine","faBan","Settings","Trans","i18nKey","AllSetAllowExcludeCard","setNum","numAllow","numExclude","gutterBottom","num","endIcon","ArtifactSetCard","slotCount","setExclusionSet","slots","tot","set4CondNums","setEffects","doc","defIconSrc","paddingTop","opacity","artifactSlotIcon","parseInt","levels","AssumeFullLevelToggle","mainStatAssumptionLevel","setmainStatAssumptionLevel","lvl","BonusStatsCard","bonusStatsKeys","Monospace","fontFamily","BorderLinearProgress","LinearProgress","BuildAlert","status","tested","skipped","failed","total","startTime","finishTime","characterName","hasTotal","generatingBuilds","unskipped","testedString","toLocaleString","unskippedString","skippedText","durationString","timeStringMs","performance","now","subtitle","Alert","severity","toFixed","ArtifactCardNano","artifactId","pSlotKey","showLocation","BGComponent","useArtifact","actionWrapperFunc","CardActionArea","mainStatKey","substats","location","mainStatLevel","mainStatUnit","alpha","ConditionalWrapper","condition","wrapper","position","ArtifactTooltip","slotIcons","maxHeight","maxWidth","pointerEvents","Artifact","LocationIcon","overflow","bottom","zIndex","BootstrapTooltip","placement","disableInteractive","cacheValueString","SubstatDisplay","numRolls","rolls","rollColor","alignContent","CharacterSheet","marginTop","BusinessCenter","StatDisplayComponent","Masonry","sm","xl","Section","optimizationTarget","displayNsReads","nodeKey","emphasize","JSON","stringify","WeaponCardNano","weaponId","weapon","useWeapon","computeUIData","dataObjForWeapon","WeaponNameTooltip","hasRefinement","WeaponStat","BuildDisplayItem","compareBuild","extraButtons","equippedArtifacts","newOld","setNewOld","close","equipBuild","window","confirm","newBuild","chars","equipArtifacts","weapons","statProviderContext","dataContext_","artNanos","oldId","newId","currentlyEquipped","CompareArtifactModal","flexWrap","SetBadges","setToSlots","slotarr1","slotarr","SetBadge","artifactSheet","numInSet","setActive","ArtifactSetTooltip","onEquip","containerProps","minWidth","ArtifactCard","canExclude","canEquip","ChevronRight","fontSize","ChartCard","chartData","plotBase","setPlotBase","showDownload","setshowDownload","showMin","setshowMin","displayData","downloadData","increasingX","y","minimumData","point","last","pop","allData","sKey","Tooltip","Info","Download","DataDisplay","Chart","plotNode","valueNode","TextArea","resize","minHeight","readOnly","selectionStart","selectionEnd","plotBaseUnit","valueUnit","ResponsiveContainer","ComposedChart","CartesianGrid","strokeDasharray","XAxis","dataKey","domain","tick","fill","tickFormatter","YAxis","allowDecimals","ZAxis","Legend","Scatter","line","lineType","isAnimationActive","Line","stroke","connectNulls","strokeWidth","artifactsSlotsToSelectMainStats","MainStatSelectionCard","numSel","mt","cursor","StatFilterCard","defThreads","navigator","hardwareConcurrency","initialTabOptimizeDBState","equipmentPriority","threads","useOptimizeDBState","useDBState","UseEquipped","useEquippedArts","useBoolState","tempEquipmentPriority","setOptimizeDBState","ck","setPrio","setPrioRank","fromIndex","toIndex","arr","splice","removePrio","addPrio","resetPrio","numAbove","indexOf","numUseEquippedChar","numUnlisted","SelectItem","rank","maxRank","setRank","onRemove","NewItem","onAdd","useCharacter","equippedWeapon","KeyboardDoubleArrowUp","KeyboardArrowUp","KeyboardArrowDown","KeyboardDoubleArrowDown","Close","CharacterCardPico","WeaponCardPico","aId","ArtifactCardPico","artifactObj","char","Add","UseExcluded","artsDirty","useExcludedArts","numExcludedArt","dynamic","setReadNodeKeys","dynamicData","compactArtifacts","allowPartial","flower","plume","goblet","circlet","sands","mainStatVal","endsWith","substat","accurateValue","TabBuild","compareData","initGlobalSettings","tcMode","buildStatus","setBuildStatus","setchartData","setArtsDirty","maxWorkers","setMaxWorkers","useCharacterReducer","onClickTeammate","noArtifact","buildDate","maxBuildsToShow","teamData","useTeamData","buildsArts","cancelToken","generateBuilds","fetchContinueWork","fetchPruningWork","fetchRequestWork","requestFilters","command","buildValues","unprunedFilters","next","done","minCount","minFilterCount","cantTakeList","filteredArts","mainStats","split","getTeamData","workerData","uiDataForTeam","assign","mergeData","optimizationTargetNode","objPathValue","targetNode","valueFilter","cancelled","Promise","setPerms","prepruneArts","optimize","plotBaseNode","Array","maxRequestFilterInFlight","Symbol","iterator","idleWorkers","splittingWorkers","workers","finalizedList","worker","setup","maxBuilds","postMessage","countCommand","finalize","finalized","onmessage","terminate","pruned","prepruned","console","log","work","then","buildTimer","setInterval","any","all","results","clearInterval","plotData","artifactIds","Date","Link","RouterLink","to","CharacterCard","getDisplay","TrendingUp","maxBuildsToShowList","OptimizationTargetSelector","setTarget","SolidToggleButtonGroup","exclusive","ToggleButton","Provider","BuildList","DataContextWrapper","join","providerValue","CompareBuildButton","artId","onShow","newArt","artmap","dataProviderValue","arrow","Difference","numToShowMap","ArtifactFilterDisplay","lazy","ArtifactSwapModal","onChangeId","clickHandler","filterOptionReducer","slotKeys","useReducer","initialFilterOption","filterOption","filterOptionDispatch","brPt","useMediaQueryUp","filterConfigs","artifactFilterConfigs","artIdList","filterFunc","filterFunction","disableSlotFilter","rarityHandler","handleMultiSelect","allRarities","WeaponSwapModal","weaponTypeKey","weaponFilterConfigs","sortConfigs","weaponSortConfigs","setRarity","sortFunction","star","TextField","WeaponCard","WeaponEditor","EquipmentSection","setweaponId","showWeapon","hideWeapon","breakpoint","useMediaQuery","breakpoints","up","weaponDoc","initCharMeta","rvFilter","deferredRvFilter","deferredRvSet","footer","LargeWeaponSwapButton","ArtifactSectionCard","onEdit","WeaponSwapButton","effFilter","ArtifactSwapButton","editor","ArtSwapCard","SwapHoriz","hasEquipped","unequipArts","aid","setCharMeta","setRVFilter","deferredrvFilter","artid","currentEfficiency","maxEfficiency","currentEfficiency_","maxEfficiency_","rvField","PercentBadge","valid","rvmField","borderBottomRightRadius","borderBottomLeftRadius","SubstatToggle","selectedKeys","field","TabOverview","onScroll","CharacterProfileCard","EquipmentRow","team","navigate","useNavigate","constellation","tlvl","auto","skill","burst","tBoost","favorite","left","Favorite","FavoriteBorder","right","getLevelString","cardImg","tKey","Badge","badgeContent","overlap","anchorOrigin","vertical","horizontal","padding","lineHeight","getTalentOfKey","img","constellationName","talentSpacing","CharacterTalentPane","grlg","constellationCards","SkillDisplayCard","talentKey","onClickTitle","ReactionDisplay","tText","asc","enabled","talentLimits","talent","actionWrapeprFunc","setTalentLevel","newTalentLevelKey","levelBoost","talentSheet","headerAction","TabTheorycraft","charTCs","charTC","setCharTC","cTC","useCharTC","setData","setWeapon","copyFromEquipped","eWeapon","newData","initCharTC","artifact","mainstatKeys","stats","startsWith","lock","setLevels","data_","setSubstatsType","setSubstats","setArtSet","overriderArtData","overrideWeapon","charUIData","dataContextValue","WeaponEditorCard","ArtifactMainLevelCard","ArtifactSubCard","substatsType","weaponUIData","flexshrink","titleTypographyProps","setMainStatKey","msk","ArtifactMainLevelSlot","ArtifactSetsEditor","FontAwesomeSvgIcon","slotIconSVG","my","setSet","setValue","deleteValue","rest","ArtifactSetEditor","disableClearable","setName","DeleteForever","substatType","ArtifactSubstatEditor","substatValue","rv","parseFloat","pr","TabTeambuffs","TeamBuffDisplay","ResonanceDisplay","TeammateDisplay","teamBuffs","getTeamBuff","premod","enemy","resonanceSheets","res","desc","active","activeCharacterKey","teamMateKey","onClickHandler","dataBundle","teammateCharacterContext","teamConditional","teamMateDataContext","CharacterAutocomplete","charKey","labelText","PersonAdd","onClickHeader","artifactChildren","CharArtifactCondDisplay","weaponChildren","CharWeaponCondDisplay","characterChildren","CharTalentCondDisplay","isTeammateCard","sn","getTalent","sheets","sts","TravelerElementSelect","sgt","talents","CharacterDisplay","useParams","allCharacterKeys","CharacterDisplayCard","useMatch","end","tab","useTitle","characterContextValue","DetailStatButton","CustomMultiTarget","FormulasButton","TabNav","CharacterPanel","Tabs","allowScrollButtonsMobile","Tab","Person","FactCheck","Groups","Science","BarChart","onModalOpen","Calculate","onDelete","cs","falseWrapperFunc","equipOnChar","falseWrapper","noWrap","displayVal","faEdit","faTrashAlt","SECOND_MS","MINUTE_MS","HOUR_MS","DAY_MS","msToUnits","ms","milliseconds","seconds","floor","minutes","hours","timeString","timeText","strPadLeft","weaponSortKeys","getValue","wp","tieBreaker"],"sourceRoot":""}