{"version":3,"sources":["Components/Card/CardLight.tsx","Components/Card/CardDark.tsx","Components/SqBadge.tsx","Components/DropdownMenu/DropdownButton.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","ReactHooks/useForceUpdate.tsx","../node_modules/@mui/icons-material/esm/CheckBox.js","../node_modules/@mui/icons-material/esm/CheckBoxOutlineBlank.js","../node_modules/@mui/material/Alert/alertClasses.js","../node_modules/@mui/material/Alert/Alert.js","../node_modules/@mui/material/internal/svg-icons/SuccessOutlined.js","../node_modules/@mui/material/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@mui/material/internal/svg-icons/ErrorOutline.js","../node_modules/@mui/material/internal/svg-icons/InfoOutlined.js","../node_modules/@mui/material/internal/svg-icons/Close.js","../node_modules/@mui/icons-material/esm/Download.js","Database/exim/good.ts","PageSettings/Components/DownloadCard.tsx","PageSettings/Components/LanguageCard.tsx","PageSettings/Components/TCToggleCard.tsx","../node_modules/@mui/icons-material/esm/Upload.js","Database/exim/mona.ts","PageSettings/Components/UploadCard.tsx","Database/exim/go.ts","PageSettings/SettingsDisplay.tsx"],"names":["CardLight","styled","Card","backgroundColor","theme","palette","contentLight","main","CardDark","contentDark","SqBadge","name","slot","color","display","padding","fontSize","fontWeight","lineHeight","textAlign","whiteSpace","verticalAlign","borderRadius","contrastText","DropdownButton","title","children","id","props","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","useCallback","event","currentTarget","handleClose","fallback","endIcon","width","aria-controls","aria-haspopup","aria-expanded","undefined","onClick","onClose","MenuListProps","height","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","useForceUpdate","stateDirty","update","createSvgIcon","_jsx","d","getAlertUtilityClass","generateUtilityClass","_CloseIcon","alertClasses","generateUtilityClasses","_excluded","AlertRoot","Paper","overridesResolver","styles","ownerState","root","variant","capitalize","severity","getColor","mode","darken","lighten","getBackgroundColor","_extends","typography","body2","light","icon","border","fontWeightMedium","dark","AlertIcon","marginRight","opacity","AlertMessage","message","AlertAction","action","alignItems","marginLeft","defaultIconMapping","success","SuccessOutlinedIcon","warning","ReportProblemOutlinedIcon","ErrorOutlineIcon","InfoOutlinedIcon","Alert","React","inProps","ref","useThemeProps","className","closeText","iconMapping","role","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsxs","elevation","clsx","IconButton","size","CloseIcon","GOSource","importGOOD","data","oldDatabase","version","source","storage","SandboxStorage","result","type","artifacts","counter","total","invalid","new","updated","unchanged","removed","flatMap","a","parsed","parseArtifact","push","hasLocations","some","art","location","idsToRemove","Set","_getArts","map","artifact","findDuplicates","duplicated","upgraded","filter","has","match","delete","length","removeForKeys","k","startsWith","forEach","i","set","weapons","w","parseWeapon","weapon","_getWeapons","findDuplicateWeapons","characters","c","old","_getChar","parseCharacter","newCharKeys","x","oldCharKeys","_getCharKeys","keys","character","get","buildSettings","builds","buildDate","dbVersion","artifactDisplay","characterDisplay","buildsDisplay","setDBVersion","ArtCharDatabase","importGOOD1","exportGOOD","format","currentDBVersion","entries","JSON","parse","copyToClipboard","navigator","clipboard","writeText","stringify","dbStorage","alert","catch","console","DownloadCard","forceUpdate","database","useContext","DatabaseContext","t","useTranslation","numChar","numArt","numWeapon","downloadValid","CardContent","sx","py","Typography","Trans","i18nKey","Divider","Grid","container","mb","spacing","item","xs","md","Button","disabled","JSONstr","filename","contentType","document","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","startIcon","Download","flexGrow","faClipboard","window","confirm","clear","reloadStorage","deleteDatabase","faTrashAlt","LanguageCard","LanguageDropdown","nativeLanguages","i18n","onSetLanguage","lang","changeLanguage","currentLang","languages","fullWidth","language","languageCodeList","MenuItem","selected","TCToggleCard","GlobalSettingsContext","tcMode","globalSettings","globalSettingsDispatch","gutterBottom","CheckBox","CheckBoxOutlineBlank","GetConvertedArtifactsOfVersion","dataObj","property","ArtifactSlotKeyMap","genshinArtArtifact","setName","star","level","position","mainTag","raw","setKey","ArtifactSetKeyMap","rarity","slotKey","mainStatKey","ArtifactMainStatKeyMap","substats","normalTags","ArtifactSubStatKeyMap","endsWith","Math","round","flex","InvisInput","UploadCard","setdata","setfilename","errorMsg","setErrorMsg","useMemo","e","Object","includes","imported","converted","importMona","characterDatabase","artifactDatabase","charKey","char","charCount","chars","artCount","arts","importGO","onUpload","file","files","reader","FileReader","onload","readAsText","htmlFor","accept","onChange","component","Upload","px","faFileCode","faArrowLeft","Box","fontFamily","minHeight","resize","UploadInfo","UploadAction","GOUploadInfo","GOODUploadInfo","reset","GOUploadAction","MergeResult","dataValid","copyFrom","faFileUpload","SettingsDisplay","ReactGA","pageview","my","flexDirection","gap"],"mappings":"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","file":"static/js/21.92b62611.chunk.js","sourcesContent":["import { Card, styled } from \"@mui/material\";\n\nconst CardLight = styled(Card)(({ theme }) => ({\n  backgroundColor: theme.palette.contentLight.main\n}));\n\nexport default CardLight","import { Card, styled } from \"@mui/material\";\n\nconst CardDark = styled(Card)(({ theme }) => ({\n  backgroundColor: theme.palette.contentDark.main\n}));\n\nexport default CardDark","import { styled } from \"@mui/material\";\n\nconst SqBadge = styled(\"span\", {\n  name: 'SqBadge',\n  slot: 'Root',\n})(({ theme, color = \"primary\" }) => ({\n  display: \"inline-block\",\n  padding: \".25em .4em\",\n  fontSize: \"75%\",\n  fontWeight: 700,\n  lineHeight: 1,\n  textAlign: \"center\",\n  whiteSpace: \"nowrap\",\n  verticalAlign: \"baseline\",\n  borderRadius: \".25em\",\n  backgroundColor: theme.palette[color]?.main,\n  color: theme.palette[color]?.contrastText\n}))\nexport default SqBadge","import { KeyboardArrowDown } from \"@mui/icons-material\";\nimport { Button, ButtonProps, Menu, Skeleton } from \"@mui/material\";\nimport { Suspense, useCallback, useState } from \"react\";\n\nexport type DropdownButtonProps = Omit<ButtonProps, \"title\"> & {\n  title: React.ReactNode,\n  id?: string,\n  children: React.ReactNode\n}\nexport default function DropdownButton({ title, children, id = \"dropdownbtn\", ...props }: DropdownButtonProps) {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => setAnchorEl(event.currentTarget),\n    [setAnchorEl],\n  )\n  const handleClose = useCallback(\n    () => setAnchorEl(null),\n    [setAnchorEl],\n  )\n\n  return <Suspense fallback={<Button endIcon={<KeyboardArrowDown />}{...props}><Skeleton width={50} /></Button>} >\n    <Button\n      {...props}\n      id={id}\n      aria-controls=\"basic-menu\"\n      aria-haspopup=\"true\"\n      aria-expanded={open ? 'true' : undefined}\n      onClick={handleClick}\n      endIcon={<KeyboardArrowDown />}\n    >\n      {title}\n    </Button>\n    <Menu\n      id=\"basic-menu\"\n      anchorEl={anchorEl}\n      open={open}\n      onClose={handleClose}\n      MenuListProps={{\n        'aria-labelledby': id,\n      }}\n      onClick={handleClose}\n    >\n      {/* set Skeleton to be really high so the taller dropdowns can still be placed properly... */}\n      <Suspense fallback={<Skeleton width=\"100%\" height=\"1000\" />}>\n        {children}\n      </Suspense>\n    </Menu>\n  </Suspense>\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { useCallback, useState } from \"react\"\n\nexport default function useForceUpdate(): [object, () => void] {\n  const [stateDirty, update] = useState({})\n  const forceUpdateHook = useCallback(() => update({}), [])\n  return [stateDirty, forceUpdateHook]\n}","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAlertUtilityClass(slot) {\n  return generateUtilityClass('MuiAlert', slot);\n}\nconst alertClasses = generateUtilityClasses('MuiAlert', ['root', 'action', 'icon', 'message', 'filled', 'filledSuccess', 'filledInfo', 'filledWarning', 'filledError', 'outlined', 'outlinedSuccess', 'outlinedInfo', 'outlinedWarning', 'outlinedError', 'standard', 'standardSuccess', 'standardInfo', 'standardWarning', 'standardError']);\nexport default alertClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _CloseIcon;\n\nconst _excluded = [\"action\", \"children\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { darken, lighten } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nimport alertClasses, { getAlertUtilityClass } from './alertClasses';\nimport IconButton from '../IconButton';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    severity,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `${variant}${capitalize(color || severity)}`, `${variant}`],\n    icon: ['icon'],\n    message: ['message'],\n    action: ['action']\n  };\n  return composeClasses(slots, getAlertUtilityClass, classes);\n};\n\nconst AlertRoot = styled(Paper, {\n  name: 'MuiAlert',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color || ownerState.severity)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const getColor = theme.palette.mode === 'light' ? darken : lighten;\n  const getBackgroundColor = theme.palette.mode === 'light' ? lighten : darken;\n  const color = ownerState.color || ownerState.severity;\n  return _extends({}, theme.typography.body2, {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    padding: '6px 16px'\n  }, color && ownerState.variant === 'standard' && {\n    color: getColor(theme.palette[color].light, 0.6),\n    backgroundColor: getBackgroundColor(theme.palette[color].light, 0.9),\n    [`& .${alertClasses.icon}`]: {\n      color: theme.palette.mode === 'dark' ? theme.palette[color].main : theme.palette[color].light\n    }\n  }, color && ownerState.variant === 'outlined' && {\n    color: getColor(theme.palette[color].light, 0.6),\n    border: `1px solid ${theme.palette[color].light}`,\n    [`& .${alertClasses.icon}`]: {\n      color: theme.palette.mode === 'dark' ? theme.palette[color].main : theme.palette[color].light\n    }\n  }, color && ownerState.variant === 'filled' && {\n    color: '#fff',\n    fontWeight: theme.typography.fontWeightMedium,\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main\n  });\n});\nconst AlertIcon = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => styles.icon\n})({\n  marginRight: 12,\n  padding: '7px 0',\n  display: 'flex',\n  fontSize: 22,\n  opacity: 0.9\n});\nconst AlertMessage = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0'\n});\nconst AlertAction = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'flex-start',\n  padding: '4px 0 0 16px',\n  marginLeft: 'auto',\n  marginRight: -8\n});\nconst defaultIconMapping = {\n  success: /*#__PURE__*/_jsx(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/_jsx(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/_jsx(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/_jsx(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\nconst Alert = /*#__PURE__*/React.forwardRef(function Alert(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAlert'\n  });\n\n  const {\n    action,\n    children,\n    className,\n    closeText = 'Close',\n    color,\n    icon,\n    iconMapping = defaultIconMapping,\n    onClose,\n    role = 'alert',\n    severity = 'success',\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    severity,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(AlertRoot, _extends({\n    role: role,\n    elevation: 0,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [icon !== false ? /*#__PURE__*/_jsx(AlertIcon, {\n      ownerState: ownerState,\n      className: classes.icon,\n      children: icon || iconMapping[severity] || defaultIconMapping[severity]\n    }) : null, /*#__PURE__*/_jsx(AlertMessage, {\n      ownerState: ownerState,\n      className: classes.message,\n      children: children\n    }), action != null ? /*#__PURE__*/_jsx(AlertAction, {\n      className: classes.action,\n      children: action\n    }) : null, action == null && onClose ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: /*#__PURE__*/_jsx(IconButton, {\n        size: \"small\",\n        \"aria-label\": closeText,\n        title: closeText,\n        color: \"inherit\",\n        onClick: onClose,\n        children: _CloseIcon || (_CloseIcon = /*#__PURE__*/_jsx(CloseIcon, {\n          fontSize: \"small\"\n        }))\n      })\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   * Set to `false` to remove the `icon`.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   * @default 'success'\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default Alert;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n *\n * Alias to `Clear`.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 20h14v-2H5v2zM19 9h-4V3H9v6H5l7 7 7-7z\"\n}), 'Download');","import { IArtifact, ICachedArtifact } from \"../../Types/artifact\";\nimport { ICharacter } from \"../../Types/character_WR\";\nimport { ICachedWeapon, IWeapon } from \"../../Types/weapon\";\nimport { ArtCharDatabase } from \"../Database\";\nimport { DBStorage, SandboxStorage } from \"../DBStorage\";\nimport { currentDBVersion } from \"../migration\";\nimport { setDBVersion } from \"../utils\";\nimport { parseArtifact, parseCharacter, parseWeapon } from \"../validation\";\n\nconst GOSource = \"Genshin Optimizer\" as const\n\nexport function importGOOD(data: IGOOD, oldDatabase: ArtCharDatabase): ImportResult | undefined {\n  switch (data.version) {\n    case 1: return importGOOD1(data, oldDatabase)\n  }\n}\n\nfunction importGOOD1(data: IGOOD, oldDatabase: ArtCharDatabase): ImportResult | undefined {\n  const source = data.source, storage = new SandboxStorage(oldDatabase.storage)\n  const result: ImportResult = { type: \"GOOD\", storage, source }\n\n  // Match artifacts for counter, metadata, and locations\n  if (data.artifacts) {\n    const counter = newCounter()\n    const artifacts = data.artifacts.flatMap(a => {\n      const parsed = parseArtifact(a)\n      if (!parsed) counter.invalid.push(a)\n      return parsed ? [parsed] : []\n    })\n    const hasLocations = artifacts.some(art => art.location)\n    const idsToRemove = new Set(oldDatabase._getArts().map(a => a.id))\n    for (const artifact of artifacts) {\n      let { duplicated, upgraded } = oldDatabase.findDuplicates(artifact)\n\n      // Don't reuse dups/upgrades\n      duplicated = duplicated.filter(a => idsToRemove.has(a.id))\n      upgraded = upgraded.filter(a => idsToRemove.has(a.id))\n\n      // Prefer dups over upgrades\n      const match = (duplicated[0] ?? upgraded[0]) as ICachedArtifact | undefined\n      if (match) {\n        idsToRemove.delete(match.id)\n        for (const key in match) {\n          if (!(key in artifact) && key !== \"location\")\n            artifact[key] = match[key]\n        }\n        if (!hasLocations)\n          artifact.location = match.location\n      }\n\n      if (duplicated.length) counter.unchanged++\n      else if (upgraded.length) counter.updated++\n      else counter.new++\n    }\n\n    counter.total = data.artifacts.length\n    counter.removed = idsToRemove.size\n    result.artifacts = counter\n\n    storage.removeForKeys(k => k.startsWith(\"artifact_\"))\n    artifacts.forEach((a, i) => storage.set(`artifact_${i}`, a))\n  }\n\n  // Match weapons for counter, metadata, and locations\n  if (data.weapons) {\n    const counter = newCounter()\n    const weapons = data.weapons.flatMap(w => {\n      const parsed = parseWeapon(w)\n      if (!parsed) counter.invalid.push(w)\n      return parsed ? [parsed] : []\n    })\n    const hasLocations = weapons.some(weapon => weapon.location)\n    const idsToRemove = new Set(oldDatabase._getWeapons().map(w => w.id))\n    for (const weapon of weapons) {\n      let { duplicated, upgraded } = oldDatabase.findDuplicateWeapons(weapon)\n\n      // Don't reuse dups/upgrades\n      duplicated = duplicated.filter(w => idsToRemove.has(w.id))\n      upgraded = upgraded.filter(w => idsToRemove.has(w.id))\n\n      // Prefer dups over upgrades\n      const match = (duplicated[0] ?? upgraded[0]) as ICachedWeapon | undefined\n      if (match) {\n        idsToRemove.delete(match.id)\n        for (const key in match) {\n          if (!(key in weapon) && key !== \"location\")\n            weapon[key] = match[key]\n        }\n        if (!hasLocations)\n          weapon.location = match.location\n      }\n\n      if (duplicated.length) counter.unchanged++\n      else if (upgraded.length) counter.updated++\n      else counter.new++\n    }\n\n    counter.total = data.weapons!.length\n    counter.removed = idsToRemove.size\n    result.weapons = counter\n\n    storage.removeForKeys(k => k.startsWith(\"weapon_\"))\n    weapons.forEach((w, i) => storage.set(`weapon_${i}`, w))\n  }\n\n  if (data.characters) {\n    const invalid: any[] = []\n    const characters = data.characters.flatMap(c => {\n      const old = oldDatabase._getChar(c.key) ?? {}\n      const parsed = parseCharacter({ ...old, ...c })\n      if (!parsed) invalid.push(c)\n      return parsed ? [parsed] : []\n    })\n    const newCharKeys = new Set(characters.map(x => x.key))\n    const oldCharKeys = new Set(oldDatabase._getCharKeys())\n\n    result.characters = {\n      total: data.characters!.length,\n      new: [...newCharKeys].filter(x => !oldCharKeys.has(x)).length,\n      updated: [...newCharKeys].filter(x => oldCharKeys.has(x)).length,\n      removed: [...oldCharKeys].filter(x => !newCharKeys.has(x)).length,\n      unchanged: 0,\n      invalid\n    }\n\n    storage.removeForKeys(k => k.startsWith(\"char_\"))\n    characters.forEach((c => storage.set(`char_${c.key}`, c)))\n  }\n\n  // We invalidate build results here because we need to do\n  // it regardless of whether the file has character/art data.\n  for (const key of storage.keys) {\n    if (key.startsWith(\"char_\")) {\n      const character = storage.get(key)\n      if (character.buildSettings) {\n        character.buildSettings.builds = []\n        character.buildSettings.buildDate = 0\n        storage.set(key, character)\n      }\n    }\n  }\n\n  if (source === GOSource) {\n    const { dbVersion, artifactDisplay, characterDisplay, buildsDisplay } = data as unknown as IGO\n    if (dbVersion < 8) return // Something doesn't look right here\n    setDBVersion(storage, dbVersion)\n    artifactDisplay && storage.set(\"ArtifactDisplay.state\", artifactDisplay)\n    characterDisplay && storage.set(\"CharacterDisplay.state\", characterDisplay)\n    buildsDisplay && storage.set(\"BuildsDisplay.state\", buildsDisplay)\n  } else {\n    // DO NOT CHANGE THE DB VERSION\n    // Standard GOODv1 matches dbv8.\n    setDBVersion(storage, 8)\n  }\n\n  new ArtCharDatabase(storage) // validate storage entries\n  return result\n}\n\nexport function exportGOOD(storage: DBStorage): IGOOD & IGO {\n  return {\n    format: \"GOOD\",\n    dbVersion: currentDBVersion,\n    source: GOSource,\n    version: 1,\n    characters: storage.entries\n      .filter(([key]) => key.startsWith(\"char_\"))\n      .map(([_, value]) => {\n        // Invalidate build results since we won't use it on imports either\n        const result = JSON.parse(value)\n        if (result.buildSettings) {\n          result.buildSettings.builds = []\n          result.buildSettings.buildDate = 0\n        }\n        return result\n      }),\n    artifacts: storage.entries\n      .filter(([key]) => key.startsWith(\"artifact_\"))\n      .map(([_, value]) => JSON.parse(value)),\n    weapons: storage.entries\n      .filter(([key]) => key.startsWith(\"weapon_\"))\n      .map(([_, value]) => JSON.parse(value)),\n\n    artifactDisplay: storage.get(\"ArtifactDisplay.state\") ?? {},\n    characterDisplay: storage.get(\"CharacterDisplay.state\") ?? {},\n    buildsDisplay: storage.get(\"BuildsDisplay.state\") ?? {},\n  }\n}\n\ntype IGOOD = {\n  format: \"GOOD\"\n  source: string\n  version: 1\n  characters?: ICharacter[]\n  artifacts?: IArtifact[]\n  weapons?: IWeapon[]\n}\ntype IGO = {\n  dbVersion: number\n  source: typeof GOSource\n  artifactDisplay: any\n  characterDisplay: any\n  buildsDisplay: any\n}\n\nexport type ImportResultCounter = {\n  total: number, // total # in file\n  new: number,\n  updated: number,\n  unchanged: number,\n  removed: number,\n  invalid: any[],\n}\nexport type ImportResult = {\n  type: \"GOOD\",\n  storage: DBStorage,\n  source: string,\n  artifacts?: ImportResultCounter,\n  weapons?: ImportResultCounter,\n  characters?: ImportResultCounter,\n}\nfunction newCounter(): ImportResultCounter {\n  return { total: 0, invalid: [], new: 0, updated: 0, unchanged: 0, removed: 0, }\n}\n","import { faClipboard, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Download } from '@mui/icons-material'\nimport { Button, CardContent, Divider, Grid, Typography } from '@mui/material'\nimport { useContext } from \"react\"\nimport { Trans, useTranslation } from \"react-i18next\"\nimport CardLight from '../../Components/Card/CardLight'\nimport { ArtCharDatabase, DatabaseContext } from \"../../Database/Database\"\nimport { dbStorage } from '../../Database/DBStorage'\nimport { exportGOOD } from '../../Database/exim/good'\n\nfunction download(JSONstr: string, filename = \"data.json\") {\n  const contentType = \"application/json;charset=utf-8\"\n  const a = document.createElement('a');\n  a.download = filename\n  a.href = `data:${contentType},${encodeURIComponent(JSONstr)}`\n  a.target = \"_blank\"\n  document.body.appendChild(a)\n  a.click()\n  document.body.removeChild(a)\n}\n\nfunction deleteDatabase(t, database: ArtCharDatabase) {\n  if (!window.confirm(t(\"uploadCard.goUpload.deleteDatabasePrompt\"))) return\n  dbStorage.clear()\n  database.reloadStorage()\n}\nfunction copyToClipboard() {\n  navigator.clipboard.writeText(JSON.stringify(exportGOOD(dbStorage)))\n    .then(() => alert(\"Copied database to clipboard.\"))\n    .catch(console.error)\n}\nexport default function DownloadCard({ forceUpdate }) {\n  const database = useContext(DatabaseContext)\n  const { t } = useTranslation([\"settings\"]);\n  const numChar = database._getCharKeys().length\n  const numArt = database._getArts().length\n  const numWeapon = database._getWeapons().length\n  const downloadValid = Boolean(numChar || numArt)\n  const deleteDB = () => {\n    deleteDatabase(t, database);\n    forceUpdate()\n  }\n  return <CardLight>\n    <CardContent sx={{ py: 1 }}>\n      <Typography variant=\"subtitle1\">\n        <Trans t={t} i18nKey=\"downloadCard.databaseDownload\" />\n      </Typography>\n    </CardContent>\n    <Divider />\n    <CardContent>\n      <Grid container mb={2} spacing={2}>\n        <Grid item xs={6} md={4}><Typography><Trans t={t} i18nKey=\"count.chars\" /> {numChar}</Typography></Grid>\n        <Grid item xs={6} md={4}><Typography><Trans t={t} i18nKey=\"count.arts\" /> {numArt}</Typography></Grid>\n        <Grid item xs={6} md={4}><Typography><Trans t={t} i18nKey=\"count.weapons\" /> {numWeapon}</Typography></Grid>\n      </Grid>\n      <Typography variant=\"caption\"><Trans t={t} i18nKey=\"downloadCard.databaseDisclaimer\" /></Typography>\n    </CardContent>\n    <Divider />\n    <CardContent sx={{ py: 1 }}>\n      <Grid container spacing={2}>\n        <Grid item><Button disabled={!downloadValid} onClick={() => download(JSON.stringify(exportGOOD(dbStorage)))} startIcon={<Download />}><Trans t={t} i18nKey=\"downloadCard.button.download\" /></Button></Grid>\n        <Grid item flexGrow={1} ><Button disabled={!downloadValid} color=\"info\" onClick={copyToClipboard} startIcon={<FontAwesomeIcon icon={faClipboard} />}><Trans t={t} i18nKey=\"downloadCard.button.copy\" /></Button></Grid>\n        <Grid item><Button disabled={!downloadValid} color=\"error\" onClick={deleteDB} startIcon={<FontAwesomeIcon icon={faTrashAlt} />}><Trans t={t} i18nKey=\"downloadCard.button.delete\" /></Button></Grid>\n      </Grid>\n    </CardContent>\n  </CardLight>\n}","import { CardContent, Divider, MenuItem } from '@mui/material'\nimport { Trans, useTranslation } from \"react-i18next\"\nimport CardLight from '../../Components/Card/CardLight'\nimport DropdownButton from '../../Components/DropdownMenu/DropdownButton'\nimport SqBadge from '../../Components/SqBadge'\nimport { languageCodeList } from \"../../i18n\"\nexport default function LanguageCard() {\n  const { t } = useTranslation();\n  return <CardLight>\n    <CardContent sx={{ py: 1 }}>\n      {t(\"settings:languageCard.selectLanguage\")} <SqBadge color=\"warning\">{t(\"ui:underConstruction\")}</SqBadge>\n    </CardContent>\n    <Divider />\n    <CardContent>\n      <LanguageDropdown />\n    </CardContent>\n  </CardLight>\n}\n\nconst nativeLanguages = {\n  \"chs\": \"中文 正体字\",\n  \"cht\": \"中文 繁體字\",\n  \"de\": \"Deutsch\",\n  \"en\": \"English\",\n  \"es\": \"español\",\n  \"fr\": \"français\",\n  \"id\": \"Bahasa Indonesia\",\n  \"ja\": \"日本語\",\n  \"ko\": \"한국어\",\n  \"pt\": \"Português\",\n  \"ru\": \"Русский язык\",\n  \"th\": \"ภาษาไทย\",\n  \"vi\": \"Tiếng Việt\"\n}\nexport function LanguageDropdown() {\n  const { t, i18n } = useTranslation([\"ui\", \"settings\"]);\n  const onSetLanguage = (lang) => () => i18n.changeLanguage(lang);\n  const currentLang = i18n.languages[0];\n  return <DropdownButton fullWidth title={t('settings:languageCard.languageFormat', { language: t(`languages:${currentLang}`) })}>\n    {languageCodeList.map((lang) => <MenuItem key={lang} selected={currentLang === lang} disabled={currentLang === lang} onClick={onSetLanguage(lang)}>\n      <Trans i18nKey={`languages:${lang}`} />\n      {lang !== currentLang ? ` (${nativeLanguages[lang]})` : \"\"}\n    </MenuItem>)}\n  </DropdownButton>\n}","import { CheckBox, CheckBoxOutlineBlank } from \"@mui/icons-material\";\nimport { Button, CardContent, Typography } from \"@mui/material\";\nimport { useContext } from \"react\";\nimport CardLight from \"../../Components/Card/CardLight\";\nimport { GlobalSettingsContext } from \"../../GlobalSettings\";\n\nexport default function TCToggleCard() {\n  const { globalSettings: { tcMode }, globalSettingsDispatch } = useContext(GlobalSettingsContext)\n  return <CardLight>\n    <CardContent>\n      <Typography gutterBottom color=\"warning.main\">Enabling this toggle will show some features that might be too complex for the average user.</Typography>\n      <Button fullWidth\n        onClick={() => globalSettingsDispatch({ tcMode: !tcMode })}\n        color={tcMode ? \"success\" : \"primary\"}\n        startIcon={tcMode ? <CheckBox /> : <CheckBoxOutlineBlank />}>\n        Theorycrafting Mode\n      </Button>\n    </CardContent>\n  </CardLight>\n}","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 20h14v-2H5v2zm0-10h4v6h6v-6h4l-7-7-7 7z\"\n}), 'Upload');","import { ArtCharDatabase } from '../Database';\nimport { IArtifact, MainStatKey, SubstatKey } from '../../Types/artifact';\nimport { parseArtifact } from '../../Database/validation';\nimport { ArtifactSetKey, SlotKey } from \"../../Types/consts\";\nimport { importGOOD, ImportResult } from './good';\n\nconst DefaultVersion = \"1\";\nconst GetConvertedArtifactsOfVersion: Dict<string, (data: any) => { artifacts: IArtifact[], invalid: any[] }> = {\n  \"1\": importMona1\n};\n\nexport function importMona(dataObj: any, oldDatabase: ArtCharDatabase): ImportResult | undefined {\n  const version = dataObj.version ?? DefaultVersion\n  const converted = GetConvertedArtifactsOfVersion[version]?.(dataObj)\n\n  if (!converted)\n    return // TODO: Maybe add failure reason, or throws here\n\n  const { artifacts, invalid } = converted\n\n  const result = importGOOD({\n    format: \"GOOD\",\n    source: \"mona-uranai\",\n    version: 1,\n    artifacts: artifacts\n  }, oldDatabase)\n  result?.artifacts!.invalid.push(...invalid)\n  return result\n}\n\n// backup 0: https://github.com/wormtql/genshin_artifact/blob/main/src/assets/artifacts/data/*/index.js\n// backup 1: https://github.com/YuehaiTeam/cocogoat/blob/main/src/App/export/Mona.ts\n\nfunction importMona1(dataObj: any): { artifacts: IArtifact[], invalid: any[] } {\n  const invalid: any[] = [], artifacts: IArtifact[] = []\n\n  for (const property in dataObj) {\n    if (!(property in ArtifactSlotKeyMap))\n      continue\n\n    for (const genshinArtArtifact of dataObj[property]) {\n      const { setName, star, level, position, mainTag } = genshinArtArtifact\n      const raw = {\n        setKey: ArtifactSetKeyMap[setName],\n        rarity: star,\n        level,\n        slotKey: ArtifactSlotKeyMap[position],\n        mainStatKey: ArtifactMainStatKeyMap[mainTag.name],\n        substats: genshinArtArtifact.normalTags.map(({ name, value }) => {\n          const key = ArtifactSubStatKeyMap[name]\n          return {\n            key,\n            value: key?.endsWith(\"_\") ?\n              Math.round(value * 1000) / 10 : // decimal to percentage\n              value,\n          }\n        }),\n      }\n      const flex = parseArtifact(raw)\n\n      if (!flex) {\n        invalid.push(raw)\n        continue\n      }\n\n      artifacts.push(flex)\n    }\n  }\n\n  return { artifacts, invalid }\n}\n\n// Referencing https://wormtql.gitbook.io/mona-uranai/ (they don't seem to update this anymore...)\n\nconst ArtifactSlotKeyMap: Dict<string, SlotKey> = {\n  \"flower\": \"flower\",\n  \"feather\": \"plume\",\n  \"sand\": \"sands\",\n  \"cup\": \"goblet\",\n  \"head\": \"circlet\",\n}\nconst ArtifactSetKeyMap: Dict<string, ArtifactSetKey> = {\n  // \"adventurer\": \"Adventurer\",\n  // \"archaicPetra\": \"ArchaicPetra\",\n  // \"berserker\": \"Berserker\",\n  // \"blizzardStrayer\": \"BlizzardStrayer\",\n  // \"bloodstainedChivalry\": \"BloodstainedChivalry\",\n  // \"braveHeart\": \"BraveHeart\",\n  // \"crimsonWitch\": \"CrimsonWitchOfFlames\",\n  // \"defenderWill\": \"DefendersWill\",\n  // \"gambler\": \"Gambler\",\n  // \"gladiatorFinale\": \"GladiatorsFinale\",\n  // \"heartOfDepth\": \"HeartOfDepth\",\n  // \"instructor\": \"Instructor\",\n  // \"lavaWalker\": \"Lavawalker\",\n  // \"luckyDog\": \"LuckyDog\",\n  // \"maidenBeloved\": \"MaidenBeloved\",\n  // \"martialArtist\": \"MartialArtist\",\n  // \"noblesseOblige\": \"NoblesseOblige\",\n  // \"prayersForDestiny\": \"PrayersForDestiny\",\n  // \"prayersForIllumination\": \"PrayersForIllumination\",\n  // \"prayersForWisdom\": \"PrayersForWisdom\",\n  // \"prayersToSpringtime\": \"PrayersToSpringtime\",\n  // \"resolutionOfSojourner\": \"ResolutionOfSojourner\",\n  // \"retracingBolide\": \"RetracingBolide\",\n  // \"scholar\": \"Scholar\",\n  // \"exile\": \"TheExile\",\n  // \"thunderingFury\": \"ThunderingFury\",\n  // \"thunderSmoother\": \"Thundersoother\",\n  // \"tinyMiracle\": \"TinyMiracle\",\n  // \"travelingDoctor\": \"TravelingDoctor\",\n  \"viridescentVenerer\": \"ViridescentVenerer\",\n  // \"wandererTroupe\": \"WanderersTroupe\",\n  // \"tenacityOfTheMillelith\": \"TenacityOfTheMillelith\",\n  // \"paleFlame\": \"PaleFlame\",\n  \"emblemOfSeveredFate\": \"EmblemOfSeveredFate\",\n  // \"shimenawaReminiscence\": \"ShimenawasReminiscence\",\n  // \"huskOfOpulentDreams\": \"HuskOfOpulentDreams\",\n  // \"oceanHuedClam\": \"OceanHuedClam\",\n}\nconst ArtifactMainStatKeyMap: Dict<string, MainStatKey> = {\n  \"cureEffect\": \"heal_\",\n  \"lifeStatic\": \"hp\",\n  \"lifePercentage\": \"hp_\",\n  \"attackStatic\": \"atk\",\n  \"attackPercentage\": \"atk_\",\n  // \"defendStatic\": \"def\",\n  \"defendPercentage\": \"def_\",\n  \"critical\": \"critRate_\",\n  // // \"eCritical\": \"\",\n  \"criticalDamage\": \"critDMG_\",\n  \"elementalMastery\": \"eleMas\",\n  \"recharge\": \"enerRech_\",\n  \"thunderBonus\": \"electro_dmg_\",\n  \"fireBonus\": \"pyro_dmg_\",\n  \"waterBonus\": \"hydro_dmg_\",\n  \"iceBonus\": \"cryo_dmg_\",\n  \"windBonus\": \"anemo_dmg_\",\n  \"rockBonus\": \"geo_dmg_\",\n  // \"grassBonus\": \"dendro_dmg_\",  // the day will come...\n  \"physicalBonus\": \"physical_dmg_\",\n  // \"bonus\": \"\",\n  // \"aBonus\": \"\",\n  // \"bBonus\": \"\",\n  // \"eBonus\": \"\",\n  // \"qBonus\": \"\",\n}\nconst ArtifactSubStatKeyMap: Dict<string, SubstatKey> = {\n  \"lifeStatic\": \"hp\",\n  \"lifePercentage\": \"hp_\",\n  \"attackStatic\": \"atk\",\n  \"attackPercentage\": \"atk_\",\n  \"defendStatic\": \"def\",\n  \"defendPercentage\": \"def_\",\n  \"critical\": \"critRate_\",\n  \"criticalDamage\": \"critDMG_\",\n  \"elementalMastery\": \"eleMas\",\n  \"recharge\": \"enerRech_\",\n}\n","import { faArrowLeft, faFileCode, faFileUpload } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Upload } from '@mui/icons-material'\nimport { Alert, Box, Button, CardContent, Divider, Grid, styled, Typography } from '@mui/material'\nimport { useContext, useMemo, useState } from \"react\"\nimport { Trans, useTranslation } from \"react-i18next\"\nimport CardDark from '../../Components/Card/CardDark'\nimport CardLight from '../../Components/Card/CardLight'\nimport { DatabaseContext } from \"../../Database/Database\"\nimport { dbStorage } from '../../Database/DBStorage'\nimport { importGO, ImportResult as GOImportResult } from '../../Database/exim/go'\nimport { importGOOD, ImportResult as GOODImportResult, ImportResultCounter } from '../../Database/exim/good'\nimport { importMona } from '../../Database/exim/mona'\n\nconst InvisInput = styled('input')({\n  display: 'none',\n});\n\nexport default function UploadCard({ forceUpdate }) {\n  const database = useContext(DatabaseContext)\n  const { t } = useTranslation(\"settings\");\n  const [data, setdata] = useState(\"\")\n  const [filename, setfilename] = useState(\"\")\n  const [errorMsg, setErrorMsg] = useState(\"\") // TODO localize error msg\n  const dataObj: UploadData | undefined = useMemo(() => {\n    if (!data) return\n    let parsed: any\n    try {\n      parsed = JSON.parse(data)\n      if (typeof parsed !== \"object\") {\n        setErrorMsg(\"uploadCard.error.jsonParse\")\n        return\n      }\n    } catch (e) {\n      setErrorMsg(\"uploadCard.error.jsonParse\")\n      return\n    }\n    // Figure out the file format\n    if (parsed.version === \"1\" && [\"flower\", \"feather\", \"sand\", \"cup\", \"head\"].some(k => Object.keys(parsed).includes(k))) {\n      // Parse as mona format\n      const imported = importMona(parsed, database)\n      if (!imported) {\n        setErrorMsg(\"uploadCard.error.monaInvalid\")\n        return\n      }\n      return imported\n    } else if (\"version\" in parsed && \"characterDatabase\" in parsed && \"artifactDatabase\" in parsed) {\n      // Parse as GO format\n      const imported = importGO(parsed)\n      if (!imported) {\n        setErrorMsg(\"uploadCard.error.goInvalid\")\n        return\n      }\n      return imported\n    } else if (parsed.format === \"GOOD\") {\n      // Parse as GOOD format\n      const imported = importGOOD(parsed, database)\n      if (!imported) {\n        setErrorMsg(\"uploadCard.error.goInvalid\")\n        return\n      }\n      return imported\n    }\n    setErrorMsg(\"uploadCard.error.unknown\")\n    return\n  }, [data, database])\n\n  const reset = () => {\n    setdata(\"\")\n    setfilename(\"\")\n    forceUpdate()\n  }\n  const onUpload = async e => {\n    const file = e.target.files[0]\n    e.target.value = null // reset the value so the same file can be uploaded again...\n    if (file) setfilename(file.name)\n    const reader = new FileReader()\n    reader.onload = () => setdata(reader.result as string)\n    reader.readAsText(file)\n  }\n  return <CardLight>\n    <CardContent sx={{ py: 1 }}><Trans t={t} i18nKey=\"settings:uploadCard.title\" /></CardContent>\n    <CardContent>\n      <Grid container spacing={2} sx={{ mb: 1 }}>\n        <Grid item>\n          <label htmlFor=\"icon-button-file\">\n            <InvisInput accept=\".json\" id=\"icon-button-file\" type=\"file\" onChange={onUpload} />\n            <Button component=\"span\" startIcon={<Upload />}>Upload</Button>\n          </label>\n        </Grid>\n        <Grid item flexGrow={1}>\n          <CardDark sx={{ px: 2, py: 1 }}>\n            <Typography>{filename ? <span><FontAwesomeIcon icon={faFileCode} /> {filename}</span> : <span><FontAwesomeIcon icon={faArrowLeft} /> <Trans t={t} i18nKey=\"settings:uploadCard.hint\" /></span>}</Typography>\n          </CardDark>\n        </Grid>\n      </Grid>\n      <Typography gutterBottom variant=\"caption\"><Trans t={t} i18nKey=\"settings:uploadCard.hintPaste\" /></Typography>\n      <Box component=\"textarea\" sx={{ width: \"100%\", fontFamily: \"monospace\", minHeight: \"10em\", mb: 2, resize: \"vertical\" }} value={data} onChange={e => setdata(e.target.value)} />\n      {UploadInfo(dataObj) ?? errorMsg}\n    </CardContent>\n    {UploadAction(dataObj, reset)}\n  </CardLight>\n}\n\nfunction UploadInfo(data: UploadData | undefined) {\n  switch (data?.type) {\n    case \"GO\": return <GOUploadInfo data={data} />\n    case \"GOOD\": return <GOODUploadInfo data={data} />\n  }\n}\nfunction UploadAction(data: UploadData | undefined, reset: () => void) {\n  switch (data?.type) {\n    case \"GO\":\n    case \"GOOD\": return <GOUploadAction data={data} reset={reset} />\n  }\n}\n\nfunction GOODUploadInfo({ data: { source, artifacts, characters, weapons }, data }: { data: GOODImportResult }) {\n  const { t } = useTranslation(\"settings\")\n  return <CardDark>\n    <CardContent sx={{ py: 1 }}>\n      <Typography>\n        <Trans t={t} i18nKey=\"uploadCard.dbSource\" /><strong> {source}</strong>\n      </Typography>\n    </CardContent>\n    <Divider />\n    <CardContent >\n      <Grid container spacing={2}>\n        <Grid item flexGrow={1}>\n          <MergeResult result={artifacts} type=\"arts\" />\n        </Grid>\n        <Grid item flexGrow={1}>\n          <MergeResult result={weapons} type=\"weapons\" />\n        </Grid>\n        <Grid item flexGrow={1}>\n          <MergeResult result={characters} type=\"chars\" />\n        </Grid>\n      </Grid>\n    </CardContent>\n  </CardDark>\n}\nfunction MergeResult({ result, type }: { result?: ImportResultCounter, type: string }) {\n  const { t } = useTranslation(\"settings\")\n  if (!result) return null\n  return <CardLight >\n    <CardContent sx={{ py: 1 }}>\n      <Typography>\n        <Trans t={t} i18nKey={`count.${type}`} /> {result.total ?? 0}\n      </Typography>\n    </CardContent>\n    <Divider />\n    <CardContent>\n      <Typography><Trans t={t} i18nKey=\"count.new\" /> <strong>{result.new}</strong> / {result.total}</Typography>\n      <Typography><Trans t={t} i18nKey=\"count.updated\" /> <strong>{result.updated}</strong> / {result.total}</Typography>\n      <Typography><Trans t={t} i18nKey=\"count.unchanged\" /> <strong>{result.unchanged}</strong> / {result.total}</Typography>\n      <Typography color=\"warning.main\"><Trans t={t} i18nKey=\"count.removed\" /> <strong>{result.removed}</strong></Typography>\n      {!!result.invalid?.length && <div>\n        <Typography color=\"error.main\"><Trans t={t} i18nKey=\"count.invalid\" /> <strong>{result.invalid.length}</strong> / {result.total}</Typography>\n        <Box component=\"textarea\" sx={{ width: \"100%\", fontFamily: \"monospace\", minHeight: \"10em\", resize: \"vertical\" }} value={JSON.stringify(result.invalid, undefined, 2)} disabled />\n      </div>}\n    </CardContent>\n  </CardLight>\n}\nfunction GOUploadInfo({ data: { charCount, artCount } }: { data: GOImportResult }) {\n  const { t } = useTranslation(\"settings\")\n  return <CardDark>\n    <CardContent sx={{ py: 1 }}>\n      <Trans t={t} i18nKey=\"uploadCard.goUpload.title\" />\n    </CardContent>\n    <Divider />\n    <CardContent><Grid container spacing={1}>\n      <Grid item xs={12} md={6}> <Typography><Trans t={t} i18nKey=\"count.chars\" /> {charCount}</Typography></Grid>\n      <Grid item xs={12} md={6}> <Typography><Trans t={t} i18nKey=\"count.arts\" /> {artCount}</Typography></Grid>\n      {<Grid item xs={12} ><Alert severity=\"warning\" ><Trans t={t} i18nKey=\"uploadCard.goUpload.migrate\" /></Alert></Grid>}\n    </Grid></CardContent>\n  </CardDark>\n}\n\nfunction GOUploadAction({ data: { storage }, data, reset }: { data: GOImportResult | GOODImportResult, reset: () => void }) {\n  const database = useContext(DatabaseContext)\n  const { t } = useTranslation(\"settings\")\n  const dataValid = data.type === \"GO\" ? data.charCount || data.artCount : (data.characters?.total || data.artifacts?.total || data.weapons?.total)\n  const replaceDB = () => {\n    dbStorage.removeForKeys(k => k.startsWith(\"artifact_\") || k.startsWith(\"char_\") || k.startsWith(\"weapon_\"))\n    dbStorage.copyFrom(storage)\n    database.reloadStorage()\n    reset()\n  }\n\n  return <><Divider /><CardContent sx={{ py: 1 }}>\n    <Button color={dataValid ? \"success\" : \"error\"} disabled={!dataValid} onClick={replaceDB} startIcon={<FontAwesomeIcon icon={faFileUpload} />}><Trans t={t} i18nKey=\"settings:uploadCard.replaceDatabase\" /></Button>\n  </CardContent></>\n}\n\ntype UploadData = GOImportResult | GOODImportResult","import { IArtifact } from \"../../Types/artifact\";\nimport { ICharacter } from \"../../Types/character_WR\";\nimport { CharacterKey } from \"../../Types/consts\";\nimport { ArtCharDatabase } from \"../Database\";\nimport { DBStorage, SandboxStorage } from \"../DBStorage\";\nimport { setDBVersion } from \"../utils\";\n\nexport function importGO(data: any): ImportResult | undefined {\n  const storage = new SandboxStorage()\n  const { version, characterDatabase, artifactDatabase, artifactDisplay, characterDisplay, buildsDisplay } = data as Partial<DatabaseObj>\n  if (!version || !characterDatabase || !artifactDatabase)\n    return\n\n  characterDatabase && Object.entries(characterDatabase).forEach(([charKey, char]) => storage.set(`char_${charKey}`, char))\n  artifactDatabase && Object.entries(artifactDatabase).forEach(([id, art]) => storage.set(id, art))\n  //override version\n  version && setDBVersion(storage, version)\n  artifactDisplay && storage.set(\"ArtifactDisplay.state\", artifactDisplay)\n  characterDisplay && storage.set(\"CharacterDisplay.state\", characterDisplay)\n  buildsDisplay && storage.set(\"BuildsDisplay.state\", buildsDisplay)\n\n  const database = new ArtCharDatabase(storage) // validate storage entries\n  //TODO: figure out the # of dups/upgrades/new/foddered, not just total char/art count below.\n  return { type: \"GO\", storage, charCount: database.chars.keys.length, artCount: database.arts.keys.length }\n}\n\ntype DatabaseObj = {\n  version: number,\n  characterDatabase: Dict<CharacterKey, ICharacter>\n  artifactDatabase: Dict<string, IArtifact>\n  artifactDisplay: any\n  characterDisplay: any\n  buildsDisplay: any\n}\nexport type ImportResult = { type: \"GO\", storage: DBStorage, charCount: number, artCount: number }\n","import { CardContent, Divider, Typography } from '@mui/material'\nimport ReactGA from 'react-ga'\nimport { Trans, useTranslation } from \"react-i18next\"\nimport CardDark from '../Components/Card/CardDark'\nimport useForceUpdate from '../ReactHooks/useForceUpdate'\nimport DownloadCard from './Components/DownloadCard'\nimport LanguageCard from './Components/LanguageCard'\nimport TCToggleCard from './Components/TCToggleCard'\nimport UploadCard from './Components/UploadCard'\n\nexport default function SettingsDisplay() {\n  const { t } = useTranslation([\"settings\"]);\n  const [, forceUpdate] = useForceUpdate()\n  ReactGA.pageview('/setting')\n\n  return <CardDark sx={{ my: 1 }}>\n    <CardContent sx={{ py: 1 }}>\n      <Typography variant=\"subtitle1\">\n        <Trans t={t} i18nKey=\"title\" />\n      </Typography>\n    </CardContent>\n    <Divider />\n    <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n      <LanguageCard />\n      <DownloadCard forceUpdate={forceUpdate} />\n      <UploadCard forceUpdate={forceUpdate} />\n      <TCToggleCard />\n    </CardContent>\n  </CardDark>\n}\n"],"sourceRoot":""}