{"version":3,"file":"static/js/652.7fddbea3.chunk.js","mappings":"mSAYe,SAASA,EAAT,GAA+H,IAAtFC,EAAqF,EAAlGC,YAA2BC,EAAuE,EAAhFC,QACrDC,GAAgBC,EAAAA,EAAAA,IAAW,kBAAS,OAAHL,QAAG,IAAHA,OAAA,EAAAA,EAAKM,SAAUC,EAAAA,EAAAA,IAAkBP,EAAIM,OAA3C,GAAoD,QAACN,QAAD,IAACA,OAAD,EAACA,EAAKM,SAE3F,IAAKN,IAAQI,EACX,OAAO,SAAC,IAAD,CAAUI,GAAI,CAAEC,QAAS,OAAQC,cAAe,SAAUC,OAAQ,QAAlE,UACL,SAAC,IAAD,CAAKH,GAAI,CAAEI,MAAO,OAAQC,GAAI,OAAQC,SAAU,YAAhD,UACE,SAAC,IAAD,CACEN,GAAI,CACFM,SAAU,WACVF,MAAO,MAAOD,OAAQ,MACtBI,KAAM,MAAOC,IAAK,MAClBC,UAAW,wBACXC,QAAS,IAEXC,UAAU,MACVC,IAAKC,EAAAA,EAAAA,KAAYnB,SAMzB,IAAQoB,EAA+BtB,EAA/BsB,YAAaC,EAAkBvB,EAAlBuB,OAAQC,EAAUxB,EAAVwB,MACvBC,EAAUC,EAAAA,GAAAA,MAAwB,SAAAC,GAAG,OAAI3B,EAAIsB,YAAYM,SAASD,EAA7B,IACrCE,EAAK,OAAGJ,QAAH,IAAGA,EAAAA,EAAW,YAEzB,OAAO,SAAC,IAAD,CAAiBzB,IAAKA,EAAtB,UAA2B,UAAC,IAAD,CAAUQ,GAAI,CAAEC,QAAS,OAAQC,cAAe,SAAUI,SAAU,YAApE,WAChC,SAAC,IAAD,CACEK,UAAU,MACVW,UAAS,eAAUP,EAAV,QACTH,IAAKhB,EAAc2B,UAAU7B,GAC7B8B,SAAS,OACTC,UAAU,UAEZ,SAAC,IAAD,CAAYzB,GAAI,CAAEM,SAAU,WAAYoB,SAAU,UAAWC,WAAY,EAAGjB,QAAS,IAAMkB,cAAe,QAA1G,UACE,6BAAQ,SAAC,IAAD,CAAS5B,GAAI,CAAE6B,EAAG,IAAOR,MAAOS,EAAAA,GAAAA,aAAsBd,GAAtD,UAA8D,kCAAUA,YAElF,SAAC,IAAD,CAAYhB,GAAI,CAAEM,SAAU,WAAYoB,SAAU,UAAWC,WAAY,EAAGjB,QAAS,IAAMkB,cAAe,OAAQG,OAAQ,EAAGC,MAAO,GAApI,UACE,SAAC,IAAD,CAASX,MAAOA,EAAOrB,GAAI,CAAE6B,EAAG,IAAhC,SAAwCI,EAAAA,EAASnB,WAGtD,C,iOCtCc,SAASoB,EAAT,GAA8F,IAAnE1C,EAAkE,EAAlEA,IAAK2C,EAA6D,EAA7DA,SACvCC,GAAW,SAAC,IAAD,WACf,SAAC,IAAD,CAAUC,QAAQ,cAAcjC,MAAO,IAAKD,OAAQ,QAEhDmC,GAAQ,SAAC,EAAAC,SAAD,CAAUH,SAAUA,EAApB,UACZ,SAACI,EAAD,CAAchD,IAAKA,MAGrB,OAAO,SAAC,IAAD,CAAkBiD,UAAU,MAAMH,MAAOA,EAAOI,oBAAkB,EAAlE,SACJP,GAEJ,CACD,SAASK,EAAT,GAA0D,IAAD,EAAjChD,EAAiC,EAAjCA,IAChBmD,GAAQ9C,EAAAA,EAAAA,IAAW,kBAAME,EAAAA,EAAAA,IAAkBP,EAAIM,OAA5B,GAAqC,CAACN,EAAIM,SAC3DH,EAAkDH,EAAlDG,QAASqB,EAAyCxB,EAAzCwB,MAAOD,EAAkCvB,EAAlCuB,OAAQD,EAA0BtB,EAA1BsB,YAAa8B,EAAapD,EAAboD,SACvCC,EAAQ,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAOG,YAAYnD,GAC9BoD,EAAeC,EAAAA,GAAAA,KAAYlC,GAC3BmC,EAAWhB,EAAAA,EAASnB,GACpBoC,EAAcF,EAAAA,GAAAA,WAAkBlC,GACtC,OAAO,UAAC,IAAD,CAAKe,EAAG,EAAR,WACL,UAAC,IAAD,CAAYQ,QAAQ,KAApB,WAA0Bc,EAAAA,EAAAA,IAAiBxD,GAA3C,IAAsDkD,MACtD,UAAC,IAAD,CAAYR,QAAQ,YAAYhB,MAAK,UAAK6B,EAAL,SAArC,UAA+DD,EAA/D,IAA0ED,EAAAA,GAAAA,IAAWlC,GAArF,KAAoGsC,EAAAA,EAAAA,IAAgB,UAACtB,EAAAA,GAAAA,cAAuBhB,EAAaC,EAAQC,UAA7C,QAAuD,EAAGgC,EAAAA,GAAAA,KAAYlC,IAAeiC,MACzM,UAAC,IAAD,CAAYV,QAAQ,YAAYrC,GAAI,CAAEC,QAAS,OAAQoD,eAAgB,iBAAvE,WAA2F,SAAC,IAAD,CAAcC,MAAOvC,KAAU,UAAC,IAAD,CAASM,MAAOS,EAAAA,GAAAA,aAAsBd,GAAtC,cAAgDA,KAA1K,QACA,SAAC,IAAD,CAAKuC,GAAI,EAAT,SACGX,EAASY,KAAI,SAACC,GAAD,QAA4BA,EAAKC,QAAS,UAAC,IAAD,CAA2BrC,MAAK,eAASsC,EAAAA,EAAAA,IAAMF,EAAKG,MAAMC,OAAQ,EAAG,GAArC,SAAhC,UACrD5B,EAAAA,EAASwB,EAAK/D,KADuC,IAChCsD,EAAAA,GAAAA,OAAcS,EAAK/D,KADa,KACP,wCAAa0D,EAAAA,EAAAA,IAAiBK,EAAKC,MAAOV,EAAAA,GAAAA,KAAYS,EAAK/D,OAA3D,OAAmEsD,EAAAA,GAAAA,KAAYS,EAAK/D,UAD5D+D,EAAK/D,IAAhE,OAKhB,SAAC,IAAD,CAAY2B,MAAM,eAAlB,gBAAkCsB,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAOmB,SAE5C,C,uHC3CKC,GAAmBC,EAAAA,EAAAA,KAAO,gBAAG1C,EAAH,EAAGA,UAAc2C,GAAjB,mBAC9B,SAAC,KAAD,kBAAaA,GAAb,IAAoBC,OAAK,EAACC,QAAS,CAAEC,OAAQ9C,KADf,GAAP0C,EAEtB,kBAAGK,EAAH,EAAGA,MAAH,mCACMC,EAAAA,EAAAA,OAAyB,CAC9BjD,MAAOgD,EAAME,QAAQC,OAAOC,SAF7B,sBAIMH,EAAAA,EAAAA,SAA2B,CAChCI,gBAAiBL,EAAME,QAAQC,OAAOC,MACtCjD,SAAU,MANX,KASH,K,scCCe,SAASmD,EAAT,GAA6D,IAAnCC,EAAkC,EAAlCA,SACjCC,GAASC,EAAAA,EAAAA,GAAUF,GACnBG,GAAclF,EAAAA,EAAAA,IAAW,kBAAY,OAANgF,QAAM,IAANA,OAAA,EAAAA,EAAQnF,MAAOsF,EAAAA,EAAAA,IAAgBH,EAAOnF,IAA5C,GAAkD,QAACmF,QAAD,IAACA,OAAD,EAACA,EAAQnF,MACpFuF,GAASC,EAAAA,EAAAA,UAAQ,kBAAMH,GAAeF,IAAUM,EAAAA,EAAAA,IAAc,CAACJ,EAAYK,MAAMC,EAAAA,EAAAA,IAAiBR,IAAjF,GAA4F,CAACE,EAAaF,IACjI,OAAKA,GAAWE,GAAgBE,GACzB,SAACK,EAAA,EAAD,WACL,UAACC,EAAA,EAAD,CAAKtF,QAAQ,OAAb,WACE,SAACsF,EAAA,EAAD,CAAKC,WAAY,EAAGhE,SAAS,MAAMvB,QAAQ,OAAOC,cAAc,SAASuF,aAAa,WAAWnE,UAAS,eAAUyD,EAAYhE,OAAtB,QAA1G,UACE,SAACwE,EAAA,EAAD,CACE5E,UAAU,MACVC,IAAKmE,EAAYW,OAAOb,EAAOc,WAC/BvF,MAAM,OACND,OAAO,OACPH,GAAI,CAAE4F,GAAI,aAGd,UAACL,EAAA,EAAD,CAAKM,SAAU,EAAG7F,GAAI,CAAE6B,EAAG,GAA3B,WACE,SAACiE,EAAA,EAAD,CAAYzD,QAAQ,QAAQ0D,cAAY,EAAxC,UAAyC,mCAAShB,QAAT,IAASA,OAAT,EAASA,EAAajB,UAC/D,UAACgC,EAAA,EAAD,CAAYzD,QAAQ,YAAYrC,GAAI,CAAEC,QAAS,OAAQ+F,IAAK,GAAKD,cAAY,EAA7E,WACE,UAACE,EAAA,EAAD,CAAS5E,MAAM,UAAf,iBAA8B2D,EAAAA,EAAAA,eAA2BH,MACxDE,EAAYmB,gBAAiB,UAACD,EAAA,EAAD,CAAS5E,MAAM,OAAf,cAAwBwD,EAAOsB,kBAE/D,UAACL,EAAA,EAAD,CAAYzD,QAAQ,YAAYrC,GAAI,CAAEC,QAAS,OAAQ+F,IAAK,GAA5D,WACE,SAACI,EAAD,CAAYC,KAAMpB,EAAOqB,IAAIC,EAAAA,GAAAA,OAAAA,SAC7B,SAACH,EAAD,CAAYC,KAAMpB,EAAOqB,IAAIC,EAAAA,GAAAA,OAAAA,kBApBU,IA0BhD,CACD,SAASH,EAAT,GAAsD,IAAhCC,EAA+B,EAA/BA,KACpB,IAAKA,EAAKG,KAAK9G,IAAK,OAAO,KAC3B,IAAM+G,GAAMC,EAAAA,EAAAA,IAAYL,EAAK3C,MAAO2C,EAAKM,KAAON,EAAKM,UAAWC,EAAJ,GAC5D,OAAO,UAACX,EAAA,EAAD,CAAS5E,MAAM,YAAf,UAA4BY,EAAAA,EAASoE,EAAKG,KAAK9G,KAA/C,IAAsD+G,IAC9D,C,oECLc,SAASI,EAAT,GAA+L,IAAD,IAArKC,EAAqK,EAArKA,aAAcC,EAAuJ,EAAvJA,iBAAkBC,EAAqI,EAArIA,eAAgBC,EAAqH,EAArHA,kBAAmBC,EAAkG,EAAlGA,QAASC,EAAyF,EAAzFA,cAAeC,EAA0E,EAA1EA,gBAAiBC,EAAyD,EAAzDA,OAAQC,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,eAC7JC,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBF,SACUG,GAAoBF,EAAAA,EAAAA,YAAWG,EAAAA,GAAzCC,SACFA,EAAQ,WAAGC,EAAAA,EAAAA,GAAYH,EAAkB,GAAKb,UAAtC,QAAwDa,EAChEI,GAAYC,EAAAA,EAAAA,GAAalB,GACzBmB,GAASC,EAAAA,EAAAA,GAAUV,GACnBW,GAAiBtI,EAAAA,EAAAA,IAAW,kBAAMuI,EAAAA,GAAAA,IAAmBtB,EAAcmB,EAAvC,GAAgD,CAACnB,EAAcmB,IAC3FI,GAAoBC,EAAAA,EAAAA,GAAoBxB,GACxC1B,EAAI,OAAGyC,QAAH,IAAGA,GAAH,UAAGA,EAAWf,UAAd,aAAG,EAA0ByB,OACjCC,GAAiBC,EAAAA,EAAAA,cAAY,kBAAM3B,IAAY,OAAII,QAAJ,IAAIA,OAAJ,EAAIA,EAAUJ,GAAhC,GAA+C,CAACA,EAAcI,IAC3FwB,GAAoBD,EAAAA,EAAAA,cACxB,SAAAtG,GAAQ,OAAI,SAACwG,EAAA,EAAD,CAAgBzB,QAASsB,EAAgBxI,GAAI,CAAE6F,SAAU,EAAG5F,QAAS,OAAQC,cAAe,UAA5F,SAAyGiC,GAA7G,GACR,CAACqG,IAGGI,GAAuD1D,EAAAA,EAAAA,UAAQ,kBAAM6C,GAAaI,GAAkB,CACxGJ,UAAAA,EAAWI,eAAAA,EAAgBE,kBAAAA,EADwC,GAElE,CAACN,EAAWI,EAAgBE,IACzBQ,GAA6C3D,EAAAA,EAAAA,UAAQ,kBAAME,GAAQyC,GAAa,CACpFzC,KAAAA,EACAyC,SAAAA,EAFyD,GAGvD,CAACzC,EAAMyC,IAEX,GAAoCiB,EAAAA,EAAAA,GAAW,YAAD,OAAahC,GAAgBiC,EAAAA,IAA3E,eAASC,EAAT,KAASA,SAAYC,EAArB,KACA,OAAO,SAAC,EAAA1G,SAAD,CAAUH,UAAU,SAAC8G,EAAA,EAAD,CAAU7G,QAAQ,cAAcrC,GAAI,CAAEI,MAAO,OAAQD,OAAQ,OAAQgJ,UAAW,OAApG,UACL,UAACC,EAAA,EAAD,CAAWpJ,GAAI,CAAEG,OAAQ,OAAQF,QAAS,OAAQC,cAAe,UAAjE,WACE,SAACqF,EAAA,EAAD,CAAKvF,GAAI,CAAEC,QAAS,OAAQK,SAAU,WAAY+I,OAAQ,EAAG3I,QAAS,IAAtE,UACE,SAAC4I,EAAA,EAAD,CAAYtJ,GAAI,CAAE6B,EAAG,IAAOqF,QAAS,SAAAqC,GAAC,OAAIN,EAAY,CAAED,UAAWA,GAA7B,EAAtC,SACGA,GAAW,SAACQ,EAAA,EAAD,KAAe,SAACC,EAAA,EAAD,SAG/B,SAACC,EAAA,EAAD,CAAoBC,YAAazC,EAAS0C,QAASlB,EAAnD,SACIX,GAAac,GAAkBD,GAC/B,SAACiB,EAAD,CACEjB,oBAAqBA,EACrBC,eAAgBA,EAChB/B,aAAcA,EACdI,QAASA,EACTC,cAAeA,EACfI,eAAgBA,EAChBQ,UAAWA,EACXX,gBAAiBA,EACjBE,UAAWA,EACXN,eAAgBA,EAChBD,iBAAkBA,EAClBE,kBAAmBA,KAChB,SAAC6C,EAAD,CAAyBhD,aAAcA,MAE/CO,MAIN,CAgBD,SAASwC,EAAT,GAAqQ,IAA7NjB,EAA4N,EAA5NA,oBAAqBC,EAAuM,EAAvMA,eAAgB/B,EAAuL,EAAvLA,aAAcI,EAAyK,EAAzKA,QAASC,EAAgK,EAAhKA,cAAeI,EAAiJ,EAAjJA,eAAgBQ,EAAiI,EAAjIA,UAAWX,EAAsH,EAAtHA,gBAAiBE,EAAqG,EAArGA,UAAWN,EAA0F,EAA1FA,eAAgBD,EAA0E,EAA1EA,iBAAkBE,EAAwD,EAAxDA,kBAC1M,OAAO,SAAC8C,EAAA,WAAD,CAA2BrG,MAAOkF,EAAlC,UAAuD,UAAChB,EAAA,WAAD,CAAsBlE,MAAOmF,EAA7B,WAC5D,SAACmB,EAAD,CAAQlD,aAAcA,EAAcI,QAAUA,OAA0BN,EAAhBO,EAAxD,UACE,SAAC8C,EAAD,OAEF,UAACC,EAAA,EAAD,CAAalK,GAAI,CAAEI,MAAO,OAAQH,QAAS,OAAQC,cAAe,SAAU8F,IAAK,EAAGH,SAAU,GAA9F,WACE,SAACsE,EAAD,KACE5C,IAAkB,UAAC6C,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAS,IAArC,WAClB,SAACH,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,EAAGtK,OAAO,OAAzB,UACE,SAACuK,EAAA,EAAD,CAAgB9F,SAAUmD,EAAU4C,oBAErCC,EAAAA,EAAAA,IAAM,EAAG,GAAGpH,KAAI,SAAAqH,GAAC,OAAI,SAACT,EAAA,GAAD,CAAcI,MAAI,EAACC,GAAI,EAAGtK,OAAO,OAAjC,UAAwC,SAAC2K,EAAA,EAAD,CAAmBhE,aAAciB,EAAUgD,KAAKF,GAAI3D,QAAUA,OAA4BN,EAAlBQ,EAA6B4D,MAAOH,KAAzIA,EAAf,OAEnBtD,IAAkB,SAAC5C,EAAD,CAAgBC,SAAUmD,EAAU4C,kBACrDpD,IAAmBD,IAAa,SAAC2D,GAAD,IACjCjE,EACAD,EACAE,SAGN,CAED,SAAS6C,EAAT,GAAoF,IAAjDhD,EAAgD,EAAhDA,aACjC,OAAO,iCACL,SAACkD,EAAD,CAAQlD,aAAcA,EAAtB,UACE,SAACoE,EAAD,CAAkBpE,aAAcA,OAElC,SAACoD,EAAA,EAAD,CAAalK,GAAI,CAAEI,MAAO,OAAQH,QAAS,OAAQC,cAAe,SAAU8F,IAAK,EAAGH,SAAU,EAAG1F,OAAQ,YAG5G,CAED,SAAS6J,EAAT,GAA6J,IAA3I7H,EAA0I,EAA1IA,SAAU2E,EAAgI,EAAhIA,aAAcI,EAAkH,EAAlHA,QAChCM,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBF,SACFS,GAASC,EAAAA,EAAAA,GAAUV,GACnBW,GAAiBtI,EAAAA,EAAAA,IAAW,kBAAMuI,EAAAA,GAAAA,IAAmBtB,EAAcmB,EAAvC,GAAgD,CAACnB,EAAcmB,IAE3FS,GAAoBD,EAAAA,EAAAA,cACxB,SAAAtG,GAAQ,OAAI,SAACwG,EAAA,EAAD,CAAgBzB,QAAS,kBAAMJ,IAAY,OAAII,QAAJ,IAAIA,OAAJ,EAAIA,EAAUJ,GAAhC,EAA+C9G,GAAI,CAAE6F,SAAU,EAAG5F,QAAS,OAAQC,cAAe,UAA3H,SAAwIiC,GAA5I,GACR,CAAC+E,EAASJ,IAEZ,OAAKqB,GACE,SAACuB,EAAA,EAAD,CAAoBC,YAAazC,EAAS0C,QAASlB,EAAnD,UACL,UAACnD,EAAA,EAAD,CAAKtF,QAAQ,OACXK,SAAS,WACTgB,UAAS,eAAU6G,EAAepH,OAAzB,QACTf,GAAI,CACF,YAAa,CACXmL,QAAS,KACTlL,QAAS,QAASK,SAAU,WAC5BC,KAAM,EAAGC,IAAK,EACdJ,MAAO,OAAQD,OAAQ,OACvBO,QAAS,GACT0K,gBAAgB,OAAD,OAASjD,EAAekD,UAAxB,KAAsCC,mBAAoB,SAAUC,eAAgB,UAGvGnL,MAAM,OAbR,WAcE,SAACmF,EAAA,EAAD,CAAKC,WAAY,EAAGxF,GAAI,CAAEwB,SAAU,CAAEiJ,GAAI,MAAOe,GAAI,QAAWC,UAAU,WAAWxL,QAAQ,OAAOC,cAAc,SAASmJ,OAAQ,EAAnI,UACE,SAAC9D,EAAA,EAAD,CACE5E,UAAU,MACVC,IAAKuH,EAAeuD,SACpBtL,MAAM,OACND,OAAO,OACPqB,SAAU,IACVxB,GAAI,CAAE4F,GAAI,aAGd,SAACL,EAAA,EAAD,CAAKM,SAAU,EAAG7F,GAAI,CAAEuD,GAAI,EAAGoI,GAAI,GAAK1L,QAAQ,OAAOC,cAAc,SAASmJ,OAAQ,EAAtF,SACGlH,SA3BqB,IA+B7B,CAED,SAAS8H,IACP,IAAQ9B,GAAmBV,EAAAA,EAAAA,YAAWsC,EAAAA,GAA9B5B,eACA/C,GAASqC,EAAAA,EAAAA,YAAWG,EAAAA,GAApBxC,KACFwG,EAAexG,EAAKkB,IAAIC,EAAAA,GAAAA,SAAe7C,MACvCmI,EAAiBzG,EAAKkB,IAAIC,EAAAA,GAAAA,KAAW7C,MACrCoI,EAAgB1G,EAAKkB,IAAIC,EAAAA,GAAAA,eAAqB7C,MAC9CiC,EAAYP,EAAKkB,IAAIC,EAAAA,GAAAA,KAAW7C,MAChCqI,EAAY3G,EAAKkB,IAAIC,EAAAA,GAAAA,MAAAA,MAAkB7C,MACvCsI,EAAa5G,EAAKkB,IAAIC,EAAAA,GAAAA,MAAAA,OAAmB7C,MACzCuI,EAAa7G,EAAKkB,IAAIC,EAAAA,GAAAA,MAAAA,OAAmB7C,MAEzCwI,EAAQ9G,EAAKkB,IAAIC,EAAAA,GAAAA,MAAAA,MAAkB7C,MACnCyI,EAAS/G,EAAKkB,IAAIC,EAAAA,GAAAA,MAAAA,OAAmB7C,MACrC0I,EAAShH,EAAKkB,IAAIC,EAAAA,GAAAA,MAAAA,OAAmB7C,MAE3C,OAAO,iCACL,SAAC2I,EAAA,EAAD,CAAMC,OAAO,SAACxG,EAAA,EAAD,CAAYzD,QAAQ,YAApB,SAAiC8F,EAAerE,OAAoByI,KAAK,QAAQlL,MAAOuK,EAAc5L,GAAI,CAAEU,QAAS,QAClI,UAAC0J,EAAA,GAAD,CAAMC,WAAS,EAACE,QAAS,EAAGiC,SAAS,SAArC,WACE,UAACpC,EAAA,GAAD,CAAMI,MAAI,EAACxK,GAAI,CAAEyM,WAAY,gBAA7B,WACE,UAAC3G,EAAA,EAAD,CAAYnF,UAAU,OAAO0B,QAAQ,KAAKqK,WAAW,SAArD,iBAAoEb,MACpE,UAAC/F,EAAA,EAAD,CAAYnF,UAAU,OAAO0B,QAAQ,KAAKhB,MAAM,iBAAhD,cAAmEsL,EAAAA,GAAkBhH,UAEvF,SAACyE,EAAA,GAAD,CAAMI,MAAI,EAAV,UACE,SAAC1E,EAAA,EAAD,CAAYzD,QAAQ,KAApB,UAAyB,UAAC4D,EAAA,EAAD,eAAW6F,aAGxC,UAAC1B,EAAA,GAAD,CAAMC,WAAS,EAACE,QAAS,EAAGiC,SAAS,SAArC,WACE,SAACpC,EAAA,GAAD,CAAMI,MAAI,EAAV,UACE,SAAC6B,EAAA,EAAD,CAAMhL,MAAO0K,EAAY,OAAS,YAAaO,OAAO,4BAAUJ,SAElE,SAAC9B,EAAA,GAAD,CAAMI,MAAI,EAAV,UACE,SAAC6B,EAAA,EAAD,CAAMhL,MAAO2K,EAAa,OAAS,YAAaM,OAAO,4BAAUH,SAEnE,SAAC/B,EAAA,GAAD,CAAMI,MAAI,EAAV,UACE,SAAC6B,EAAA,EAAD,CAAMhL,MAAO4K,EAAa,OAAS,YAAaK,OAAO,4BAAUF,YAGrE,SAACtG,EAAA,EAAD,CAAYF,GAAI,EAAhB,UAAoB,SAAC,IAAD,CAActC,MAAO6E,EAAepH,OAAQ6L,SAAO,QAG1E,CAED,SAAS1B,EAAT,GAA6E,IAAjDpE,EAAgD,EAAhDA,aAClBU,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBF,SACFS,GAASC,EAAAA,EAAAA,GAAUV,GACnBW,GAAiBtI,EAAAA,EAAAA,IAAW,kBAAMuI,EAAAA,GAAAA,IAAmBtB,EAAcmB,EAAvC,GAAgD,CAACnB,EAAcU,EAAUS,IAE3G,OAAKE,GACE,iCACL,SAACkE,EAAA,EAAD,CAAMC,OAAO,SAACxG,EAAA,EAAD,CAAYzD,QAAQ,YAApB,SAAiC8F,EAAerE,OAAoByI,KAAK,QAAQlL,MAAO8G,EAAe0E,WAAY7M,GAAI,CAAEU,QAAS,QAC/I,SAAC6E,EAAA,EAAD,CAAKK,GAAI,EAAT,UACE,SAACE,EAAA,EAAD,CAAYzD,QAAQ,KAApB,UAAyB,SAAC4D,EAAA,EAAD,uBAE3B,SAACH,EAAA,EAAD,CAAYF,GAAI,IAAhB,UAAsB,SAAC,IAAD,CAActC,MAAO6E,EAAepH,OAAQ6L,SAAO,SAN/C,IAQ7B,CAED,SAASzC,IACP,IAAQ3C,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBF,SACApC,GAASqC,EAAAA,EAAAA,YAAWG,EAAAA,GAApBxC,KACF0H,GAAY5H,EAAAA,EAAAA,UAAQ,kBACxB6H,EAAAA,GAAAA,KAAgB,SAAAC,GAAC,YAAI,CAACA,EAAGxF,EAASyF,KAAK3G,IAAd,UAAkBlB,EAAKkB,IAAIC,EAAAA,GAAAA,IAAUyG,GAAGE,IAAIxJ,aAA5C,QAAqD,IAA7D,GADO,GAExB,CAAC0B,EAAMoC,IAET,OAAO,SAAC4C,EAAA,GAAD,CAAM+C,UAAU,MAAM9C,WAAS,EAACE,QAAS,IAAMD,QAAS,EAAxD,SACJwC,EAAUtJ,KAAI,+BAAE9D,EAAF,KAAOF,EAAP,YACb,SAAC4K,EAAA,GAAD,CAAMI,MAAI,EAAWC,GAAI,EAAzB,UACE,SAAClL,EAAA,EAAD,CAAkBE,YAAaD,EAAKG,QAASD,KAD/BA,EADH,KAMlB,CAED,SAASuL,KACP,IAAQ7F,GAASqC,EAAAA,EAAAA,YAAWG,EAAAA,GAApBxC,KACR,OAAO,UAACG,EAAA,EAAD,CAAKvF,GAAI,CAAEI,MAAO,QAAlB,UACJgN,OAAOC,OAAOjI,EAAKkI,aAAaC,OAAO/J,KAAI,SAAAgK,GAAC,OAAI,SAAC,KAAD,CAAmCnH,KAAMmH,GAAlBA,EAAEhH,KAAK9G,IAAlC,IAC5C0F,EAAKkB,IAAIC,EAAAA,GAAAA,SAAeC,KAAK9G,MAAO,UAAC6F,EAAA,EAAD,CAAKvF,GAAI,CAAEC,QAAS,OAAQ+F,IAAK,EAAGyH,WAAY,UAAhD,WACnC,SAAC3H,EAAA,EAAD,CAAYD,SAAU,EAAtB,UAAyB,+CACxB5D,EAAAA,EAASmD,EAAKkB,IAAIC,EAAAA,GAAAA,SAAeC,KAAK9G,MACvC,SAACoG,EAAA,EAAD,UAAa9C,EAAAA,GAAAA,IAAWoC,EAAKkB,IAAIC,EAAAA,GAAAA,SAAeC,KAAK9G,YAG1D,C,8PC7Pc,SAASoL,EAAT,GAA6K,IAAD,IAA/IhE,aAAAA,OAA+I,MAAhI,GAAgI,MAA5HkE,MAAAA,OAA4H,OAAnH,EAAmH,EAAhH9D,EAAgH,EAAhHA,QACjEM,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBF,SACFS,GAASC,EAAAA,EAAAA,GAAUV,GACnBkG,GAAgB7N,EAAAA,EAAAA,IAAW,kBAAMuI,EAAAA,GAAAA,IAAmBtB,EAAcmB,EAAvC,GAAgD,CAACnB,EAAcmB,IAC1FF,GAAYC,EAAAA,EAAAA,GAAalB,GACzB0B,GAAiBC,EAAAA,EAAAA,cAAY,kBAAM3B,IAAY,OAAII,QAAJ,IAAIA,OAAJ,EAAIA,EAAUJ,GAAhC,GAA+C,CAACA,EAAcI,IAC3FwB,GAAoBD,EAAAA,EAAAA,cACxB,SAAAtG,GAAQ,OAAI,SAAC,IAAD,CAAgB+E,QAASsB,EAAzB,SAA0CrG,GAA9C,GACR,CAACqG,IACH,GAAIkF,GAAiB3F,EAAW,CAC9B,IAAMzF,GAAQ,SAAC,EAAAC,SAAD,CAAUH,UAAU,SAAC,IAAD,CAAUC,QAAQ,OAAOjC,MAAO,MAApD,UACZ,UAAC,IAAD,WAAasN,EAAcb,YAAc5K,EAAAA,EAASyL,EAAcb,YAAhE,IAA8Ea,EAAc5J,UAG9F,OAAO,SAAC,IAAD,CAAU9D,GAAI,CAAEwB,SAAU,IAAKlB,SAAU,WAAYL,QAAS,OAAQC,cAAe,UAArF,UACL,UAAC,IAAD,CAAoByJ,YAAazC,EAAS0C,QAASlB,EAAnD,WACE,SAAC,IAAD,CAAkBjG,UAAU,MAAMH,MAAOA,EAAzC,UACE,SAAC,IAAD,CAAKrC,QAAQ,OAAOqB,UAAS,eAAUoM,EAAc3M,OAAxB,QAA7B,UACE,SAAC,IAAD,CACEJ,UAAU,MACVC,IAAK8M,EAAcC,aACnBnM,SAAS,OACTC,UAAU,OACVzB,GAAI,CAAES,UAAW,aAAcmN,gBAAiB,iBAItD,SAAC,IAAD,CAAY5N,GAAI,CAAEM,SAAU,WAAYoB,SAAU,UAAWC,WAAY,EAAGjB,QAAS,IAAMkB,cAAe,OAAQpB,IAAK,GAAvH,UACE,6BAAQ,UAAC,IAAD,CAASa,MAAM,UAAf,UAA2B0G,EAAU/G,MAArC,IAA6C2L,EAAAA,GAAkB5E,EAAUpC,mBAEnF,SAAC,IAAD,CAAY3F,GAAI,CAAEM,SAAU,WAAYoB,SAAU,UAAWC,WAAY,EAAGjB,QAAS,IAAMkB,cAAe,OAAQG,OAAQ,EAAGC,MAAO,GAApI,UACE,6BAAQ,UAAC,IAAD,CAASX,MAAM,YAAf,cAA8B0G,EAAU+D,yBAIvD,CACC,OAAO,SAAC,IAAD,CAAU9L,GAAI,CAAEC,QAAS,OAAQwN,WAAY,SAAUpK,eAAgB,SAAUE,GAAI,SAArF,UACL,SAAC,IAAD,CAAK5C,UAAU,MAAMC,IAAKC,EAAAA,EAAAA,KAAA,cAAmBmK,EAAQ,IAAMhL,GAAI,CAAEI,MAAO,MAAOD,OAAQ,OAAQO,QAAS,OAG7G,C,wBC/Cc,SAASgJ,EAAT,GAAmF,IAArDC,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,QAASiE,EAAgC,EAAhCA,aAAc1L,EAAkB,EAAlBA,SAC7E,OAAQwH,EAAYC,EAAQzH,GAAa0L,EAAeA,EAAa1L,GAAYA,CAClF,C,qaCED,EALwB,SAAC,GAAD,IAAGb,EAAH,EAAGA,UAAc2C,GAAjB,mBACtB,SAACF,EAAA,GAAD,gBAAkBtB,UAAU,OAAUwB,GAAtC,IAA6C3C,UAAWA,EAAxD,UACE,SAACiE,EAAA,EAAD,CAAK5E,UAAU,OAAOX,GAAI,CAAE8N,OAAQ,QAApC,UAA8C,SAAC,IAAD,CAAiBC,KAAMC,EAAAA,UAFjD,E,WCQT,SAASC,EAAT,GAAiE,IAAxCC,EAAuC,EAAvCA,OACtC,OAAO,SAACC,EAAD,CAAkBnO,GAAI,CAAEoO,EAAG,GAA3B,SACJF,EAAO1K,KAAI,SAAC6K,EAAOxD,GAAR,OAAc,SAACyD,EAAD,CAAsBD,MAAOA,EAAO1N,UAAW4N,EAAAA,IAA5B1D,EAAjC,KAEf,CAED,SAASyD,EAAT,GAAsG,IAA9ED,EAA6E,EAA7EA,MAAO1N,EAAsE,EAAtEA,UAC7B,GAA0B8G,EAAAA,EAAAA,YAAWG,EAAAA,GAA7BxC,EAAR,EAAQA,KAAMoJ,EAAd,EAAcA,QAEd,KADgBtJ,EAAAA,EAAAA,UAAQ,2CAAMmJ,QAAN,IAAMA,GAAN,UAAMA,EAAOI,eAAb,aAAM,OAAAJ,EAAiBjJ,UAAvB,WAAsC,CAACiJ,EAAOjJ,IACxD,OAAO,KACrB,GAAI,SAAUiJ,EAAO,CACnB,IAAMhI,EAAOjB,EAAKkB,IAAI+H,EAAMhI,MAC5B,GAAIA,EAAKqI,QAAS,OAAO,KACzB,GAAIF,EAAS,CACX,IAAMG,EAAUH,EAAQlI,IAAI+H,EAAMhI,MAC5BuI,EAAWD,EAAQD,QAAU,EAAIC,EAAQjL,MAC/C,OAAO,SAACmL,EAAD,CAAkBxI,KAAMA,EAAMuI,SAAUA,EAAUE,OAAQT,EAAMU,WAAYpO,UAAWA,GAC/F,CACI,OAAO,SAACkO,EAAD,CAAkBxI,KAAMA,EAAMyI,OAAQT,EAAMU,WAAYpO,UAAWA,GAChF,CACD,OAAO,SAACqO,EAAD,CAAmBX,MAAOA,EAAO1N,UAAWA,GACpD,CAEM,SAASqO,EAAT,GAAgH,IAAD,EAAlFX,EAAkF,EAAlFA,MAAO1N,EAA2E,EAA3EA,UACjCyE,GAASqC,EAAAA,EAAAA,YAAWG,EAAAA,GAApBxC,KACF6J,GAAIC,EAAAA,EAAAA,IAAWb,EAAM3K,MAAO0B,GAC5B/C,GAAU6M,EAAAA,EAAAA,IAAWb,EAAMhM,QAAS+C,GACpC+J,EAAOd,EAAMc,OAAQ,0BAAOd,EAAMc,OAClCL,EAAST,EAAMU,aAAc,0BAAOV,EAAMU,aAChD,OAAO,UAACxJ,EAAA,EAAD,CAAKnF,MAAM,OAAOJ,GAAI,CAAEC,QAAS,OAAQoD,eAAgB,gBAAiB2C,IAAK,GAAKrF,UAAWA,EAA/F,WACL,UAACmF,EAAA,EAAD,CAAYzE,MAAK,UAAKgB,EAAL,SAAqBrC,GAAI,CAAEC,QAAS,OAAQ+F,IAAK,EAAGyH,WAAY,UAAjF,UAA8F0B,EAAML,MACpG,UAAChJ,EAAA,EAAD,WAA2B,kBAANmJ,EAAP,UAAwBA,EAAEG,eAA1B,aAAwB,OAAAH,EAAYZ,EAAMgB,OAASJ,EAAGZ,EAAM1H,UAE7E,CAEM,SAASkI,EAAT,GAAiM,IAArKxI,EAAoK,EAApKA,KAAMuI,EAA8J,EAA9JA,SAAUE,EAAoJ,EAApJA,OAAQnO,EAA4I,EAA5IA,UAAW2O,EAAiI,EAAjIA,UAC5DlK,GAASqC,EAAAA,EAAAA,YAAWG,EAAAA,GAApBxC,KACAmK,GAAmB9H,EAAAA,EAAAA,YAAW+H,EAAAA,GAA9BD,eACFrI,GAAUuB,EAAAA,EAAAA,cAAY,kBAAM8G,EAAenK,EAAMiB,EAA3B,GAAkC,CAACkJ,EAAgBnK,EAAMiB,IAErF,GAAIA,EAAKqI,QAAS,OAAO,KAEzBI,EAASA,IAAU,0BAAOA,IAC1B,IAAMf,EAAO1H,EAAKG,KAAK9G,KAAOuC,EAAAA,EAASoE,EAAKG,KAAK9G,KAC3C+P,EAAYpJ,EAAKG,KAAK9G,IAAMsD,EAAAA,GAAAA,IAAWqD,EAAKG,KAAK9G,KAAO,GACxDgQ,EAAarJ,EAAKG,KAAKkJ,WACvBC,EAAmBtJ,EAAKuJ,QAC1BC,EAAW,GACf,QAAiBjJ,IAAbgI,EAAwB,CAC1B,IAAMkB,EAAOzJ,EAAK3C,MAAQkL,EAC1BiB,GAAW,6BAAOnJ,EAAAA,EAAAA,IAAYkI,EAAUvI,EAAKM,MAAOmJ,EAAO,MAAUA,GAAQ,MAAS,UAAC,IAAD,CAAWzO,MAAOyO,EAAO,EAAI,UAAY,QAAzC,cAAoDA,EAAO,EAAI,IAAM,IAAIpJ,EAAAA,EAAAA,IAAYoJ,EAAMzJ,EAAKM,SAAqB,KAC5M,MAAMkJ,GAAWnJ,EAAAA,EAAAA,IAAYL,EAAK3C,MAAO2C,EAAKM,MAE/C,IAAMoJ,IAAuB1J,EAAKuJ,UAAW,SAAC,EAAD,CAAiB1I,QAASA,EAAS5E,OAAO,SAACwD,EAAA,EAAD,WAAY,UAAC,EAAAvD,SAAD,CAAUH,UAAU,SAAC8G,EAAA,EAAD,CAAU7G,QAAQ,cAAcjC,MAAO,IAAKD,OAAQ,KAAxE,UAChG6P,EAAAA,GAAAA,SAAyB3J,EAAKG,KAAKnE,WAAmB,UAACkD,EAAA,EAAD,CAAKvF,GAAI,CAAEC,QAAS,cAAe+F,IAAK,EAAGiK,GAAI,GAA/C,WACrD,SAAC1K,EAAA,EAAD,WAAK,SAAC2K,EAAA,EAAD,CAAqBC,SAAU9J,EAAKG,KAAKnE,QAA2B+N,QAAS/J,EAAKG,KAAK6J,gBAC5F,SAACC,EAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,QAE1C,0BAAOb,WAET,OAAO,UAACpK,EAAA,EAAD,CAAKnF,MAAM,OAAOJ,GAAI,CAAEC,QAAS,OAAQoD,eAAgB,gBAAiB2C,IAAK,EAAGyK,UAAWnB,EAAY,iCAA8B1I,GAAajG,UAAWA,EAA/J,WACL,UAACmF,EAAA,EAAD,CAAYzE,MAAK,UAAKgF,EAAKG,KAAKnE,QAAf,SAA+BrC,GAAI,CAAEC,QAAS,OAAQ+F,IAAK,EAAGyH,WAAY,UAA3F,YAA0GiC,IAAc,SAACgB,EAAA,EAAD,IAAY3C,EAAM0B,EAAWX,MACrJ,UAACvJ,EAAA,EAAD,CAAKvF,GAAI,CAAEC,QAAS,OAAQ+F,IAAK,EAAGyH,WAAY,UAAhD,WACE,SAAC3H,EAAA,EAAD,CAAY6K,QAAM,EAAlB,SAAoBd,IACnBE,OAGN,CAMM,IAAM5B,GAAmBnK,EAAAA,EAAAA,IAAO4M,EAAAA,EAAP5M,EAAoC,gBAAGK,EAAH,EAAGA,MAAH,IAAUwM,MAAAA,OAAV,MAAkB,cAAlB,MAAiCC,KAAAA,OAAjC,MAAwC,gBAAxC,MAAyDC,aAAAA,OAAzD,MAAwE,OAAxE,QAAsF,CACxJC,aAAc3M,EAAM4M,MAAMD,aAC1BE,SAAU,SACVC,OAAQ,EACR,wCAAyC,CACvCzM,gBAAkBL,EAAME,QAAQsM,GAAwBE,IAE1D,uCAAwC,CACtCrM,gBAAkBL,EAAME,QAAQuM,GAAuBC,IARS,G,0PC1ErD,SAASK,EAAT,GAA2G,IAAnFC,EAAkF,EAAlFA,SAAU3N,EAAwE,EAAxEA,MAAO4N,EAAiE,EAAjEA,SAAUC,EAAuD,EAAvDA,UAAWC,EAA4C,EAA5CA,YAAgBvN,GAA4B,YAC/GwN,GAAMC,EAAAA,EAAAA,GAAe,MAArBD,EACR,OAAO,UAAC,IAAD,CAAKxR,QAAQ,OAAOwN,WAAW,SAASzH,IAAK,EAA7C,WACL,SAAC,IAAD,CAAOyL,EAAGA,EAAGE,QAASF,EAAE,UAAxB,wBACA,UAAC,KAAD,kBAAiBxN,GAAjB,eACE,SAAC,IAAD,CAAgB3B,OAAO,SAAC,IAAD,CAAOmP,EAAGA,EAAGE,QAASF,EAAE,WAAD,OAAY/N,IAAnC,SAAqD,CAAEA,MAAO+N,EAAE,WAAD,OAAY/N,OAAlG,SACG2N,EAAS7N,KAAI,SAAA9D,GAAG,OACf,SAAC,IAAD,CAAoBkS,SAAUlO,IAAUhE,EAAKmS,SAAUnO,IAAUhE,EAAKwH,QAAS,kBAAMoK,EAAS5R,EAAf,EAA/E,SAAqG+R,EAAE,WAAD,OAAY/R,KAAnGA,EADA,OAGnB,SAAC,IAAD,CAAQwH,QAAS,kBAAMsK,GAAaD,EAAnB,EAA+BO,WAAW,SAAC,IAAD,CAAiB/D,KAAMwD,EAAYQ,EAAAA,IAAsBC,EAAAA,IAAgB1Q,UAAU,UAA9I,SACGiQ,GAAY,SAAC,IAAD,CAAOE,EAAGA,EAAGE,QAAQ,YAArB,wBAAsD,SAAC,IAAD,CAAOF,EAAGA,EAAGE,QAAQ,aAArB,gCAI1E,C,mHCxBYM,EAAW,kBAAM,SAAC,IAAD,CAAiBlE,KAAMmE,EAAAA,KAA7B,EACXC,EAAe,SAAC,GAAD,IAAG7O,EAAH,EAAGA,MAAH,IAAUsJ,QAAAA,OAAV,gBAC1B,SAAC,IAAD,CAAYvL,MAAOuL,EAAU,oBAAiBhG,EAAWjG,UAAU,OAAnE,SACG2C,GAAQ,OAAI8O,MAAM9O,GAAO+O,QAAQ7O,KAAI,SAAC+F,EAAGsB,GAAJ,OAAU,SAACoH,EAAD,GAAepH,EAAzB,IAAkC,MAFhD,C,8JC4B5B,GAzBiC7G,EAAAA,EAAAA,IAAOsO,EAAAA,EAAc,CACpDC,kBAAmB,SAACC,GAAD,MAAmB,cAATA,GAAiC,kBAATA,CAAlC,GADYxO,EAEG,gBAAGK,EAAH,EAAGA,MAAH,IAAUoO,UAAAA,OAAV,MAAsB,YAAtB,MAAmCC,cAAAA,OAAnC,MAAmD,UAAnD,QAAoE,CACtG,IAAK,CACHhO,gBAAiBL,EAAME,QAAQkO,GAAWE,KAC1CtR,MAAOgD,EAAME,QAAQkO,GAAWG,cAElC,UAAW,CACTlO,gBAAiBL,EAAME,QAAQkO,GAAW3B,MAE5C,iBAAkB,CAChBpM,gBAAiBL,EAAME,QAAQmO,GAAeC,KAC9CtR,MAAOgD,EAAME,QAAQmO,GAAeE,cAEtC,uBAAwB,CACtBlO,gBAAiBL,EAAME,QAAQmO,GAAe5B,MAEhD,iBAAkB,CAChBpM,gBAAiBL,EAAME,QAAQkO,GAAW3B,MAE5C,8BAA+B,CAC7BpM,gBAAiBL,EAAME,QAAQmO,GAAe5B,MAnBd,I,6CCD9B+B,GAAiBC,EAAAA,EAAAA,IAAkB,OAAIC,EAAAA,IAC9B,SAASC,EAAT,GAA2E,IAAlDtP,EAAiD,EAAjDA,MAAO4N,EAA0C,EAA1CA,SAAarN,GAA6B,YACvF,OAAO,SAACgP,EAAA,GAAD,gBAAmBC,WAAS,EAACxP,MAAOA,GAAWO,GAA/C,aACJ8O,EAAAA,EAAAA,KAAgB,SAAA5R,GAAG,OAAI,SAAC,EAAD,CAAoCuC,MAAOvC,EAAKuR,cAAevR,EAAK+F,QAAS,kBAAMoK,EAASuB,EAAenP,EAAOvC,GAArC,EAA7E,UACtB,SAACoE,EAAA,EAAD,CAAKvF,GAAI,CAAE0B,SAAU,MAAOC,WAAY,GAAxC,SAA8CM,EAAAA,EAASd,MADFA,EAAnC,MAIvB,C,gMCPKgS,GAAoBL,EAAAA,EAAAA,IAAkB,OAAIM,EAAAA,KACjC,SAASC,EAAT,GAAyE,IAAjD3P,EAAgD,EAAhDA,MAAO4N,EAAyC,EAAzCA,SAAarN,GAA4B,YACrF,OAAO,SAAC,KAAD,gBAAwBiP,WAAS,EAACxP,MAAOA,GAAWO,GAApD,aACJmP,EAAAA,GAAAA,KAAsB,SAAAE,GAAE,aAAI,SAAC,IAAD,CAAuB5P,MAAO4P,EAAIpM,QAAS,kBAAMoK,EAAS6B,EAAkBzP,EAAO4P,GAAxC,EAA3C,UAC3B,SAAC,IAAD,CAAS1S,IAAG,UAAEC,EAAAA,EAAAA,mBAAF,aAAE,EAAqByS,GAAK/G,KAAM,KADA+G,EAAvB,MAI5B,C,qNCHc,SAAS5I,EAAT,GAA6D,IAAnC9F,EAAkC,EAAlCA,SACjCC,GAASC,EAAAA,EAAAA,GAAUF,GACnBG,GAAclF,EAAAA,EAAAA,IAAW,kBAAY,OAANgF,QAAM,IAANA,OAAA,EAAAA,EAAQnF,MAAOsF,EAAAA,EAAAA,IAAgBH,EAAOnF,IAA5C,GAAkD,QAACmF,QAAD,IAACA,OAAD,EAACA,EAAQnF,MACpFuF,GAASC,EAAAA,EAAAA,UAAQ,kBAAMH,GAAeF,IAAUM,EAAAA,EAAAA,IAAc,CAACJ,EAAYK,MAAMC,EAAAA,EAAAA,IAAiBR,IAAjF,GAA4F,CAACE,EAAaF,IACjI,IAAKA,IAAWE,IAAgBE,EAAQ,OAAO,KAE/C,IAAMsO,GAAc,UAAC,IAAD,YAClB,SAACC,EAAD,CAAgBnN,KAAMpB,EAAOqB,IAAIC,EAAAA,GAAAA,OAAAA,SACjC,SAACiN,EAAD,CAAgBnN,KAAMpB,EAAOqB,IAAIC,EAAAA,GAAAA,OAAAA,UAGnC,OAAO,UAAC,IAAD,CAAUvG,GAAI,CAAEG,OAAQ,OAAQqB,SAAU,IAAKlB,SAAU,WAAYL,QAAS,OAAQC,cAAe,UAArG,WACL,SAAC,IAAD,CAAKD,QAAQ,OAAOC,cAAc,SAASuF,aAAa,WAAWnE,UAAS,eAAUyD,EAAYhE,OAAtB,QAA5E,UACE,SAAC,IAAD,CAAmB4B,MAAOoC,EAAa0O,SAAUF,EAAjD,UACE,SAAC,IAAD,CACE5S,UAAU,MACVC,IAAKmE,EAAYW,OAAOb,EAAOc,WAC/BnE,SAAS,OACTC,UAAU,OACVzB,GAAI,CAAE4F,GAAI,eAIhB,SAAC,IAAD,CAAY5F,GAAI,CAAEM,SAAU,WAAYoB,SAAU,UAAWC,WAAY,EAAGjB,QAAS,IAAMkB,cAAe,QAA1G,UACE,6BAAQ,SAAC,IAAD,CAASP,MAAM,UAAf,SAA0B2D,EAAAA,EAAAA,eAA2BH,SAE9DE,EAAYmB,gBAAiB,SAAC,IAAD,CAAYlG,GAAI,CAAEM,SAAU,WAAYoB,SAAU,UAAWC,WAAY,EAAGjB,QAAS,IAAMkB,cAAe,OAAQG,OAAQ,EAAGC,MAAO,GAApI,UAC5B,6BAAQ,UAAC,IAAD,CAASX,MAAM,YAAf,cAA6BwD,EAAOsB,oBAGjD,CACD,SAASqN,EAAT,GAA0D,IAAhCnN,EAA+B,EAA/BA,KACxB,IAAKA,EAAKG,KAAK9G,IAAK,OAAO,KAC3B,IAAM+G,GAAMC,EAAAA,EAAAA,IAAYL,EAAK3C,MAAO2C,EAAKM,KAAON,EAAKM,UAAWC,EAAJ,GAC5D,OAAO,UAAC,IAAD,WAAa3E,EAAAA,EAASoE,EAAKG,KAAK9G,KAAhC,IAAuC+G,IAC/C,C,yICrCc,SAASiN,EAAT,GAAiE,IAApC/Q,EAAmC,EAAnCA,MAAO8Q,EAA4B,EAA5BA,SAAUtR,EAAkB,EAAlBA,SACrDG,GAAQ,UAAC,EAAAC,SAAD,CAAUH,UAAU,SAAC,IAAD,CAAUC,QAAQ,OAAOjC,MAAO,MAApD,WACZ,UAAC,IAAD,YAAY,SAAC,IAAD,CAASQ,IAAKC,EAAAA,EAAAA,YAAmB8B,EAAMgR,cAAnD,IAAoEhR,EAAMmB,QACzE2P,KAEH,OAAO,SAAC,IAAD,CAAkBhR,UAAU,MAAMH,MAAOA,EAAOI,oBAAkB,EAAlE,SACJP,GAEJ,C,+HCRYqN,GAAqBoE,EAAAA,EAAAA,eAAc,CAAErE,eAAgB,WAAS,EAAEsE,YAAa,WAAS,EAAEC,aAAc,WAAS,IAErH,SAASC,EAAT,GAAsE,IAAxC5R,EAAuC,EAAvCA,SACnC,GAAgC6R,EAAAA,EAAAA,KAAhC,eAAOC,EAAP,KAAaC,EAAb,KAAqBC,EAArB,KACA,GAAiCC,EAAAA,EAAAA,UAAS,MAACxN,OAAWA,IAAtD,iCAAQxB,EAAR,KAAciB,EAAd,KAAqBgO,EAArB,KACM9E,GAAiB9G,EAAAA,EAAAA,cAAY,SAACrD,EAAeiB,GAC7CjB,GAAQiB,EAAM6N,IACbC,IACLE,EAAS,CAACjP,EAAMiB,GACjB,GAAE,CAAC6N,EAAQC,IACZ,OAAO,SAAC3E,EAAmB8E,SAApB,CAA6B5Q,MAAO,CAAE6L,eAAAA,EAAgBnK,KAAAA,EAAMiB,KAAAA,EAAMkO,UAAWN,EAAMJ,YAAaK,EAAQJ,aAAcK,GAAtH,SAAmIhS,GAC3I,C,2MCbKqS,EAAK,SAACC,GAAD,OAAoB,SAAC,IAAD,CAAWC,GAAG,yBAAyBC,MAAOF,GAAlE,EACLG,EAAM,SAACH,GAAD,OAAoB,SAAC,IAAD,CAAWC,GAAG,qBAAqBC,MAAOF,GAA9D,EAUNI,EAAWC,EAAAA,GAAAA,WAAA,UAAO/B,EAAAA,EAAAA,KAAgB,SAAA5R,GAAG,OAAI4T,EAAAA,GAAM5T,EAAV,MAGrC6T,GAAUC,EAAAA,EAAAA,IAAkB/T,EAAAA,IAAoB,SAAAgU,GAAC,MAAI,CAAC,GAAD,OAAIA,EAAJ,UAAcC,EAAAA,EAAAA,IAAUJ,EAAAA,GAAAA,IAAW,GAAGK,EAAAA,EAAAA,IAAQ,MAAlD,IAEjDC,EAA+B,CACnCvR,KAAM0Q,EAAG,yBACTc,KAAMd,EAAG,yBACTzG,MAAM,4BAAO9L,EAAAA,EAAAA,MAAP,IAAwBA,EAAAA,EAAAA,IAAxB,IAAuCA,EAAAA,EAAAA,KAAvC,IAAuDA,EAAAA,EAAAA,MAAvD,IAAwEA,EAAAA,EAAAA,KAAxE,IAAwFA,EAAAA,EAAAA,QAAxF,SACNwM,QAAS,SAACrJ,GAAD,OAAoF,IAAlE2N,EAAAA,EAAAA,QAAmB,SAAAmC,GAAC,OAAI9P,EAAKkB,IAAIyO,EAAAA,GAAMG,IAAIxR,OAAS,CAAhC,IAAmCG,MAAzE,EACT0R,SAAU,CAAC,CACTC,UAAU,EACVtH,OAAQd,OAAOC,OAAO2H,GAASxR,KAAI,SAAA6C,GAAI,MAAK,CAAEA,KAAAA,EAAP,OAKrCoP,GAASN,EAAAA,EAAAA,IAAUN,EAAU,GAAGM,EAAAA,EAAAA,IAAUJ,EAAAA,GAAAA,KAAY,GAAGK,EAAAA,EAAAA,IAAQ,OACjEM,EAA4B,CAChC5R,KAAM0Q,EAAG,sBACTc,KAAMd,EAAG,sBACTzG,MAAM,4BAAO9L,EAAAA,EAAAA,KAAP,IAAuBA,EAAAA,EAAAA,QAC7BwM,QAAS,SAACrJ,GAAD,OAAkBA,EAAKkB,IAAIyO,EAAAA,GAAAA,MAAYrR,OAAS,GAAK0B,EAAKkB,IAAIuO,GAAUnR,OAAS,CAAjF,EACT6R,SAAU,CAAC,CACTC,UAAU,EACVtH,OAAQ,CAAC,CACPiB,MAAMwG,EAAAA,EAAAA,IAAG,uBACTjS,OAAQ,GACRiD,KAAM,KACL,CACDN,KAAMoP,OAMNG,GAAST,EAAAA,EAAAA,IAAUN,EAAU,GAAGM,EAAAA,EAAAA,IAAUJ,EAAAA,GAAAA,MAAa,GAAGK,EAAAA,EAAAA,IAAQ,OAClES,EAA6B,CACjC/R,KAAM0Q,EAAG,sBACTc,KAAMd,EAAG,sBACTzG,MAAM,4BAAO9L,EAAAA,EAAAA,MAAP,IAAwBA,EAAAA,EAAAA,SAC9BwM,QAAS,SAACrJ,GAAD,OAAkBA,EAAKkB,IAAIyO,EAAAA,GAAAA,OAAarR,OAAS,GAAK0B,EAAKkB,IAAIuO,GAAUnR,OAAS,CAAlF,EACT6R,SAAU,CAAC,CACTC,UAAU,EACVtH,OAAQ,CAAC,CACPiB,MAAMwG,EAAAA,EAAAA,IAAG,uBACTjS,OAAQ,GACRiD,KAAM,KACL,CACDN,KAAMuP,OAMNE,EAAa,CAAC,YAAa,iBAC3BC,GAASC,EAAAA,EAAAA,IAAaF,GACtBG,GAASd,EAAAA,EAAAA,IAAUN,EAAU,GAAGM,EAAAA,EAAAA,IAAUJ,EAAAA,GAAAA,KAAY,GAAGmB,EAAAA,EAAAA,IAAMH,EAAQ,MAAMX,EAAAA,EAAAA,IAAQ,QACrFe,EAA4B,CAChCrS,KAAM0Q,EAAG,sBACTc,KAAMd,EAAG,sBACTzG,MAAM,4BAAO9L,EAAAA,EAAAA,KAAP,IAAuBA,EAAAA,EAAAA,QAC7BwM,QAAS,SAACrJ,GAAD,OAAkBA,EAAKkB,IAAIyO,EAAAA,GAAAA,MAAYrR,OAAS,GAAK0B,EAAKkB,IAAIuO,GAAUnR,OAAS,CAAjF,EACT6R,SAAU,CAAC,CACTC,UAAU,EACVtH,OAAQ,CAAC,CACPiB,MAAMwG,EAAAA,EAAAA,IAAG,0BACTjS,OAAQ,GACRiD,KAAM,OAEP,CACD6O,UAAU,EACVY,KAAMN,EACNpS,MAAOqS,EACPjS,KAAM8Q,EAAI,sBACVyB,OAAQ,CACN/T,MAAOkS,EAAG,sBACVzG,KAAM9L,EAAAA,EAAAA,MAERqU,OAAQ,CACNC,GAAI,CACFrI,OAAQ,CAAC,CACP7H,KAAM4P,SAQVO,EAA0B,CAC9B1S,KAAM0Q,EAAG,oBACTc,KAAMd,EAAG,oBACTzG,MAAM,4BAAO9L,EAAAA,EAAAA,QAAP,IAA0BA,EAAAA,EAAAA,WAChCwM,QAAS,SAACrJ,GAAD,OAAkBA,EAAKkB,IAAIyO,EAAAA,GAAAA,SAAerR,OAAS,GAAK0B,EAAKkB,IAAIuO,GAAUnR,OAAS,CAApF,EACT6R,SAAU,CAAC,CACTC,UAAU,EACVtH,OAAQ,CAAC,CACPiB,MAAMwG,EAAAA,EAAAA,IAAG,wBACTjS,OAAQ,GACRiD,KAAM,SAMN8P,GAAatB,EAAAA,EAAAA,IAAUN,EAAU,GAAGM,EAAAA,EAAAA,IAAUJ,EAAAA,GAAAA,MAAa,GAAGK,EAAAA,EAAAA,KAAS,OACvEsB,GAAavB,EAAAA,EAAAA,IAAUN,EAAU,GAAGM,EAAAA,EAAAA,IAAUJ,EAAAA,GAAAA,MAAa,GAAGK,EAAAA,EAAAA,IAAQ,MACtEuB,GAAWxB,EAAAA,EAAAA,IAAUN,EAAU,GAAGM,EAAAA,EAAAA,IAAUJ,EAAAA,GAAAA,MAAa,GAAGK,EAAAA,EAAAA,KAAS,OACrEwB,EAA6B,CACjC9S,KAAM0Q,EAAG,uBACTc,KAAMd,EAAG,uBACTzG,MAAM,4BAAO9L,EAAAA,EAAAA,MAAP,IAAwBA,EAAAA,EAAAA,SAC9BwM,QAAS,SAACrJ,GAAD,OAAkBA,EAAKkB,IAAIyO,EAAAA,GAAAA,OAAarR,OAAS,GAAK0B,EAAKkB,IAAIuO,GAAUnR,OAAS,CAAlF,EACT6R,SAAU,CAAC,CACTC,UAAU,EACVtH,OAAQ,CAAC,CACP7H,KAAMoQ,GACL,CACDpQ,KAAMqQ,GACL,CACDrQ,KAAMsQ,OAMNE,EAAa,CAAC,YAAa,gBAC3BC,GAASd,EAAAA,EAAAA,IAAaa,GACtBE,GAAgB5B,EAAAA,EAAAA,IAAUN,EAAU,GAAGM,EAAAA,EAAAA,IAAUJ,EAAAA,GAAAA,IAAW,GAAGK,EAAAA,EAAAA,IAAQ,OACvE4B,GAAa7B,EAAAA,EAAAA,IAAUN,EAAU,GAAGM,EAAAA,EAAAA,IAAUJ,EAAAA,GAAAA,IAAW,GAAGmB,EAAAA,EAAAA,IAAMY,EAAQ,MAAM1B,EAAAA,EAAAA,IAAQ,QACxF6B,GAAa9B,EAAAA,EAAAA,IAAUN,EAAU,GAAGM,EAAAA,EAAAA,IAAUJ,EAAAA,GAAAA,IAAW,GAAGmB,EAAAA,EAAAA,IAAMY,EAAQ,MAAM1B,EAAAA,EAAAA,KAAS,OACzF8B,EAA2B,CAC/BpT,KAAM0Q,EAAG,qBACTc,KAAMd,EAAG,qBACTzG,MAAM,4BAAO9L,EAAAA,EAAAA,IAAP,IAAsBA,EAAAA,EAAAA,OAC5BwM,QAAS,SAACrJ,GAAD,OAAkBA,EAAKkB,IAAIyO,EAAAA,GAAAA,KAAWrR,OAAS,GAAK0B,EAAKkB,IAAIuO,GAAUnR,OAAS,CAAhF,EACT6R,SAAU,CAAC,CACTC,UAAU,EACVrG,KAAMqF,EAAG,qBACTtG,OAAQ,CAAC,CACP7H,KAAM0Q,KAEP,CACDvB,UAAU,EACVY,KAAMS,EACNnT,MAAOoT,EACPT,OAAQ,CACN/T,MAAOkS,EAAG,qBACVzG,KAAM9L,EAAAA,EAAAA,KAER6B,MAAM6R,EAAAA,EAAAA,IAAG,qBACTW,OAAQ,CACNC,GAAI,CACFrI,OAAQ,CAAC,CACP7H,KAAM2Q,GACL,CACD3Q,KAAM4Q,GACL,CACD9H,MAAMgI,EAAAA,EAAAA,IAAI,YACVzT,MAAO,GACPiD,KAAM,WAQVyQ,EAAiB,CAAC,YAAa,uBAC/BC,GAAarB,EAAAA,EAAAA,IAAaoB,GAC1BE,EAAiB,CAAC,YAAa,uBAC/BC,GAAavB,EAAAA,EAAAA,IAAasB,GAC1BE,GAAgBrC,EAAAA,EAAAA,IAAUN,EAAU,GAAGM,EAAAA,EAAAA,IAAUJ,EAAAA,GAAAA,OAAc,EAAG,GAAI,CAAErV,IAAK,YAC7E+X,GAAgBtC,EAAAA,EAAAA,IAAUN,EAAU,GAAGM,EAAAA,EAAAA,IAAUJ,EAAAA,GAAAA,OAAc,GAAGmB,EAAAA,EAAAA,IAAMmB,EAAY,KAAM,GAAI,CAAE3X,IAAK,aACrGgY,GAAgBvC,EAAAA,EAAAA,IAAUN,EAAU,GAAGM,EAAAA,EAAAA,IAAUJ,EAAAA,GAAAA,OAAc,GAAGmB,EAAAA,EAAAA,IAAMqB,EAAY,KAAM,GAAI,CAAE7X,IAAK,aAsD9FiY,EAAgC,CAC3CtC,EACAK,EACAG,EACAM,EACAK,EACAI,EACAM,EA5DoC,CACpCpT,KAAM0Q,EAAG,0BACTc,KAAMd,EAAG,0BACTzG,MAAM,4BAAO9L,EAAAA,EAAAA,OAAP,IAAyBA,EAAAA,EAAAA,UAC/BwM,QAAS,SAACrJ,GAAD,OAAkBA,EAAKkB,IAAIyO,EAAAA,GAAAA,QAAcrR,OAAS,GAAK0B,EAAKkB,IAAIuO,GAAUnR,OAAS,CAAnF,EACT6R,SAAU,CAAC,CACTC,UAAU,EACVrG,KAAMqF,EAAG,0BACTtG,OAAQ,CAAC,CAAE7H,KAAMmR,KAChB,CACDhC,UAAU,EACVY,KAAMgB,EACN1T,MAAO2T,EACPhB,OAAQ,CACN/T,MAAOkS,EAAG,0BACVzG,KAAM9L,EAAAA,EAAAA,QAER6B,KAAM8Q,EAAI,8BACV0B,OAAQ,CACNC,GAAI,CACFrI,OAAQ,CAAC,CACP7H,KAAMoR,GACL,CACDtI,MAAMgI,EAAAA,EAAAA,IAAI,YACVzT,MAAO,EACPiD,KAAM,SAIX,CACD6O,UAAU,EACVY,KAAMkB,EACN5T,MAAO6T,EACPlB,OAAQ,CACN/T,MAAOkS,EAAG,0BACVzG,KAAM9L,EAAAA,EAAAA,QAER6B,KAAM8Q,EAAI,8BACV0B,OAAQ,CACNC,GAAI,CACFrI,OAAQ,CAAC,CACP7H,KAAMqR,GACL,CACDvI,MAAMgI,EAAAA,EAAAA,IAAI,YACVzT,MAAO,EACPiD,KAAM,YAmBHiR,GAAgBC,EAAAA,EAAAA,IAAa,CACxCC,QAAO,kBACF9C,GADC,IAEJ+C,KAAMtC,EACNuC,IAAKpC,EACLqC,YAAaxB,EACbyB,SAAUxB,EACVyB,OAAQxB,EACRyB,QAASrB,EACTsB,SAAUrB,EACVsB,cAAerB,EACfsB,QAAQC,EAAAA,EAAAA,KAAQ1D,EAAAA,EAAAA,IAAI0C,EAAeC,EAAeC,GAAgB,CAAEe,OAAO,MAE7EC,MAAO,CAELC,UAAW1C,I,2FCjRF2C,EAA+B,iBAAO,CACjDC,SAAUC,EAAAA,GAAAA,GACVvH,WAAW,EACXoC,YAAW,OAAKP,EAAAA,IAChBnS,SAAQ,OAAK8R,EAAAA,GACbgG,UAAW,EAL+B,C,yWC8BrC,SAASC,EAAT,GAAmI,IAAhGC,EAA+F,EAA/FA,KAAMC,EAAyF,EAAzFA,OAAQC,EAAiF,EAAjFA,SAAiF,IAAvEC,OAAAA,OAAuE,MAA9D,kBAAM,CAAN,EAA8D,MAAlDC,SAAAA,OAAkD,SACjIhI,GAAWnM,EAAAA,EAAAA,UAAQ,kBAAMmU,GAAQ,OAAOP,EAAAA,IAAqBA,EAAAA,GAAAA,MAAwB,EAAlE,GAAsE,CAACO,IACxF7R,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBF,SACR,GAA+BsB,EAAAA,EAAAA,GAAW,mBAAoB8P,EAAAA,GAA9D,eAAOU,EAAP,KAAcC,EAAd,KACQ5F,EAAwB2F,EAAxB3F,WAAY1S,EAAYqY,EAAZrY,QACZwQ,GAAMC,EAAAA,EAAAA,GAAe,CAAC,iBAAkB,kBAAxCD,EAER,GAA4B2C,EAAAA,EAAAA,UAAS/C,EAAS,IAA9C,eAAOmI,EAAP,KAAeC,EAAf,KACA,GAAkCrF,EAAAA,EAAAA,WAAS,GAA3C,eAAO7C,EAAP,KAAkBmI,EAAlB,KAEMC,GAAkB9Z,EAAAA,EAAAA,IAAW,kBAAMuI,EAAAA,GAAAA,MAAN,GAA6B,IAEhE,IAAoCwR,EAAAA,EAAAA,KAApC,iBAAOC,GAAP,MAAmBC,GAAnB,OACAC,EAAAA,EAAAA,YAAU,WAER,OAAOvS,EAAS8O,OAAO0D,WAAU,SAAAC,GAAC,OAAIA,EAAE7Y,SAAS,cAAgB0Y,IAA/B,GACnC,GAAE,CAACA,GAAetS,IAEnB,QAAoC4M,EAAAA,EAAAA,UAAS,IAA7C,iBAAO8F,GAAP,MAAmBC,GAAnB,MACMC,IAAqBC,EAAAA,EAAAA,kBAAiBH,IAEtCI,IAAcpV,EAAAA,EAAAA,UAAQ,kBAAMyU,IAAmBY,EAAAA,EAAAA,IAAqB/S,EAAUmS,EAAxD,GAA0E,CAACnS,EAAUmS,IAC3Ga,IAAgBtV,EAAAA,EAAAA,UAAQ,kBAAMyU,GAAmBE,KAAcY,EAAAA,EAAAA,IAAuBjT,EAAUmS,EAAxE,GAA0F,CAACE,GAAYrS,EAAUmS,IACzI1R,IAASC,EAAAA,EAAAA,GAAUV,GACnBkT,IAAwBxV,EAAAA,EAAAA,UAAQ,kBAAMyU,EAAkBgB,EAAAA,GAAAA,QAAwB,SAAAC,GAAI,OAAIxB,EAAO5R,EAASqT,MAAMvU,IAAIsU,GAAOjB,GAAgBmB,EAAAA,EAAAA,IAAsBF,EAAM3S,KAAjF,IAA8F,EAAlJ,GAAsJ,CAACT,EAAUS,GAAQ0R,EAAiBP,IAC1N2B,IAAmB7V,EAAAA,EAAAA,UAAQ,kBAAOoV,IAAeE,GACrDE,GACGtB,QAAO4B,EAAAA,EAAAA,GAAe,CAAE/Z,QAAAA,EAAS0S,WAAAA,EAAY3K,SAAU,MAAOlF,KAAMsW,IAAsBI,KAC1FS,MAAKC,EAAAA,EAAAA,GAAa1B,EAAQjI,EAAW+I,KACrCa,OACCT,GACGtB,QAAO4B,EAAAA,EAAAA,GAAe,CAAE/Z,QAAAA,EAAS0S,WAAAA,EAAY3K,SAAU,KAAMlF,KAAMsW,IAAsBI,KACzFS,MAAKC,EAAAA,EAAAA,GAAa1B,EAAQjI,EAAW+I,MAE1C,EAT6B,GAU/B,CAACrZ,EAAS0S,EAAY6F,EAAQjI,EAAW+I,GAAaE,GAAeE,GAAuBN,KAE9F,OAAKT,GACE,SAAC,IAAD,CAAc1F,KAAMgF,EAAM9E,QAAS+E,EAAQlZ,GAAI,CAAE,uBAAwB,CAAEqD,eAAgB,WAA3F,UACL,UAAC,IAAD,YACE,UAAC,IAAD,CAAarD,GAAI,CAAEuD,GAAI,EAAGtD,QAAS,OAAQwN,WAAY,SAAUzH,IAAK,EAAGwG,SAAU,QAAnF,WACE,SAAC,IAAD,CAAcxM,GAAI,CAAEG,OAAQ,QAAUmR,SAAU,SAAAqC,GAAU,OAAI4F,EAAc,CAAE5F,WAAAA,GAApB,EAAmCjQ,MAAOiQ,EAAYpH,KAAK,WACrH,SAAC,IAAD,CAAevM,GAAI,CAAEG,OAAQ,QAAUmR,SAAU,SAAArQ,GAAO,OAAIsY,EAAc,CAAEtY,QAAAA,GAApB,EAAgCyC,MAAOzC,EAASsL,KAAK,WAC7G,SAAC,IAAD,CAAK1G,SAAU,EAAf,UACE,SAAC,IAAD,CACEuV,WAAS,EACT1X,MAAOwW,GACP5I,SAAU,SAAC4D,GAAD,OAAyCiF,GAAcjF,EAAE3M,OAAO7E,MAAhE,EACV4I,MAAOmF,EAAE,iBACTlF,KAAK,QACLvM,GAAI,CAAEG,OAAQ,QACdkb,WAAY,CACVrb,GAAI,CAAEG,OAAQ,cAIpB,SAAC,IAAD,CAAcH,GAAI,CAAEG,OAAQ,QAC1BkR,SAAUA,EAAU3N,MAAO8V,EAAQlI,SAAUmI,EAC7ClI,UAAWA,EAAWC,YAAakI,KACrC,SAAC,IAAD,CAAaxS,QAASgS,QAExB,SAAC,IAAD,KACA,SAAC,aAAD,CAAsBxV,MAAO,CAAEmE,cAAUjB,GAAzC,UACE,SAAC,IAAD,WAAa,SAAC,KAAD,CAAMyD,WAAS,EAACE,QAAS,EAAGD,QAAS,CAAEG,GAAI,EAAG6Q,GAAI,EAAG9P,GAAI,GAAzD,SACVuP,GAAiBvX,KAAI,SAAAsD,GAAY,OAAI,SAAC,KAAD,CAAM0D,MAAI,EAAoBC,GAAI,EAAlC,UACpC,SAAC,IAAD,CAAkCnD,WAAS,EAACR,aAAcA,EAAcI,QAAS,WAAQgS,IAAkB,OAARC,QAAQ,IAARA,GAAAA,EAAWrS,EAAe,GAAzGA,IADgCA,EAApB,eA3Bb,IAkC9B,C,6FCpGc,SAASkB,IAAgE,IAAnDlB,EAAkD,uDAAJ,GACjF,GAAqBW,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBF,EAAR,EAAQA,SACR,GAAqC4M,EAAAA,EAAAA,UAAS5M,EAASqT,MAAMvU,IAAIQ,IAAjE,eAAOiB,EAAP,KAAkBwT,EAAlB,KAKA,OAJAxB,EAAAA,EAAAA,YAAU,kBAAMwB,EAAgB/T,EAASqT,MAAMvU,IAAIQ,GAAzC,GAAyD,CAACU,EAAUV,KAC9EiT,EAAAA,EAAAA,YAAU,kBACRjT,EAAeU,EAASqT,MAAMW,OAAO1U,GAAc,SAACkG,EAAGyO,EAAGxM,GAAP,MAAmB,WAANwM,GAAkBF,EAAgBtM,EAA/C,SAAqDrI,CADhG,GAER,CAACE,EAAcyU,EAAiB/T,IAC3BO,CACR,C,4HCqBc,SAASO,EAAoBxB,GAE1C,IAAQU,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBF,SAER,OAAOiB,EAAAA,EAAAA,cAAY,SAACiT,GAClB,GAAK5U,EAAL,CACA,IAAMiB,EAAYP,EAASqT,MAAMvU,IAAIQ,GACrC,GAAKiB,EACL,GAAI,SAAU2T,EAAQ,OAAQA,EAAOC,MACnC,IAAK,gBACH,IAAMC,EAAgB7T,EAAU6T,cACxBC,EAAmBH,EAAnBG,QAASnY,EAAUgY,EAAVhY,MACjB,GAAIkY,EAAcC,KAAanY,EAAO,MACtC8D,EAASqT,MAAMiB,IAAIhV,GAAnB,kBAAsCiB,GAAtC,IAAiD6T,eAAc,kBAAMA,GAAP,cAAuBC,EAAUnY,OAC/F,MAEF,IAAK,YACH,IAAQmY,EAAmBH,EAAnBG,QAASnY,EAAUgY,EAAVhY,MACXqY,GAAaC,EAAAA,EAAAA,IAAUjU,EAAUgU,YACvC,GAAIA,EAAWF,KAAanY,EAAO,MAC9BA,EACAqY,EAAWF,GAAWnY,SADRqY,EAAWF,GAE9BrU,EAASqT,MAAMiB,IAAIhV,GAAnB,kBAAsCiB,GAAtC,IAAiDgU,WAAAA,KACjD,MAEF,IAAK,aACH,IAAQF,EAAYH,EAAZG,QACFE,EAAahU,EAAUgU,kBACtBA,EAAWF,GAClBrU,EAASqT,MAAMiB,IAAIhV,GAAnB,kBAAsCiB,GAAtC,IAAiDgU,WAAAA,KACjD,MAEF,IAAK,kBACH,IAAQE,EAA6BP,EAA7BO,YAAaC,EAAgBR,EAAhBQ,YACfC,GAAkBH,EAAAA,EAAAA,IAAUjU,EAAUoU,iBAC5CA,EAAgBF,GAAeC,EAC/B1U,EAASqT,MAAMiB,IAAIhV,GAAnB,kBAAsCiB,GAAtC,IAAiDoU,gBAAAA,KACjD,MAEF,IAAK,OACH,IAAcC,EAAUrU,EAAhBgD,KACFA,GAAI,OAAOqR,GACTpR,EAAmB0Q,EAAnB1Q,MAAOqR,EAAYX,EAAZW,QACftR,EAAKC,GAASqR,EAEd7U,EAASqT,MAAMiB,IAAIhV,GAAnB,kBAAsCiB,GAAtC,IAAiDgD,KAAAA,UAGnDvD,EAASqT,MAAMiB,IAAIhV,GAAnB,kBAAsCiB,GAAc2T,GA3C7B,CA4C1B,GAAE,CAAC5U,EAAcU,GACnB,C,kFCjFc,SAASoS,IACtB,OAA6BxF,EAAAA,EAAAA,UAAS,CAAC,GAAvC,eAAOkI,EAAP,KAAmBC,EAAnB,KAEA,MAAO,CAACD,GADgB7T,EAAAA,EAAAA,cAAY,kBAAM8T,EAAO,CAAC,EAAd,GAAkB,IAEvD,C,kFCHc,SAASrU,EAAUV,GAChC,OAAuB4M,EAAAA,EAAAA,UAAS5M,EAASS,QAAzC,eAAOA,EAAP,KAAeuU,EAAf,KAEA,OADAzC,EAAAA,EAAAA,YAAU,kBAAMvS,EAAS8O,OAAOkF,OAAO,UAAU,kBAAMgB,EAAKhV,EAASS,OAApB,GAAvC,GAAqE,CAACT,EAAUgV,IACnFvU,CACR,C,kFCLc,SAASwU,IACtB,IAAMpY,GAAQqY,EAAAA,EAAAA,KACRC,GAAKC,EAAAA,EAAAA,GAAcvY,EAAMwY,YAAYC,GAAG,OACxCxB,GAAKsB,EAAAA,EAAAA,GAAcvY,EAAMwY,YAAYC,GAAG,OACxCtR,GAAKoR,EAAAA,EAAAA,GAAcvY,EAAMwY,YAAYC,GAAG,OAE9C,OADWF,EAAAA,EAAAA,GAAcvY,EAAMwY,YAAYC,GAAG,OAC/B,KACXtR,EAAW,KACX8P,EAAW,KACXqB,EAAW,KACR,IACR,C,8SCUc,SAAS7U,EAAYhB,GAAqK,IAApIiW,EAAmI,uDAAjG,EAAGC,EAA8F,uCAAtDC,EAAsD,uCACtM,GAAqBxV,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBF,EAAR,EAAQA,SACR,GAA8BoS,EAAAA,EAAAA,KAA9B,eAAOsD,EAAP,KAAgBC,EAAhB,KACMC,GAAkB/C,EAAAA,EAAAA,kBAAiB6C,GACnC9X,GAAOvF,EAAAA,EAAAA,IAAW,kBAAMwd,EAAgB7V,EAAUV,EAAciW,EAAyBC,EAAaC,EAApF,GAAqG,CAACG,EAAiBtW,EAAcU,EAAUuV,EAAyBC,EAAaC,IAM7M,OAJAlD,EAAAA,EAAAA,YAAU,kBACRjT,EAAeU,EAASqT,MAAMW,OAAO1U,EAAcqW,QAAcvW,CADzD,GAER,CAACE,EAAcqW,EAAY3V,IAEtBpC,CACR,UAEciY,EAAAA,EAAAA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,KAAAA,MAAf,WAA+B7V,EAA2BV,GAA1D,6GAA2FiW,EAA3F,+BAA6H,EAAGC,EAAhI,uBAAwKC,EAAxK,uBAEOnW,EAFP,oDAKOiW,GAA4BC,GAAgBC,EALnD,qBAMUK,EAAQ9V,EAAS+V,aAAazW,IANxC,yCAOsBwW,GAPtB,wBAS0CE,EAAYhW,EAAUV,EAAciW,EAAyBC,EAAaC,GATpH,uJASwI,CAAC,EATzI,kBASUpV,EATV,EASUA,SAAU4V,EATpB,EASoBA,WACb5V,GAAa4V,EAVpB,0DAYQC,GAAWC,EAAAA,EAAAA,IAAc9V,EAAUf,GAEnC1B,GAAOwY,EAAAA,EAAAA,IAAUF,GAAU,SAACG,EAAKC,GACrC,MAA6BL,EAAWK,GAApBC,GAApB,EAAQ3Y,MAAR,aACA,OAAO,kBAAKyY,GAAQE,EACrB,IACIhB,GAA4BC,GAAgBC,GAC/CzV,EAASwW,cAAclX,EAAc1B,GAnBzC,kBAoBSA,GApBT,oEAuBO,SAAeoY,EAAtB,iDAAO,OAAP,0BAAO,WAA2BhW,EAA2BV,GAAtD,uGAAuFiW,EAAvF,+BAAyH,EAAGC,EAA5H,uBAAoKC,EAApK,uBAEAnW,EAFA,oDAGCiB,EAAYP,EAASqT,MAAMvU,IAAIQ,GAHhC,kEAMyBmX,EAAkBzW,GAAU,EAAMuV,EAC9DhV,EACAkV,GAAkCzV,EAAS0W,QAAQ5X,IAAIyB,EAAU4C,gBAFpB,OAG5CqS,QAH4C,IAG5CA,EAAAA,EAAe5P,OAAOC,OAAOtF,EAAUoW,mBAAmB3a,KAAI,SAAA4a,GAAC,OAAI5W,EAASyF,KAAK3G,IAAI8X,EAAtB,IAA0BhF,QAAO,SAAAgF,GAAC,OAAIA,CAAJ,KAT/F,WAMCC,EAND,iEAYCZ,GAZD,UAYiB3W,EAAeuX,GAC/BxW,GAbD,UAa2Cf,EAAeuX,EAAgBjZ,MAb1E,UAeCkZ,QAAQC,IAAIF,EAAgBtW,UAAUgD,KAAKvH,IAA/B,yCAAmC,WAAOsa,GAAP,mFAC9CA,EAD8C,oDAE7CU,EAAQhX,EAASqT,MAAMvU,IAAIwX,GAFkB,iEAI1BG,EAAkBzW,GAAU,EAAO,GAAlB,QAAC,UACpCgX,GADmC,IAC5BtC,YAAW,UAAEnU,EAAUoU,gBAAgB2B,UAA5B,QAAmC,CAAC,IAC3DtW,EAAS0W,QAAQ5X,IAAIkY,EAAM7T,gBAC3ByC,OAAOC,OAAOmR,EAAML,mBAAmB3a,KAAI,SAAA4a,GAAC,OAAI5W,EAASyF,KAAK3G,IAAI8X,EAAtB,IAA0BhF,QAAO,SAAAgF,GAAC,OAAIA,CAAJ,KAP7B,UAI7CK,EAJ6C,0DASnDhB,EAAWK,GAAMW,EACjB5W,EAASiW,GAAMW,EAAWrZ,KAVyB,4CAAnC,wDAfb,iCA4BE,CAAEyC,SAAAA,EAAU4V,WAAAA,IA5Bd,6EAsCQQ,EAAAA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,KAAAA,MAAf,WAAiCzW,GAAjC,uHAA4DkX,EAA5D,gCAA+E3B,EAA/E,uBACEhV,EADF,uBAEElD,EAFF,uBAGEiI,EAHF,gCAM+B1E,EAAAA,GAAAA,IAAmBL,EAAUrI,IAAK8H,EAASS,QAN1E,UAMQE,EANR,2EAQ4BnD,EAAAA,EAAAA,IAAgBH,EAAOnF,KARnD,WAQQqF,EARR,2EAWuCC,EAAAA,EAAAA,iBAA6BmD,EAAewW,eAXnF,eAWQC,EAXR,OAaQC,EAAmBH,EAAa,WAEpC,MAA4C3Z,EAAYK,KAApC0Z,GAApB,EAAQ7e,SAAR,aACA,OAAO8e,EAAAA,EAAAA,IAAU,CAACD,EAAqBF,GACxC,CAJqC,GAI/B7Z,EAAYK,KAjBrB,UAmBmCrF,EAAAA,EAAAA,WAnBnC,eAmBQif,EAnBR,OAoBQC,GAAYF,EAAAA,EAAAA,IAAU,CAAC5W,EAAe/C,KAAMyZ,EAAkBG,IAC9DE,EAAe9M,MAAM+M,QAAQrS,GAAaA,EAAUtJ,KAAI,SAAA4a,GAAC,OAAIgB,EAAAA,EAAAA,IAAmBhB,EAAGrB,EAA1B,IAAsD,CAACjQ,GAChH1H,EAtBR,kBAuBO8Z,GAvBP,EAwBIG,EAAAA,EAAAA,IAAoBtX,EAAW2W,EAAYO,OAAYrY,IACvDvB,EAAAA,EAAAA,IAAiBR,GACjBoa,EACAza,EAAAA,GACAoT,EAAAA,IA5BJ,kBA8BS,CAAE7P,UAAAA,EAAWlD,OAAAA,EAAQsD,eAAAA,EAAgBpD,YAAAA,EAAaK,KAAAA,IA9B3D,oE,6FC9Fe,SAASN,IAA8C,IAApCwa,EAAmC,uDAAJ,GAC/D,GAAqB7X,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBF,EAAR,EAAQA,SACR,GAA4B4M,EAAAA,EAAAA,UAAS5M,EAAS0W,QAAQ5X,IAAIgZ,IAA1D,eAAOza,EAAP,KAAe0a,EAAf,KAKA,OAJAxF,EAAAA,EAAAA,YAAU,kBAAMwF,EAAU/X,EAAS0W,QAAQ5X,IAAIgZ,GAArC,GAAiD,CAAC9X,EAAU8X,KACtEvF,EAAAA,EAAAA,YAAU,kBACRuF,EAAW9X,EAAS0W,QAAQ1C,OAAO8D,GAAU,SAACtS,EAAGyO,EAAGxM,GAAP,MAAmB,WAANwM,GAAkB8D,EAAUtQ,EAAzC,SAA+CrI,CADpF,GAER,CAAC0Y,EAAUC,EAAW/X,IACjB3C,CACR,C,uJCLYiU,EAAoB,CAAC,MAAO,QAAS,SAAU,QAGrD,SAASyB,EAAqB/S,EAA2BmS,GAC9D,MAAO,CACL6F,IAAK,CACHC,SAAU,SAAC3B,GAAD,OAAQtW,EAASqT,MAAMvU,IAAIwX,GAAsB,EAAI,CAArD,EACV4B,WAAY,QAEd5b,KAAM,CACJ2b,SAAU,SAAC3B,GAAD,OAAQ6B,EAAAA,EAAAA,EAAA,yBAAwB7E,EAAAA,EAAAA,IAAsBgD,EAAItW,EAASS,UAAW2X,UAA9E,GAEZ5e,MAAO,CACLye,SAAU,SAAC3B,GACT,IAAM+B,EAAOrY,EAASqT,MAAMvU,IAAIwX,GAChC,OAAK+B,EACEA,EAAK7e,MAAQ6e,EAAKla,UADP,CAEnB,EACD+Z,WAAY,UAEd3e,OAAQ,CACN0e,SAAU,SAAC3B,GAAD,oBAAQnE,QAAR,IAAQA,GAAR,UAAQA,GAAkBmB,EAAAA,EAAAA,IAAsBgD,EAAItW,EAASS,gBAA7D,aAAQ,EAA+DlH,MAAvE,EACV2e,WAAY,SAGjB,CAGM,SAASjF,EAAuBjT,EAA2BmS,GAChE,MAAO,CACL1Y,QAAS,SAAC6c,EAAI1E,GAAL,aAAgBA,EAAOhY,SAAP,OAAgBuY,QAAhB,IAAgBA,GAAhB,UAAgBA,GAAkBmB,EAAAA,EAAAA,IAAsBgD,EAAItW,EAASS,gBAArE,aAAgB,EAA+D4E,WAA/F,EACT8G,WAAY,SAACmK,EAAI1E,GAAL,aAAgBA,EAAOhY,SAAP,OAAgBuY,QAAhB,IAAgBA,GAAhB,UAAgBA,GAAkBmB,EAAAA,EAAAA,IAAsBgD,EAAItW,EAASS,gBAArE,aAAgB,EAA+D0W,cAA/F,EACZ3V,SAAU,SAAC8U,EAAI1E,GAAL,OACPA,GAAWA,KAAY5R,EAAS8O,OAAOwJ,YAAhB,mBAAwChC,GAAM/U,EAAAA,IAAcC,SAAW,MAAQ,KAD/F,EAEVlF,KAAM,SAACga,EAAI1E,GAAL,OAAiBA,GAAWuG,EAAAA,EAAAA,EAAA,yBAAwBI,EAAAA,EAAAA,IAAkBjC,KAAOkC,cAAc5e,SAASgY,EAAO4G,cAA3G,EAET,C,kFCxCM,SAASlN,EAAqBmN,GACnC,OAAO,SAACC,EAAUjR,GAChB,IAAMkR,EAAMD,EAAIrc,OAChB,OAAIsc,IAAQF,EAAQpc,OAAe,CAACoL,GACxB,IAARkR,GAAaD,EAAI,KAAOjR,GAAU,OAAIgR,IACnC,OAAI,IAAIG,KAAIC,EAAAA,EAAAA,IAAUH,EAAKjR,IACnC,CACF,C,8FCHM,SAASiM,EAAqCoF,EAAgB/O,EAAoBgP,GACvF,SAASC,EAAKpC,EAAMqC,EAAMlP,EAAoBmP,GAC5C,IAAMC,EAAKD,EAAOjB,SAASrB,GACrBwC,EAAKF,EAAOjB,SAASgB,GAM3B,OAAQlP,GAAa,EAAI,IAJP,kBAAPoP,GAAiC,kBAAPC,EAC5BD,EAAGE,cAAcD,GAEfA,EAAiBD,EAE7B,CACD,OAAO,SAACvC,EAAMqC,GACZ,IAAKF,EAAQD,GAAS,OAAO,EAC7B,IAAMQ,EAAeP,EAAQD,GACzBxQ,EAAO0Q,EAAKpC,EAAGqC,EAAGlP,EAAWuP,GAGjC,OAFKhR,GAAQgR,EAAapB,YAAca,EAAQO,EAAapB,cAC3D5P,EAAO0Q,EAAKpC,EAAGqC,EAAGlP,EAAWgP,EAAQO,EAAapB,cAC7C5P,CACR,CACF,CAIM,SAASkL,EAAuC+F,EAAkCvG,GACvF,OAAO,SAACqD,GAAD,OAAYzQ,OAAO4T,QAAQD,GAAeE,OAAM,+BAAEC,EAAF,KAAaC,EAAb,YAA4B3G,EAAc0G,IAAqB1G,EAAc0G,GAAkBrD,EAAKsD,EAApG,GAAhD,CACR,C","sources":["Components/Artifact/ArtifactCardPico.tsx","Components/Artifact/ArtifactTooltip.tsx","Components/BootstrapTooltip.tsx","Components/Weapon/WeaponFullCard.tsx","Components/Character/CharacterCard.tsx","Components/Character/CharacterCardPico.tsx","Components/ConditionalWrapper.tsx","Components/QuestionTooltip.tsx","Components/FieldDisplay.tsx","Components/SortByButton.tsx","Components/StarDisplay.tsx","Components/SolidColoredToggleButton.tsx","Components/ToggleButton/ElementToggle.tsx","Components/ToggleButton/WeaponToggle.tsx","Components/Weapon/WeaponCardPico.tsx","Components/Weapon/WeaponNameTooltip.tsx","Context/FormulaDataContext.tsx","Data/Resonance.tsx","PageCharacter/CharacterDisplayState.tsx","PageCharacter/CharacterSelectionModal.tsx","ReactHooks/useCharacter.tsx","ReactHooks/useCharacterReducer.tsx","ReactHooks/useForceUpdate.tsx","ReactHooks/useGender.tsx","ReactHooks/useMediaQueryUp.tsx","ReactHooks/useTeamData.tsx","ReactHooks/useWeapon.tsx","Util/CharacterSort.ts","Util/MultiSelect.ts","Util/SortByFilters.ts"],"sourcesContent":["import { Box, Typography } from '@mui/material';\r\nimport Assets from '../../Assets/Assets';\r\nimport Artifact from '../../Data/Artifacts/Artifact';\r\nimport { ArtifactSheet } from '../../Data/Artifacts/ArtifactSheet';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { ICachedArtifact } from '../../Types/artifact';\r\nimport { allElementsWithPhy, SlotKey } from '../../Types/consts';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\nimport ArtifactTooltip from './ArtifactTooltip';\r\n\r\nexport default function ArtifactCardPico({ artifactObj: art, slotKey: key }: { artifactObj: ICachedArtifact | undefined, slotKey: SlotKey }) {\r\n  const artifactSheet = usePromise(() => art?.setKey && ArtifactSheet.get(art.setKey), [art?.setKey])\r\n  // Blank artifact slot icon\r\n  if (!art || !artifactSheet)\r\n    return <CardDark sx={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\r\n      <Box sx={{ width: \"100%\", pb: \"100%\", position: \"relative\", }}>\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            width: \"70%\", height: \"70%\",\r\n            left: \"50%\", top: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            opacity: 0.7\r\n          }}\r\n          component=\"img\"\r\n          src={Assets.slot[key]}\r\n        />\r\n      </Box>\r\n    </CardDark>\r\n\r\n  // Actual artifact icon + info\r\n  const { mainStatKey, rarity, level } = art\r\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\r\n  const color = element ?? \"secondary\"\r\n\r\n  return <ArtifactTooltip art={art}><CardDark sx={{ display: \"flex\", flexDirection: \"column\", position: \"relative\" }}>\r\n    <Box\r\n      component=\"img\"\r\n      className={`grad-${rarity}star`}\r\n      src={artifactSheet.slotIcons[key]}\r\n      maxWidth=\"100%\"\r\n      maxHeight=\"100%\"\r\n    />\r\n    <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", }}>\r\n      <strong><SqBadge sx={{ p: 0.5 }} color={Artifact.levelVariant(level)}><strong>+{level}</strong></SqBadge></strong>\r\n    </Typography>\r\n    <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", bottom: 0, right: 0 }}>\r\n      <SqBadge color={color} sx={{ p: 0.5 }}>{StatIcon[mainStatKey]}</SqBadge>\r\n    </Typography>\r\n  </CardDark></ArtifactTooltip>\r\n}\r\n","import { Box, Skeleton, Typography } from \"@mui/material\";\r\nimport { Suspense } from \"react\";\r\nimport Artifact from \"../../Data/Artifacts/Artifact\";\r\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\r\nimport KeyMap, { cacheValueString } from \"../../KeyMap\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport { ICachedArtifact, ICachedSubstat } from \"../../Types/artifact\";\r\nimport { clamp } from \"../../Util/Util\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport SqBadge from \"../SqBadge\";\r\nimport { StarsDisplay } from \"../StarDisplay\";\r\nimport StatIcon from \"../StatIcon\";\r\nimport { artifactSlotIcon } from \"./SlotNameWIthIcon\";\r\n\r\nexport default function ArtifactTooltip({ art, children }: { art: ICachedArtifact, children: JSX.Element }) {\r\n  const fallback = <Box>\r\n    <Skeleton variant=\"rectangular\" width={100} height={100} />\r\n  </Box>\r\n  const title = <Suspense fallback={fallback}>\r\n    <ArtifactData art={art} />\r\n  </Suspense>\r\n\r\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\r\n    {children}\r\n  </BootstrapTooltip>\r\n}\r\nfunction ArtifactData({ art }: { art: ICachedArtifact }) {\r\n  const sheet = usePromise(() => ArtifactSheet.get(art.setKey), [art.setKey])\r\n  const { slotKey, level, rarity, mainStatKey, substats } = art\r\n  const slotName = sheet?.getSlotName(slotKey)\r\n  const mainStatUnit = KeyMap.unit(mainStatKey)\r\n  const mainIcon = StatIcon[mainStatKey]\r\n  const mainVariant = KeyMap.getVariant(mainStatKey)\r\n  return <Box p={1}>\r\n    <Typography variant='h6'>{artifactSlotIcon(slotKey)} {slotName}</Typography>\r\n    <Typography variant=\"subtitle1\" color={`${mainVariant}.main`}>{mainIcon} {KeyMap.get(mainStatKey)} {cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, level) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</Typography>\r\n    <Typography variant=\"subtitle2\" sx={{ display: \"flex\", justifyContent: \"space-between\" }} ><StarsDisplay stars={rarity} /><SqBadge color={Artifact.levelVariant(level)}>+{level}</SqBadge> </Typography>\r\n    <Box py={1}>\r\n      {substats.map((stat: ICachedSubstat) => !!stat.value && <Typography key={stat.key} color={`roll${clamp(stat.rolls.length, 1, 6)}.main`}>\r\n        {StatIcon[stat.key]} {KeyMap.getStr(stat.key)} <strong>{`+${cacheValueString(stat.value, KeyMap.unit(stat.key))}${KeyMap.unit(stat.key)}`}</strong>\r\n      </Typography>)}\r\n    </Box>\r\n\r\n    <Typography color=\"success.main\">{sheet?.name}</Typography>\r\n  </Box>\r\n}\r\n","import { styled, Tooltip, tooltipClasses, TooltipProps } from \"@mui/material\";\r\n\r\nconst BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.arrow}`]: {\r\n    color: theme.palette.common.black,\r\n  },\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    maxWidth: 500,\r\n  },\r\n}));\r\nexport default BootstrapTooltip\r\n","import { Box, Typography } from '@mui/material';\r\nimport { useMemo } from 'react';\r\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\r\nimport { uiInput as input } from '../../Formula';\r\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\r\nimport { NodeDisplay } from '../../Formula/uiData';\r\nimport { valueString } from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport useWeapon from '../../ReactHooks/useWeapon';\r\nimport { ICachedWeapon } from '../../Types/weapon';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\n\r\nexport default function WeaponFullCard({ weaponId }: { weaponId: string }) {\r\n  const weapon = useWeapon(weaponId)\r\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n  return <CardDark>\r\n    <Box display=\"flex\" >\r\n      <Box flexShrink={1} maxWidth=\"35%\" display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`} >\r\n        <Box\r\n          component=\"img\"\r\n          src={weaponSheet.getImg(weapon.ascension)}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </Box>\r\n      <Box flexGrow={1} sx={{ p: 1 }}>\r\n        <Typography variant=\"body2\" gutterBottom><strong>{weaponSheet?.name}</strong></Typography>\r\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} gutterBottom>\r\n          <SqBadge color=\"primary\">Lv. {WeaponSheet.getLevelString(weapon as ICachedWeapon)}</SqBadge>\r\n          {weaponSheet.hasRefinement && <SqBadge color=\"info\">R{weapon.refinement}</SqBadge>}\r\n        </Typography>\r\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} >\r\n          <WeaponStat node={UIData.get(input.weapon.main)} />\r\n          <WeaponStat node={UIData.get(input.weapon.sub)} />\r\n        </Typography>\r\n\r\n      </Box>\r\n    </Box>\r\n  </CardDark>\r\n}\r\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\r\n  if (!node.info.key) return null\r\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\r\n  return <SqBadge color=\"secondary\">{StatIcon[node.info.key]} {val}</SqBadge>\r\n}\r\n","import { Favorite, FavoriteBorder } from '@mui/icons-material';\r\nimport { Box, CardActionArea, CardContent, Chip, Grid, IconButton, Skeleton, Typography } from '@mui/material';\r\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\r\nimport { ascensionMaxLevel } from '../../Data/LevelData';\r\nimport { DatabaseContext } from '../../Database/Database';\r\nimport { DataContext, dataContextObj, TeamData } from '../../Context/DataContext';\r\nimport { uiInput as input } from '../../Formula';\r\nimport KeyMap from '../../KeyMap';\r\nimport CharacterCardPico from './CharacterCardPico';\r\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\r\nimport useTeamData from '../../ReactHooks/useTeamData';\r\nimport { ICachedArtifact } from '../../Types/artifact';\r\nimport { allSlotKeys, CharacterKey, ElementKey, SlotKey } from '../../Types/consts';\r\nimport { range } from '../../Util/Util';\r\nimport ArtifactCardPico from '../Artifact/ArtifactCardPico';\r\nimport CardLight from '../Card/CardLight';\r\nimport ConditionalWrapper from '../ConditionalWrapper';\r\nimport { NodeFieldDisplay } from '../FieldDisplay';\r\nimport SqBadge from '../SqBadge';\r\nimport { StarsDisplay } from '../StarDisplay';\r\nimport StatIcon from '../StatIcon';\r\nimport WeaponCardPico from '../Weapon/WeaponCardPico';\r\nimport WeaponFullCard from '../Weapon/WeaponFullCard';\r\nimport { CharacterContext, CharacterContextObj } from '../../Context/CharacterContext';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\r\nimport useCharacter from '../../ReactHooks/useCharacter';\r\nimport useDBState from '../../ReactHooks/useDBState';\r\nimport { initCharMeta } from '../../Database/Data/StateData';\r\nimport { ICachedCharacter } from '../../Types/character';\r\nimport useGender from '../../ReactHooks/useGender';\r\n\r\ntype CharacterCardProps = {\r\n  characterKey: CharacterKey,\r\n  onClick?: (characterKey: CharacterKey) => void,\r\n  onClickHeader?: (characterKey: CharacterKey) => void,\r\n  onClickTeammate?: (characterKey: CharacterKey) => void,\r\n  artifactChildren?: Displayable,\r\n  weaponChildren?: Displayable,\r\n  characterChildren?: Displayable,\r\n  footer?: Displayable,\r\n  hideStats?: boolean\r\n  isTeammateCard?: boolean,\r\n}\r\nexport default function CharacterCard({ characterKey, artifactChildren, weaponChildren, characterChildren, onClick, onClickHeader, onClickTeammate, footer, hideStats, isTeammateCard }: CharacterCardProps) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { teamData: teamDataContext } = useContext(DataContext)\r\n  const teamData = useTeamData(teamDataContext ? \"\" : characterKey) ?? (teamDataContext as TeamData | undefined)\r\n  const character = useCharacter(characterKey)\r\n  const gender = useGender(database)\r\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const data = teamData?.[characterKey]?.target\r\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey), [characterKey, onClick])\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickHandler} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\r\n    [onClickHandler],\r\n  )\r\n\r\n  const characterContextObj: CharacterContextObj | undefined = useMemo(() => character && characterSheet && {\r\n    character, characterSheet, characterDispatch\r\n  }, [character, characterSheet, characterDispatch])\r\n  const dataContextObj: dataContextObj | undefined = useMemo(() => data && teamData && ({\r\n    data,\r\n    teamData,\r\n  }), [data, teamData])\r\n\r\n  const [{ favorite }, setCharMeta] = useDBState(`charMeta_${characterKey}`, initCharMeta)\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 350 }} />}>\r\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n      <Box sx={{ display: \"flex\", position: \"absolute\", zIndex: 2, opacity: 0.7 }}>\r\n        <IconButton sx={{ p: 0.5 }} onClick={_ => setCharMeta({ favorite: !favorite })}>\r\n          {favorite ? <Favorite /> : <FavoriteBorder />}\r\n        </IconButton>\r\n      </Box>\r\n      <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\r\n        {(character && dataContextObj && characterContextObj) ?\r\n          <ExistingCharacterCardContent\r\n            characterContextObj={characterContextObj}\r\n            dataContextObj={dataContextObj}\r\n            characterKey={characterKey}\r\n            onClick={onClick}\r\n            onClickHeader={onClickHeader}\r\n            isTeammateCard={isTeammateCard}\r\n            character={character}\r\n            onClickTeammate={onClickTeammate}\r\n            hideStats={hideStats}\r\n            weaponChildren={weaponChildren}\r\n            artifactChildren={artifactChildren}\r\n            characterChildren={characterChildren}\r\n          /> : <NewCharacterCardContent characterKey={characterKey} />}\r\n      </ConditionalWrapper>\r\n      {footer}\r\n    </CardLight>\r\n\r\n  </Suspense>\r\n}\r\n\r\ntype ExistingCharacterCardContentProps = {\r\n  characterContextObj: CharacterContextObj\r\n  dataContextObj: dataContextObj\r\n  characterKey: CharacterKey\r\n  onClick?: (characterKey: CharacterKey) => void\r\n  onClickHeader?: (characterKey: CharacterKey) => void\r\n  isTeammateCard?: boolean\r\n  character: ICachedCharacter\r\n  onClickTeammate?: (characterKey: CharacterKey) => void\r\n  hideStats?: boolean\r\n  weaponChildren?: Displayable\r\n  artifactChildren?: Displayable\r\n  characterChildren?: Displayable\r\n}\r\nfunction ExistingCharacterCardContent({ characterContextObj, dataContextObj, characterKey, onClick, onClickHeader, isTeammateCard, character, onClickTeammate, hideStats, weaponChildren, artifactChildren, characterChildren }: ExistingCharacterCardContentProps) {\r\n  return <CharacterContext.Provider value={characterContextObj}><DataContext.Provider value={dataContextObj}>\r\n    <Header characterKey={characterKey} onClick={!onClick ? onClickHeader : undefined} >\r\n      <HeaderContent />\r\n    </Header>\r\n    <CardContent sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 1, flexGrow: 1 }}>\r\n      <Artifacts />\r\n      {!isTeammateCard && <Grid container columns={4} spacing={0.75}>\r\n        <Grid item xs={1} height=\"100%\">\r\n          <WeaponCardPico weaponId={character.equippedWeapon} />\r\n        </Grid>\r\n        {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={character.team[i]} onClick={!onClick ? onClickTeammate : undefined} index={i} /></Grid>)}\r\n      </Grid>}\r\n      {isTeammateCard && <WeaponFullCard weaponId={character.equippedWeapon} />}\r\n      {!isTeammateCard && !hideStats && <Stats />}\r\n      {weaponChildren}\r\n      {artifactChildren}\r\n      {characterChildren}\r\n    </CardContent>\r\n  </DataContext.Provider></CharacterContext.Provider>\r\n}\r\n\r\nfunction NewCharacterCardContent({ characterKey }: { characterKey: CharacterKey }) {\r\n  return < >\r\n    <Header characterKey={characterKey} >\r\n      <HeaderContentNew characterKey={characterKey} />\r\n    </Header>\r\n    <CardContent sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 1, flexGrow: 1, height: \"100%\" }}>\r\n    </CardContent>\r\n  </>\r\n}\r\n\r\nfunction Header({ children, characterKey, onClick }: { children: JSX.Element, characterKey: CharacterKey, onClick?: (characterKey: CharacterKey) => void }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const gender = useGender(database)\r\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\r\n\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={() => characterKey && onClick?.(characterKey)} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\r\n    [onClick, characterKey],\r\n  )\r\n  if (!characterSheet) return null\r\n  return <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\r\n    <Box display=\"flex\"\r\n      position=\"relative\"\r\n      className={`grad-${characterSheet.rarity}star`}\r\n      sx={{\r\n        \"&::before\": {\r\n          content: '\"\"',\r\n          display: \"block\", position: \"absolute\",\r\n          left: 0, top: 0,\r\n          width: \"100%\", height: \"100%\",\r\n          opacity: 0.7,\r\n          backgroundImage: `url(${characterSheet.bannerImg})`, backgroundPosition: \"center\", backgroundSize: \"cover\",\r\n        }\r\n      }}\r\n      width=\"100%\" >\r\n      <Box flexShrink={1} sx={{ maxWidth: { xs: \"40%\", lg: \"40%\" } }} alignSelf=\"flex-end\" display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n        <Box\r\n          component=\"img\"\r\n          src={characterSheet.thumbImg}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          maxWidth={256}\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </Box>\r\n      <Box flexGrow={1} sx={{ py: 1, pr: 1 }} display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  </ConditionalWrapper>\r\n}\r\n\r\nfunction HeaderContent() {\r\n  const { characterSheet } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const characterEle = data.get(input.charEle).value as ElementKey\r\n  const characterLevel = data.get(input.lvl).value\r\n  const constellation = data.get(input.constellation).value\r\n  const ascension = data.get(input.asc).value\r\n  const autoBoost = data.get(input.bonus.auto).value\r\n  const skillBoost = data.get(input.bonus.skill).value\r\n  const burstBoost = data.get(input.bonus.burst).value\r\n\r\n  const tAuto = data.get(input.total.auto).value\r\n  const tSkill = data.get(input.total.skill).value\r\n  const tBurst = data.get(input.total.burst).value\r\n\r\n  return <>\r\n    <Chip label={<Typography variant=\"subtitle1\">{characterSheet.name}</Typography>} size=\"small\" color={characterEle} sx={{ opacity: 0.85 }} />\r\n    <Grid container spacing={1} flexWrap=\"nowrap\">\r\n      <Grid item sx={{ textShadow: \"0 0 5px gray\" }}>\r\n        <Typography component=\"span\" variant=\"h6\" whiteSpace=\"nowrap\" >Lv. {characterLevel}</Typography>\r\n        <Typography component=\"span\" variant=\"h6\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant=\"h6\"><SqBadge>C{constellation}</SqBadge></Typography>\r\n      </Grid>\r\n    </Grid>\r\n    <Grid container spacing={1} flexWrap=\"nowrap\">\r\n      <Grid item>\r\n        <Chip color={autoBoost ? \"info\" : \"secondary\"} label={<strong >{tAuto}</strong>} />\r\n      </Grid>\r\n      <Grid item>\r\n        <Chip color={skillBoost ? \"info\" : \"secondary\"} label={<strong >{tSkill}</strong>} />\r\n      </Grid>\r\n      <Grid item>\r\n        <Chip color={burstBoost ? \"info\" : \"secondary\"} label={<strong >{tBurst}</strong>} />\r\n      </Grid>\r\n    </Grid>\r\n    <Typography mt={1} ><StarsDisplay stars={characterSheet.rarity} colored /></Typography>\r\n\r\n  </>\r\n}\r\n\r\nfunction HeaderContentNew({ characterKey }: { characterKey: CharacterKey }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const gender = useGender(database)\r\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, database, gender])\r\n\r\n  if (!characterSheet) return null\r\n  return <>\r\n    <Chip label={<Typography variant=\"subtitle1\">{characterSheet.name}</Typography>} size=\"small\" color={characterSheet.elementKey} sx={{ opacity: 0.85 }} />\r\n    <Box mt={1}>\r\n      <Typography variant=\"h4\"><SqBadge>NEW</SqBadge></Typography>\r\n    </Box>\r\n    <Typography mt={1.5} ><StarsDisplay stars={characterSheet.rarity} colored /></Typography>\r\n  </>\r\n}\r\n\r\nfunction Artifacts() {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { data } = useContext(DataContext)\r\n  const artifacts = useMemo(() =>\r\n    allSlotKeys.map(k => [k, database.arts.get(data.get(input.art[k].id).value ?? \"\")]),\r\n    [data, database]) as Array<[SlotKey, ICachedArtifact | undefined]>;\r\n\r\n  return <Grid direction=\"row\" container spacing={0.75} columns={5}>\r\n    {artifacts.map(([key, art]: [SlotKey, ICachedArtifact | undefined]) =>\r\n      <Grid item key={key} xs={1}>\r\n        <ArtifactCardPico artifactObj={art} slotKey={key} />\r\n      </Grid>\r\n    )}\r\n  </Grid>\r\n}\r\n\r\nfunction Stats() {\r\n  const { data } = useContext(DataContext)\r\n  return <Box sx={{ width: \"100%\" }} >\r\n    {Object.values(data.getDisplay().basic).map(n => <NodeFieldDisplay key={n.info.key} node={n} />)}\r\n    {data.get(input.special).info.key && <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\r\n      <Typography flexGrow={1}><strong>Specialized:</strong></Typography>\r\n      {StatIcon[data.get(input.special).info.key!]}\r\n      <Typography>{KeyMap.get(data.get(input.special).info.key!)}</Typography>\r\n    </Box>}\r\n  </Box>\r\n}\r\n","import { Box, CardActionArea, Skeleton, Typography } from '@mui/material';\r\nimport { Suspense, useCallback, useContext } from 'react';\r\nimport Assets from '../../Assets/Assets';\r\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\r\nimport { ascensionMaxLevel } from '../../Data/LevelData';\r\nimport { DatabaseContext } from '../../Database/Database';\r\nimport useCharacter from '../../ReactHooks/useCharacter';\r\nimport useGender from '../../ReactHooks/useGender';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { CharacterKey } from '../../Types/consts';\r\nimport BootstrapTooltip from '../BootstrapTooltip';\r\nimport CardDark from '../Card/CardDark';\r\nimport ConditionalWrapper from '../ConditionalWrapper';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\n\r\nexport default function CharacterCardPico({ characterKey = \"\", index = -1, onClick }: { characterKey: CharacterKey | \"\", index?: number, onClick?: (characterKey: CharacterKey) => void }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const gender = useGender(database)\r\n  const teammateSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\r\n  const character = useCharacter(characterKey)\r\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey), [characterKey, onClick])\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickHandler}>{children}</CardActionArea>,\r\n    [onClickHandler])\r\n  if (teammateSheet && character) {\r\n    const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n      <Typography>{teammateSheet.elementKey && StatIcon[teammateSheet.elementKey]} {teammateSheet.name}</Typography>\r\n    </Suspense>\r\n\r\n    return <CardDark sx={{ maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\r\n      <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}>\r\n        <BootstrapTooltip placement=\"top\" title={title}>\r\n          <Box display=\"flex\" className={`grad-${teammateSheet.rarity}star`}>\r\n            <Box\r\n              component=\"img\"\r\n              src={teammateSheet.thumbImgSide}\r\n              maxWidth=\"100%\"\r\n              maxHeight=\"100%\"\r\n              sx={{ transform: \"scale(1.4)\", transformOrigin: \"bottom\" }}\r\n            />\r\n          </Box>\r\n        </BootstrapTooltip>\r\n        <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", top: 0, }}>\r\n          <strong><SqBadge color=\"primary\" >{character.level}/{ascensionMaxLevel[character.ascension]}</SqBadge></strong>\r\n        </Typography>\r\n        <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", bottom: 0, right: 0, }}>\r\n          <strong><SqBadge color=\"secondary\" >C{character.constellation}</SqBadge></strong>\r\n        </Typography>\r\n      </ConditionalWrapper>\r\n    </CardDark>\r\n  } else {\r\n    return <CardDark sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", py: \"12.5%\" }}>\r\n      <Box component=\"img\" src={Assets.team[`team${index + 2}`]} sx={{ width: \"75%\", height: \"auto\", opacity: 0.7 }} />\r\n    </CardDark>\r\n  }\r\n}\r\n","import { ReactNode } from \"react\";\r\n\r\ntype Prop = {\r\n  condition: boolean,\r\n  wrapper: (children: ReactNode) => ReactNode\r\n  falseWrapper?: (children: ReactNode) => ReactNode\r\n  children: ReactNode\r\n}\r\n// Wrap children with element provided by wrapper func when condition is true.\r\nexport default function ConditionalWrapper({ condition, wrapper, falseWrapper, children }: Prop) {\r\n  return (condition ? wrapper(children) : (falseWrapper ? falseWrapper(children) : children)) as JSX.Element;\r\n}","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, TooltipProps } from \"@mui/material\";\r\nimport BootstrapTooltip from \"./BootstrapTooltip\";\r\n\r\ninterface ITooltipProps extends Omit<TooltipProps, \"children\"> {\r\n  className?: string,\r\n}\r\nconst QuestionTooltip = ({ className, ...props }: ITooltipProps) =>\r\n  <BootstrapTooltip placement=\"top\" {...props} className={className}>\r\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\r\n  </BootstrapTooltip>\r\n\r\nexport default QuestionTooltip\r\n","import { Groups } from \"@mui/icons-material\";\r\nimport { Box, Divider, List, ListItem, ListProps, Palette, PaletteColor, Skeleton, styled, Typography } from \"@mui/material\";\r\nimport React, { Suspense, useCallback, useContext, useMemo } from 'react';\r\nimport { DataContext } from \"../Context/DataContext\";\r\nimport { FormulaDataContext } from \"../Context/FormulaDataContext\";\r\nimport { NodeDisplay } from \"../Formula/api\";\r\nimport { Variant } from \"../Formula/type\";\r\nimport KeyMap, { valueString } from \"../KeyMap\";\r\nimport { allAmpReactions, AmpReactionKey } from \"../Types/consts\";\r\nimport { IBasicFieldDisplay, IFieldDisplay } from \"../Types/fieldDisplay\";\r\nimport { evalIfFunc } from \"../Util/Util\";\r\nimport AmpReactionModeText from \"./AmpReactionModeText\";\r\nimport ColorText from \"./ColoredText\";\r\nimport QuestionTooltip from \"./QuestionTooltip\";\r\nimport StatIcon from \"./StatIcon\";\r\n\r\nexport default function FieldsDisplay({ fields }: { fields: IFieldDisplay[] }) {\r\n  return <FieldDisplayList sx={{ m: 0 }}>\r\n    {fields.map((field, i) => <FieldDisplay key={i} field={field} component={ListItem} />)}\r\n  </FieldDisplayList>\r\n}\r\n\r\nfunction FieldDisplay({ field, component }: { field: IFieldDisplay, component?: React.ElementType }) {\r\n  const { data, oldData } = useContext(DataContext)\r\n  const canShow = useMemo(() => field?.canShow?.(data) ?? true, [field, data])\r\n  if (!canShow) return null\r\n  if (\"node\" in field) {\r\n    const node = data.get(field.node)\r\n    if (node.isEmpty) return null\r\n    if (oldData) {\r\n      const oldNode = oldData.get(field.node)\r\n      const oldValue = oldNode.isEmpty ? 0 : oldNode.value\r\n      return <NodeFieldDisplay node={node} oldValue={oldValue} suffix={field.textSuffix} component={component} />\r\n    }\r\n    else return <NodeFieldDisplay node={node} suffix={field.textSuffix} component={component} />\r\n  }\r\n  return <BasicFieldDisplay field={field} component={component} />\r\n}\r\n\r\nexport function BasicFieldDisplay({ field, component }: { field: IBasicFieldDisplay, component?: React.ElementType }) {\r\n  const { data } = useContext(DataContext)\r\n  const v = evalIfFunc(field.value, data)\r\n  const variant = evalIfFunc(field.variant, data)\r\n  const text = field.text && <span>{field.text}</span>\r\n  const suffix = field.textSuffix && <span>{field.textSuffix}</span>\r\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1 }} component={component} >\r\n    <Typography color={`${variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{text}{suffix}</Typography>\r\n    <Typography >{typeof v === \"number\" ? v.toFixed?.(field.fixed) : v}{field.unit}</Typography>\r\n  </Box>\r\n}\r\n\r\nexport function NodeFieldDisplay({ node, oldValue, suffix, component, emphasize }: { node: NodeDisplay, oldValue?: number, suffix?: Displayable, component?: React.ElementType, emphasize?: boolean }) {\r\n  const { data } = useContext(DataContext)\r\n  const { setFormulaData } = useContext(FormulaDataContext)\r\n  const onClick = useCallback(() => setFormulaData(data, node), [setFormulaData, data, node])\r\n\r\n  if (node.isEmpty) return null\r\n\r\n  suffix = suffix && <span>{suffix}</span>\r\n  const icon = node.info.key && StatIcon[node.info.key]\r\n  const fieldText = node.info.key ? KeyMap.get(node.info.key) : \"\"\r\n  const isTeamBuff = node.info.isTeamBuff\r\n  const fieldFormulaText = node.formula\r\n  let fieldVal = \"\" as Displayable\r\n  if (oldValue !== undefined) {\r\n    const diff = node.value - oldValue\r\n    fieldVal = <span>{valueString(oldValue, node.unit)}{diff > 0.0001 || diff < -0.0001 ? <ColorText color={diff > 0 ? \"success\" : \"error\"}> {diff > 0 ? \"+\" : \"\"}{valueString(diff, node.unit)}</ColorText> : \"\"}</span>\r\n  } else fieldVal = valueString(node.value, node.unit)\r\n\r\n  const formulaTextOverlay = !!node.formula && <QuestionTooltip onClick={onClick} title={<Typography><Suspense fallback={<Skeleton variant=\"rectangular\" width={300} height={30} />}>\r\n    {allAmpReactions.includes(node.info.variant as any) && <Box sx={{ display: \"inline-flex\", gap: 1, mr: 1 }}>\r\n      <Box><AmpReactionModeText reaction={node.info.variant as AmpReactionKey} trigger={node.info.subVariant as Variant} /></Box>\r\n      <Divider orientation=\"vertical\" flexItem />\r\n    </Box>}\r\n    <span>{fieldFormulaText}</span>\r\n  </Suspense></Typography>} />\r\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1, boxShadow: emphasize ? \"0px 0px 0px 2px red inset\" : undefined }} component={component} >\r\n    <Typography color={`${node.info.variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{!!isTeamBuff && <Groups />}{icon}{fieldText}{suffix}</Typography>\r\n    <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>\r\n      <Typography noWrap>{fieldVal}</Typography>\r\n      {formulaTextOverlay}\r\n    </Box>\r\n  </Box>\r\n}\r\nexport interface FieldDisplayListProps extends ListProps {\r\n  light?: keyof Palette,\r\n  dark?: keyof Palette,\r\n  palletOption?: keyof PaletteColor\r\n}\r\nexport const FieldDisplayList = styled(List)<FieldDisplayListProps>(({ theme, light = \"contentDark\", dark = \"contentDarker\", palletOption = \"main\" }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  overflow: \"hidden\",\r\n  margin: 0,\r\n  '> .MuiListItem-root:nth-of-type(even)': {\r\n    backgroundColor: (theme.palette[light] as PaletteColor)[palletOption]\r\n  },\r\n  '> .MuiListItem-root:nth-of-type(odd)': {\r\n    backgroundColor: (theme.palette[dark] as PaletteColor)[palletOption]\r\n  },\r\n}));\r\n","import { faSortAmountDownAlt, faSortAmountUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button, ButtonGroup, ButtonGroupProps, MenuItem } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport DropdownButton from \"./DropdownMenu/DropdownButton\";\r\n\r\ntype SortByButtonProps = ButtonGroupProps & {\r\n  sortKeys: string[]\r\n  value: string\r\n  onChange: (value: string) => void\r\n  ascending: boolean\r\n  onChangeAsc: (value: boolean) => void\r\n}\r\n// Assumes that all the sortKeys has corresponding translations in ui.json sortMap\r\nexport default function SortByButton({ sortKeys, value, onChange, ascending, onChangeAsc, ...props }: SortByButtonProps) {\r\n  const { t } = useTranslation(\"ui\")\r\n  return <Box display=\"flex\" alignItems=\"center\" gap={1}>\r\n    <Trans t={t} i18nKey={t(\"sortBy\") as any}>Sort by: </Trans>\r\n    <ButtonGroup {...props} >\r\n      <DropdownButton title={<Trans t={t} i18nKey={t(`sortMap.${value}`) as any}>{{ value: t(`sortMap.${value}`) }}</Trans>}>\r\n        {sortKeys.map(key =>\r\n          <MenuItem key={key} selected={value === key} disabled={value === key} onClick={() => onChange(key)}>{t(`sortMap.${key}`) as any}</MenuItem>)}\r\n      </DropdownButton>\r\n      <Button onClick={() => onChangeAsc(!ascending)} startIcon={<FontAwesomeIcon icon={ascending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" />}>\r\n        {ascending ? <Trans t={t} i18nKey=\"ascending\" >Ascending</Trans> : <Trans t={t} i18nKey=\"descending\" >Descending</Trans>}\r\n      </Button>\r\n    </ButtonGroup>\r\n  </Box>\r\n}\r\n","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Typography } from '@mui/material'\r\nimport { Rarity } from '../Types/consts'\r\n\r\nexport const StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nexport const StarsDisplay = ({ stars, colored = false }: { stars: Rarity, colored?: boolean }) =>\r\n  <Typography color={colored ? \"warning.main\" : undefined} component=\"span\">\r\n    {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n  </Typography>\r\n","import { ButtonProps, ToggleButton, ToggleButtonProps, styled } from \"@mui/material\";\r\n\r\ntype SolidColoredToggleButtonPartial = {\r\n  baseColor?: ButtonProps[\"color\"];\r\n  selectedColor?: ButtonProps[\"color\"];\r\n}\r\nexport type SolidColoredToggleButtonProps = SolidColoredToggleButtonPartial & ToggleButtonProps\r\n\r\n\r\nconst SolidColoredToggleButton = styled(ToggleButton, {\r\n  shouldForwardProp: (prop) => prop !== \"baseColor\" && prop !== \"selectedColor\"\r\n})<SolidColoredToggleButtonPartial>(({ theme, baseColor = \"secondary\", selectedColor = \"success\" }) => ({\r\n  '&': {\r\n    backgroundColor: theme.palette[baseColor].main,\r\n    color: theme.palette[baseColor].contrastText,\r\n  },\r\n  '&:hover': {\r\n    backgroundColor: theme.palette[baseColor].dark,\r\n  },\r\n  '&.Mui-selected': {\r\n    backgroundColor: theme.palette[selectedColor].main,\r\n    color: theme.palette[selectedColor].contrastText,\r\n  },\r\n  '&.Mui-selected:hover': {\r\n    backgroundColor: theme.palette[selectedColor].dark,\r\n  },\r\n  '&.Mui-disabled': {\r\n    backgroundColor: theme.palette[baseColor].dark,\r\n  },\r\n  '&.Mui-selected.Mui-disabled': {\r\n    backgroundColor: theme.palette[selectedColor].dark,\r\n  },\r\n}));\r\n\r\nexport default SolidColoredToggleButton\r\n","import { Box, ToggleButtonGroup } from \"@mui/material\";\r\nimport { allElements, ElementKey } from \"../../Types/consts\";\r\nimport { handleMultiSelect } from \"../../Util/MultiSelect\";\r\nimport SolidColoredToggleButton from \"../SolidColoredToggleButton\";\r\nimport { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\nimport StatIcon from \"../StatIcon\";\r\ntype ElementToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: ElementKey[]) => void\r\n  value: ElementKey[]\r\n}\r\nconst elementHandler = handleMultiSelect([...allElements])\r\nexport default function ElementToggle({ value, onChange, ...props }: ElementToggleProps) {\r\n  return <ToggleButtonGroup exclusive value={value} {...props}>\r\n    {allElements.map(ele => <SolidColoredToggleButton key={ele} value={ele} selectedColor={ele} onClick={() => onChange(elementHandler(value, ele))}>\r\n      <Box sx={{ fontSize: \"2em\", lineHeight: 1 }}>{StatIcon[ele]}</Box>\r\n    </SolidColoredToggleButton>)}\r\n  </ToggleButtonGroup>\r\n}\r\n","import { ToggleButton } from \"@mui/material\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport { allWeaponTypeKeys, WeaponTypeKey } from \"../../Types/consts\";\r\nimport { handleMultiSelect } from \"../../Util/MultiSelect\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport SolidToggleButtonGroup, { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\ntype WeaponToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: WeaponTypeKey[]) => void\r\n  value: WeaponTypeKey[]\r\n}\r\nconst weaponTypeHandler = handleMultiSelect([...allWeaponTypeKeys])\r\nexport default function WeaponToggle({ value, onChange, ...props }: WeaponToggleProps) {\r\n  return <SolidToggleButtonGroup exclusive value={value} {...props}>\r\n    {allWeaponTypeKeys.map(wt => <ToggleButton key={wt} value={wt} onClick={() => onChange(weaponTypeHandler(value, wt))}>\r\n      <ImgIcon src={Assets.weaponTypes?.[wt]} size={2} />\r\n    </ToggleButton>)}\r\n  </SolidToggleButtonGroup>\r\n}\r\n","import { Box, Typography } from '@mui/material';\r\nimport { useMemo } from 'react';\r\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\r\nimport { uiInput as input } from '../../Formula';\r\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\r\nimport { NodeDisplay } from '../../Formula/uiData';\r\nimport { valueString } from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport useWeapon from '../../ReactHooks/useWeapon';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\nimport WeaponNameTooltip from './WeaponNameTooltip';\r\n\r\nexport default function WeaponCardPico({ weaponId }: { weaponId: string }) {\r\n  const weapon = useWeapon(weaponId)\r\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n\r\n  const tooltipAddl = <Box>\r\n    <WeaponStatPico node={UIData.get(input.weapon.main)} />\r\n    <WeaponStatPico node={UIData.get(input.weapon.sub)} />\r\n  </Box>\r\n\r\n  return <CardDark sx={{ height: \"100%\", maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\r\n    <Box display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`}>\r\n      <WeaponNameTooltip sheet={weaponSheet} addlText={tooltipAddl}>\r\n        <Box\r\n          component=\"img\"\r\n          src={weaponSheet.getImg(weapon.ascension)}\r\n          maxWidth=\"100%\"\r\n          maxHeight=\"100%\"\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </WeaponNameTooltip>\r\n    </Box>\r\n    <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", }}>\r\n      <strong><SqBadge color=\"primary\">{WeaponSheet.getLevelString(weapon)}</SqBadge></strong>\r\n    </Typography>\r\n    {weaponSheet.hasRefinement && <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", bottom: 0, right: 0, }}>\r\n      <strong><SqBadge color=\"secondary\">R{weapon.refinement}</SqBadge></strong>\r\n    </Typography>}\r\n  </CardDark>\r\n}\r\nfunction WeaponStatPico({ node }: { node: NodeDisplay }) {\r\n  if (!node.info.key) return null\r\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\r\n  return <Typography>{StatIcon[node.info.key]} {val}</Typography>\r\n}\r\n","import { Skeleton, Typography } from \"@mui/material\";\r\nimport { ReactElement, ReactNode, Suspense } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\n\r\ntype Data = {\r\n  sheet: WeaponSheet,\r\n  addlText?: any,\r\n  children: ReactElement<any, any> & ReactNode,\r\n}\r\nexport default function WeaponNameTooltip({ sheet, addlText, children }: Data) {\r\n  const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n    <Typography><ImgIcon src={Assets.weaponTypes[sheet.weaponType]} /> {sheet.name}</Typography>\r\n    {addlText}\r\n  </Suspense>\r\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\r\n    {children}\r\n  </BootstrapTooltip>\r\n}\r\n","import { createContext, useCallback, useState } from \"react\";\r\nimport { NodeDisplay, UIData } from \"../Formula/uiData\";\r\nimport useBoolState from \"../ReactHooks/useBoolState\";\r\n\r\ntype FormulaDataContextObj = {\r\n  data?: UIData,\r\n  node?: NodeDisplay,\r\n  modalOpen?: boolean,\r\n  onModalOpen: () => void,\r\n  onModalClose: () => void,\r\n  setFormulaData: (data?: UIData, node?: NodeDisplay) => void\r\n}\r\nexport const FormulaDataContext = createContext({ setFormulaData: () => { }, onModalOpen: () => { }, onModalClose: () => { } } as FormulaDataContextObj);\r\n\r\nexport function FormulaDataWrapper({ children }: { children: JSX.Element }) {\r\n  const [open, onOpen, onClose] = useBoolState()\r\n  const [[data, node], setState] = useState([undefined, undefined] as [data: UIData | undefined, node: NodeDisplay | undefined])\r\n  const setFormulaData = useCallback((data?: UIData, node?: NodeDisplay) => {\r\n    if (data && node) onOpen()\r\n    else onClose()\r\n    setState([data, node])\r\n  }, [onOpen, onClose])\r\n  return <FormulaDataContext.Provider value={{ setFormulaData, data, node, modalOpen: open, onModalOpen: onOpen, onModalClose: onClose }} >{children}</FormulaDataContext.Provider>\r\n}\r\n","import StatIcon from \"../Components/StatIcon\";\r\nimport { Translate } from \"../Components/Translate\";\r\nimport { tally } from \"../Formula\";\r\nimport { inferInfoMut } from \"../Formula/api\";\r\nimport { UIData } from \"../Formula/uiData\";\r\nimport { equal, greaterEq, infoMut, percent, sum } from \"../Formula/utils\";\r\nimport { allElements, allElementsWithPhy } from \"../Types/consts\";\r\nimport { DocumentSection } from \"../Types/sheet\";\r\nimport { objectKeyValueMap } from \"../Util/Util\";\r\nimport { condReadNode, sgt, st } from \"./SheetUtil\";\r\nconst tr = (strKey: string) => <Translate ns=\"elementalResonance_gen\" key18={strKey} />\r\nconst trm = (strKey: string) => <Translate ns=\"elementalResonance\" key18={strKey} />\r\n\r\ntype IResonance = {\r\n  name: Displayable,\r\n  desc: Displayable,\r\n  icon: Displayable,\r\n  canShow: (data: UIData) => boolean\r\n  sections: DocumentSection[]\r\n}\r\n\r\nconst teamSize = sum(...allElements.map(ele => tally[ele]))\r\n\r\n// Protective Canopy\r\nconst pcNodes = objectKeyValueMap(allElementsWithPhy, e => [`${e}_res_`, greaterEq(tally.ele, 4, percent(0.15))])\r\n\r\nconst protectiveCanopy: IResonance = {\r\n  name: tr(\"ProtectiveCanopy.name\"),\r\n  desc: tr(\"ProtectiveCanopy.desc\"),\r\n  icon: <span>{StatIcon.anemo} {StatIcon.geo} {StatIcon.pyro} {StatIcon.hydro} {StatIcon.cryo} {StatIcon.electro} x4</span>,\r\n  canShow: (data: UIData) => allElements.filter(e => data.get(tally[e]).value >= 1).length === 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: Object.values(pcNodes).map(node => ({ node }))\r\n  }]\r\n}\r\n\r\n// Fervent Flames\r\nconst ffNode = greaterEq(teamSize, 4, greaterEq(tally.pyro, 2, percent(0.25)))\r\nconst ferventFlames: IResonance = {\r\n  name: tr(\"FerventFlames.name\"),\r\n  desc: tr(\"FerventFlames.desc\"),\r\n  icon: <span>{StatIcon.pyro} {StatIcon.pyro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.pyro).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.cryo\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }, {\r\n      node: ffNode\r\n    }]\r\n  }]\r\n}\r\n\r\n// Soothing Waters\r\nconst swNode = greaterEq(teamSize, 4, greaterEq(tally.hydro, 2, percent(0.25)))\r\nconst soothingWaters: IResonance = {\r\n  name: tr(\"SoothingWater.name\"),\r\n  desc: tr(\"SoothingWater.desc\"),\r\n  icon: <span>{StatIcon.hydro} {StatIcon.hydro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.hydro).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.pyro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }, {\r\n      node: swNode\r\n    }]\r\n  }]\r\n}\r\n\r\n//ShatteringIce\r\nconst condSIPath = [\"resonance\", \"ShatteringIce\"]\r\nconst condSI = condReadNode(condSIPath)\r\nconst siNode = greaterEq(teamSize, 4, greaterEq(tally.cryo, 2, equal(condSI, \"on\", percent(0.15))))\r\nconst shatteringIce: IResonance = {\r\n  name: tr(\"ShatteringIce.name\"),\r\n  desc: tr(\"ShatteringIce.desc\"),\r\n  icon: <span>{StatIcon.cryo} {StatIcon.cryo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.cryo).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.electro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }]\r\n  }, {\r\n    teamBuff: true,\r\n    path: condSIPath,\r\n    value: condSI,\r\n    name: trm(\"ShatteringIce.cond\"),\r\n    header: {\r\n      title: tr(\"ShatteringIce.name\"),\r\n      icon: StatIcon.cryo,\r\n    },\r\n    states: {\r\n      on: {\r\n        fields: [{\r\n          node: siNode\r\n        }]\r\n      }\r\n    }\r\n  }]\r\n}\r\n\r\n// High Voltage\r\nconst highVoltage: IResonance = {\r\n  name: tr(\"HighVoltage.name\"),\r\n  desc: tr(\"HighVoltage.desc\"),\r\n  icon: <span>{StatIcon.electro} {StatIcon.electro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.electro).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.hydro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }]\r\n  }]\r\n}\r\n\r\n// Impetuous Winds\r\nconst iwNodeStam = greaterEq(teamSize, 4, greaterEq(tally.anemo, 2, percent(-0.15)))\r\nconst iwNodeMove = greaterEq(teamSize, 4, greaterEq(tally.anemo, 2, percent(0.1)))\r\nconst iwNodeCD = greaterEq(teamSize, 4, greaterEq(tally.anemo, 2, percent(-0.05)))\r\nconst impetuousWinds: IResonance = {\r\n  name: tr(\"ImpetuousWinds.name\"),\r\n  desc: tr(\"ImpetuousWinds.desc\"),\r\n  icon: <span>{StatIcon.anemo} {StatIcon.anemo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.anemo).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      node: iwNodeStam\r\n    }, {\r\n      node: iwNodeMove\r\n    }, {\r\n      node: iwNodeCD\r\n    }]\r\n  }]\r\n}\r\n\r\n// Enduring Rock\r\nconst condERPath = [\"resonance\", \"EnduringRock\"]\r\nconst condER = condReadNode(condERPath)\r\nconst erNodeshield_ = greaterEq(teamSize, 4, greaterEq(tally.geo, 2, percent(0.15)))\r\nconst erNodeDMG_ = greaterEq(teamSize, 4, greaterEq(tally.geo, 2, equal(condER, \"on\", percent(0.15))))\r\nconst erNodeRes_ = greaterEq(teamSize, 4, greaterEq(tally.geo, 2, equal(condER, \"on\", percent(-0.2))))\r\nconst enduringRock: IResonance = {\r\n  name: tr(\"EnduringRock.name\"),\r\n  desc: tr(\"EnduringRock.desc\"),\r\n  icon: <span>{StatIcon.geo} {StatIcon.geo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.geo).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    text: tr(\"EnduringRock.desc\"),\r\n    fields: [{\r\n      node: erNodeshield_\r\n    }]\r\n  }, {\r\n    teamBuff: true,\r\n    path: condERPath,\r\n    value: condER,\r\n    header: {\r\n      title: tr(\"EnduringRock.name\"),\r\n      icon: StatIcon.geo,\r\n    },\r\n    name: st(\"protectedByShield\"),\r\n    states: {\r\n      on: {\r\n        fields: [{\r\n          node: erNodeDMG_\r\n        }, {\r\n          node: erNodeRes_\r\n        }, {\r\n          text: sgt(\"duration\"),\r\n          value: 15,\r\n          unit: \"s\"\r\n        }]\r\n      }\r\n    }\r\n  }]\r\n}\r\n\r\n// Sprawling Canopy\r\nconst condSC2elePath = [\"resonance\", \"SprawlingCanopy2ele\"]\r\nconst condSC2ele = condReadNode(condSC2elePath)\r\nconst condSC3elePath = [\"resonance\", \"SprawlingCanopy3ele\"]\r\nconst condSC3ele = condReadNode(condSC3elePath)\r\nconst scBase_eleMas = greaterEq(teamSize, 4, greaterEq(tally.dendro, 2, 50, { key: \"eleMas\" }))\r\nconst sc2ele_eleMas = greaterEq(teamSize, 4, greaterEq(tally.dendro, 2, equal(condSC2ele, \"on\", 30, { key: \"eleMas\" })))\r\nconst sc3ele_eleMas = greaterEq(teamSize, 4, greaterEq(tally.dendro, 2, equal(condSC3ele, \"on\", 20, { key: \"eleMas\" })))\r\nconst sprawlingGreenery: IResonance = {\r\n  name: tr(\"SprawlingGreenery.name\"),\r\n  desc: tr(\"SprawlingGreenery.desc\"),\r\n  icon: <span>{StatIcon.dendro} {StatIcon.dendro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.dendro).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    text: tr(\"SprawlingGreenery.desc\"),\r\n    fields: [{ node: scBase_eleMas }]\r\n  }, {\r\n    teamBuff: true,\r\n    path: condSC2elePath,\r\n    value: condSC2ele,\r\n    header: {\r\n      title: tr(\"SprawlingGreenery.name\"),\r\n      icon: StatIcon.dendro,\r\n    },\r\n    name: trm(\"SprawlingGreenery.cond2ele\"),\r\n    states: {\r\n      on: {\r\n        fields: [{\r\n          node: sc2ele_eleMas\r\n        }, {\r\n          text: sgt(\"duration\"),\r\n          value: 6,\r\n          unit: \"s\"\r\n        }]\r\n      }\r\n    }\r\n  }, {\r\n    teamBuff: true,\r\n    path: condSC3elePath,\r\n    value: condSC3ele,\r\n    header: {\r\n      title: tr(\"SprawlingGreenery.name\"),\r\n      icon: StatIcon.dendro,\r\n    },\r\n    name: trm(\"SprawlingGreenery.cond3ele\"),\r\n    states: {\r\n      on: {\r\n        fields: [{\r\n          node: sc3ele_eleMas\r\n        }, {\r\n          text: sgt(\"duration\"),\r\n          value: 6,\r\n          unit: \"s\"\r\n        }]\r\n      }\r\n    }\r\n  }]\r\n}\r\n\r\n\r\nexport const resonanceSheets: IResonance[] = [\r\n  protectiveCanopy,\r\n  ferventFlames,\r\n  soothingWaters,\r\n  shatteringIce,\r\n  highVoltage,\r\n  impetuousWinds,\r\n  enduringRock,\r\n  sprawlingGreenery,\r\n]\r\n\r\nexport const resonanceData = inferInfoMut({\r\n  premod: {\r\n    ...pcNodes,\r\n    atk_: ffNode,\r\n    hp_: swNode,\r\n    staminaDec_: iwNodeStam,\r\n    moveSPD_: iwNodeMove,\r\n    cdRed_: iwNodeCD,\r\n    shield_: erNodeshield_,\r\n    all_dmg_: erNodeDMG_,\r\n    geo_enemyRes_: erNodeRes_,\r\n    eleMas: infoMut(sum(scBase_eleMas, sc2ele_eleMas, sc3ele_eleMas), { pivot: true }),\r\n  },\r\n  total: {\r\n    // TODO: this crit rate is on-hit. Might put it in a `hit.critRate_` namespace later.\r\n    critRate_: siNode\r\n  }\r\n})\r\n","import { allElements, allWeaponTypeKeys } from \"../Types/consts\";\r\nimport { characterSortKeys } from \"../Util/CharacterSort\";\r\n\r\nexport const initialCharacterDisplayState = () => ({\r\n  sortType: characterSortKeys[0],\r\n  ascending: false,\r\n  weaponType: [...allWeaponTypeKeys],\r\n  element: [...allElements],\r\n  pageIndex: 0\r\n})\r\n","import { Box, CardContent, Divider, Grid, TextField } from \"@mui/material\";\r\nimport { ChangeEvent, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CardDark from \"../Components/Card/CardDark\";\r\nimport CharacterCard from \"../Components/Character/CharacterCard\";\r\nimport CloseButton from \"../Components/CloseButton\";\r\nimport ModalWrapper from \"../Components/ModalWrapper\";\r\nimport SortByButton from \"../Components/SortByButton\";\r\nimport ElementToggle from \"../Components/ToggleButton/ElementToggle\";\r\nimport WeaponToggle from \"../Components/ToggleButton/WeaponToggle\";\r\nimport { DataContext } from \"../Context/DataContext\";\r\nimport CharacterSheet, { charKeyToCharSheetKey } from \"../Data/Characters/CharacterSheet\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport useDBState from \"../ReactHooks/useDBState\";\r\nimport useForceUpdate from \"../ReactHooks/useForceUpdate\";\r\nimport useGender from \"../ReactHooks/useGender\";\r\nimport usePromise from \"../ReactHooks/usePromise\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { allCharacterKeys, CharacterKey } from \"../Types/consts\";\r\nimport { characterFilterConfigs, characterSortConfigs, characterSortKeys } from \"../Util/CharacterSort\";\r\nimport { filterFunction, sortFunction } from \"../Util/SortByFilters\";\r\nimport { initialCharacterDisplayState } from \"./CharacterDisplayState\";\r\n\r\ntype characterFilter = (character: ICachedCharacter | undefined, sheet: CharacterSheet) => boolean\r\n\r\ntype CharacterSelectionModalProps = {\r\n  show: boolean,\r\n  newFirst?: boolean\r\n  onHide: () => void,\r\n  onSelect?: (ckey: CharacterKey) => void,\r\n  filter?: characterFilter\r\n}\r\n\r\nexport function CharacterSelectionModal({ show, onHide, onSelect, filter = () => true, newFirst = false }: CharacterSelectionModalProps) {\r\n  const sortKeys = useMemo(() => newFirst ? [...characterSortKeys] : characterSortKeys.slice(1), [newFirst])\r\n  const { database } = useContext(DatabaseContext)\r\n  const [state, stateDispatch] = useDBState(\"CharacterDisplay\", initialCharacterDisplayState)\r\n  const { weaponType, element } = state\r\n  const { t } = useTranslation([\"page_character\", \"charNames_gen\"])\r\n\r\n  const [sortBy, setsortBy] = useState(sortKeys[0])\r\n  const [ascending, setascending] = useState(false)\r\n\r\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\r\n\r\n  const [favesDirty, setFavesDirty] = useForceUpdate()\r\n  useEffect(() => {\r\n    // character favorite updater\r\n    return database.states.followAny(s => s.includes(\"charMeta_\") && setFavesDirty())\r\n  }, [setFavesDirty, database])\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const deferredSearchTerm = useDeferredValue(searchTerm)\r\n\r\n  const sortConfigs = useMemo(() => characterSheets && characterSortConfigs(database, characterSheets), [database, characterSheets])\r\n  const filterConfigs = useMemo(() => characterSheets && favesDirty && characterFilterConfigs(database, characterSheets), [favesDirty, database, characterSheets])\r\n  const gender = useGender(database)\r\n  const ownedCharacterKeyList = useMemo(() => characterSheets ? allCharacterKeys.filter(cKey => filter(database.chars.get(cKey), characterSheets[charKeyToCharSheetKey(cKey, gender)])) : [], [database, gender, characterSheets, filter])\r\n  const characterKeyList = useMemo(() => (sortConfigs && filterConfigs) ?\r\n    ownedCharacterKeyList\r\n      .filter(filterFunction({ element, weaponType, favorite: \"yes\", name: deferredSearchTerm }, filterConfigs))\r\n      .sort(sortFunction(sortBy, ascending, sortConfigs) as (a: CharacterKey, b: CharacterKey) => number)\r\n      .concat(\r\n        ownedCharacterKeyList\r\n          .filter(filterFunction({ element, weaponType, favorite: \"no\", name: deferredSearchTerm }, filterConfigs))\r\n          .sort(sortFunction(sortBy, ascending, sortConfigs) as (a: CharacterKey, b: CharacterKey) => number)\r\n      )\r\n    : [],\r\n    [element, weaponType, sortBy, ascending, sortConfigs, filterConfigs, ownedCharacterKeyList, deferredSearchTerm])\r\n\r\n  if (!characterSheets) return null\r\n  return <ModalWrapper open={show} onClose={onHide} sx={{ \"& .MuiContainer-root\": { justifyContent: \"normal\" } }}>\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1, display: \"flex\", alignItems: \"center\", gap: 1, flexWrap: \"wrap\" }}>\r\n        <WeaponToggle sx={{ height: \"100%\" }} onChange={weaponType => stateDispatch({ weaponType })} value={weaponType} size=\"small\" />\r\n        <ElementToggle sx={{ height: \"100%\" }} onChange={element => stateDispatch({ element })} value={element} size=\"small\" />\r\n        <Box flexGrow={1}>\r\n          <TextField\r\n            autoFocus\r\n            value={searchTerm}\r\n            onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\r\n            label={t(\"characterName\")}\r\n            size=\"small\"\r\n            sx={{ height: \"100%\" }}\r\n            InputProps={{\r\n              sx: { height: \"100%\" }\r\n            }}\r\n          />\r\n        </Box>\r\n        <SortByButton sx={{ height: \"100%\" }}\r\n          sortKeys={sortKeys} value={sortBy} onChange={setsortBy as any}\r\n          ascending={ascending} onChangeAsc={setascending} />\r\n        <CloseButton onClick={onHide} />\r\n      </CardContent>\r\n      <Divider />\r\n      <DataContext.Provider value={{ teamData: undefined } as any}>\r\n        <CardContent><Grid container spacing={1} columns={{ xs: 2, md: 3, lg: 4 }}>\r\n          {characterKeyList.map(characterKey => <Grid item key={characterKey} xs={1} >\r\n            <CharacterCard key={characterKey} hideStats characterKey={characterKey} onClick={() => { onHide(); onSelect?.(characterKey) }} />\r\n          </Grid>)}\r\n        </Grid></CardContent>\r\n      </DataContext.Provider>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\n\r\nexport default function useCharacter(characterKey: CharacterKey | \"\" | undefined = \"\") {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [character, updateCharacter] = useState(database.chars.get(characterKey))\r\n  useEffect(() => updateCharacter(database.chars.get(characterKey)), [database, characterKey])\r\n  useEffect(() =>\r\n    characterKey ? database.chars.follow(characterKey, (k, r, v) => r === \"update\" && updateCharacter(v)) : undefined,\r\n    [characterKey, updateCharacter, database])\r\n  return character\r\n}\r\n","import { useCallback, useContext } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { IConditionalValues } from \"../Types/sheet\";\r\nimport { deepClone } from \"../Util/Util\";\r\n\r\ntype characterReducerBonusStatsAction = {\r\n  type: \"editStats\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\ntype characterReducerenemyOverrideAction = {\r\n  type: \"enemyOverride\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\ntype characterReducerResetStatsAction = {\r\n  type: \"resetStats\",\r\n  statKey: string\r\n}\r\ntype characterTeamAction = {\r\n  type: \"team\",\r\n  index: number,\r\n  charKey: CharacterKey | \"\"\r\n}\r\ntype characterTeamConditional = {\r\n  type: \"teamConditional\",\r\n  teamMateKey: CharacterKey,\r\n  conditional: IConditionalValues\r\n}\r\nexport type characterReducerAction = characterReducerBonusStatsAction | characterReducerenemyOverrideAction | characterReducerResetStatsAction | characterTeamAction | characterTeamConditional | Partial<ICachedCharacter>\r\n\r\nexport default function useCharacterReducer(characterKey: CharacterKey | \"\") {\r\n\r\n  const { database } = useContext(DatabaseContext)\r\n\r\n  return useCallback((action: characterReducerAction): void => {\r\n    if (!characterKey) return\r\n    const character = database.chars.get(characterKey)\r\n    if (!character) return\r\n    if (\"type\" in action) switch (action.type) {\r\n      case \"enemyOverride\": {\r\n        const enemyOverride = character.enemyOverride\r\n        const { statKey, value } = action\r\n        if (enemyOverride[statKey] === value) break\r\n        database.chars.set(characterKey, { ...character, enemyOverride: { ...enemyOverride, [statKey]: value } })\r\n        break\r\n      }\r\n      case \"editStats\": {\r\n        const { statKey, value } = action\r\n        const bonusStats = deepClone(character.bonusStats)\r\n        if (bonusStats[statKey] === value) break\r\n        if (!value) delete bonusStats[statKey]\r\n        else bonusStats[statKey] = value\r\n        database.chars.set(characterKey, { ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"resetStats\": {\r\n        const { statKey } = action\r\n        const bonusStats = character.bonusStats\r\n        delete bonusStats[statKey]\r\n        database.chars.set(characterKey, { ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"teamConditional\": {\r\n        const { teamMateKey, conditional } = action\r\n        const teamConditional = deepClone(character.teamConditional)\r\n        teamConditional[teamMateKey] = conditional\r\n        database.chars.set(characterKey, { ...character, teamConditional })\r\n        break\r\n      }\r\n      case \"team\": {\r\n        const { team: team_ } = character\r\n        const team = [...team_] as ICachedCharacter[\"team\"]\r\n        const { index, charKey } = action\r\n        team[index] = charKey\r\n        // update src character\r\n        database.chars.set(characterKey, { ...character, team })\r\n      }\r\n    } else\r\n      database.chars.set(characterKey, { ...character, ...action })\r\n  }, [characterKey, database])\r\n}\r\n","import { useCallback, useState } from \"react\"\r\n\r\nexport default function useForceUpdate(): [object, () => void] {\r\n  const [stateDirty, update] = useState({})\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return [stateDirty, forceUpdateHook]\r\n}","import { useEffect, useState } from \"react\";\r\nimport { ArtCharDatabase } from \"../Database/Database\";\r\n\r\nexport default function useGender(database: ArtCharDatabase) {\r\n  const [gender, setG] = useState(database.gender)\r\n  useEffect(() => database.states.follow(\"dbMeta\", () => setG(database.gender)), [database, setG])\r\n  return gender\r\n}\r\n","import { useMediaQuery, useTheme } from \"@mui/material\";\r\n\r\nexport default function useMediaQueryUp() {\r\n  const theme = useTheme();\r\n  const sm = useMediaQuery(theme.breakpoints.up('sm'));\r\n  const md = useMediaQuery(theme.breakpoints.up('md'));\r\n  const lg = useMediaQuery(theme.breakpoints.up('lg'));\r\n  const xl = useMediaQuery(theme.breakpoints.up('xl'));\r\n  if (xl) return \"xl\"\r\n  if (lg) return \"lg\"\r\n  if (md) return \"md\"\r\n  if (sm) return \"sm\"\r\n  return \"xs\"\r\n}\r\n","import { useContext, useDeferredValue, useEffect } from \"react\";\r\nimport { TeamData } from \"../Context/DataContext\";\r\nimport { ArtifactSheet } from \"../Data/Artifacts/ArtifactSheet\";\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\r\nimport { resonanceData } from \"../Data/Resonance\";\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\";\r\nimport { ArtCharDatabase, DatabaseContext } from \"../Database/Database\";\r\nimport { common } from \"../Formula\";\r\nimport { dataObjForArtifact, dataObjForCharacter, dataObjForWeapon, mergeData, uiDataForTeam } from \"../Formula/api\";\r\nimport { Data } from \"../Formula/type\";\r\nimport { ICachedArtifact } from \"../Types/artifact\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { ICachedWeapon } from \"../Types/weapon\";\r\nimport { objectMap } from \"../Util/Util\";\r\nimport useForceUpdate from \"./useForceUpdate\";\r\nimport usePromise from \"./usePromise\";\r\n\r\ntype TeamDataBundle = {\r\n  teamData: Dict<CharacterKey, Data[]>\r\n  teamBundle: Dict<CharacterKey, CharBundle>\r\n}\r\n\r\nexport default function useTeamData(characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[] | Data, overrideWeapon?: ICachedWeapon): TeamData | undefined {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [dbDirty, setDbDirty] = useForceUpdate()\r\n  const dbDirtyDeferred = useDeferredValue(dbDirty)\r\n  const data = usePromise(() => getTeamDataCalc(database, characterKey, mainStatAssumptionLevel, overrideArt, overrideWeapon), [dbDirtyDeferred, characterKey, database, mainStatAssumptionLevel, overrideArt, overrideWeapon])\r\n\r\n  useEffect(() =>\r\n    characterKey ? database.chars.follow(characterKey, setDbDirty) : undefined,\r\n    [characterKey, setDbDirty, database])\r\n\r\n  return data\r\n}\r\n\r\nasync function getTeamDataCalc(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[] | Data, overrideWeapon?: ICachedWeapon):\r\n  Promise<TeamData | undefined> {\r\n  if (!characterKey) return\r\n\r\n  // Retrive from cache\r\n  if (!mainStatAssumptionLevel && !overrideArt && !overrideWeapon) {\r\n    const cache = database._getTeamData(characterKey)\r\n    if (cache) return cache\r\n  }\r\n  const { teamData, teamBundle } = (await getTeamData(database, characterKey, mainStatAssumptionLevel, overrideArt, overrideWeapon)) ?? {}\r\n  if (!teamData || !teamBundle) return\r\n\r\n  const calcData = uiDataForTeam(teamData, characterKey as CharacterKey)\r\n\r\n  const data = objectMap(calcData, (obj, ck) => {\r\n    const { data: _, ...rest } = teamBundle[ck]!\r\n    return { ...obj, ...rest }\r\n  })\r\n  if (!mainStatAssumptionLevel && !overrideArt && !overrideWeapon)\r\n    database.cacheTeamData(characterKey, data)\r\n  return data\r\n}\r\n\r\nexport async function getTeamData(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[] | Data, overrideWeapon?: ICachedWeapon):\r\n  Promise<TeamDataBundle | undefined> {\r\n  if (!characterKey) return\r\n  const character = database.chars.get(characterKey)\r\n  if (!character) return\r\n\r\n  const char1DataBundle = await getCharDataBundle(database, true, mainStatAssumptionLevel,\r\n    character,\r\n    overrideWeapon ? overrideWeapon : database.weapons.get(character.equippedWeapon)!,\r\n    (overrideArt ?? Object.values(character.equippedArtifacts).map(a => database.arts.get(a)).filter(a => a) as ICachedArtifact[])\r\n  )\r\n  if (!char1DataBundle) return\r\n  const teamBundle = { [characterKey]: char1DataBundle }\r\n  const teamData: Dict<CharacterKey, Data[]> = { [characterKey]: char1DataBundle.data }\r\n\r\n  await Promise.all(char1DataBundle.character.team.map(async (ck) => {\r\n    if (!ck) return\r\n    const tchar = database.chars.get(ck)\r\n    if (!tchar) return\r\n    const databundle = await getCharDataBundle(database, false, 0,\r\n      { ...tchar, conditional: character.teamConditional[ck] ?? {} },\r\n      database.weapons.get(tchar.equippedWeapon)!,\r\n      Object.values(tchar.equippedArtifacts).map(a => database.arts.get(a)).filter(a => a) as ICachedArtifact[])\r\n    if (!databundle) return\r\n    teamBundle[ck] = databundle\r\n    teamData[ck] = databundle.data\r\n  }))\r\n\r\n  return { teamData, teamBundle }\r\n}\r\ntype CharBundle = {\r\n  character: ICachedCharacter,\r\n  weapon: ICachedWeapon,\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet,\r\n  data: Data[]\r\n}\r\n\r\nasync function getCharDataBundle(database: ArtCharDatabase, useCustom = false, mainStatAssumptionLevel: number,\r\n  character: ICachedCharacter,\r\n  weapon: ICachedWeapon,\r\n  artifacts: ICachedArtifact[] | Data,\r\n): Promise<CharBundle | undefined> {\r\n\r\n  const characterSheet = await CharacterSheet.get(character.key, database.gender)\r\n  if (!characterSheet) return\r\n  const weaponSheet = await WeaponSheet.get(weapon.key)\r\n  if (!weaponSheet) return\r\n\r\n  const weaponSheetsDataOfType = await WeaponSheet.getAllDataOfType(characterSheet.weaponTypeKey)\r\n\r\n  const weaponSheetsData = useCustom ? (() => {\r\n    // display is included in WeaponSheet.getAllDataOfType\r\n    const { display, ...restWeaponSheetData } = weaponSheet.data\r\n    return mergeData([restWeaponSheetData, weaponSheetsDataOfType])\r\n  })() : weaponSheet.data\r\n\r\n  const artifactSheetsData = await ArtifactSheet.getAllData\r\n  const sheetData = mergeData([characterSheet.data, weaponSheetsData, artifactSheetsData])\r\n  const artifactData = Array.isArray(artifacts) ? artifacts.map(a => dataObjForArtifact(a, mainStatAssumptionLevel)) : [artifacts]\r\n  const data = [\r\n    ...artifactData,\r\n    dataObjForCharacter(character, useCustom ? sheetData : undefined),\r\n    dataObjForWeapon(weapon),\r\n    sheetData,\r\n    common, // NEED TO PUT THIS AT THE END\r\n    resonanceData,\r\n  ]\r\n  return { character, weapon, characterSheet, weaponSheet, data }\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\n\r\nexport default function useWeapon(weaponID: string | undefined = \"\") {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [weapon, setWeapon] = useState(database.weapons.get(weaponID))\r\n  useEffect(() => setWeapon(database.weapons.get(weaponID)), [database, weaponID])\r\n  useEffect(() =>\r\n    weaponID ? database.weapons.follow(weaponID, (k, r, v) => r === \"update\" && setWeapon(v)) : undefined,\r\n    [weaponID, setWeapon, database])\r\n  return weapon\r\n}\r\n","import CharacterSheet, { charKeyToCharSheetKey } from \"../Data/Characters/CharacterSheet\";\r\nimport { initCharMeta } from \"../Database/Data/StateData\";\r\nimport { ArtCharDatabase } from \"../Database/Database\";\r\nimport i18n from \"../i18n\";\r\nimport { CharacterKey, CharacterSheetKey, charKeyToCharName } from \"../Types/consts\";\r\nimport { FilterConfigs, SortConfigs } from \"./SortByFilters\";\r\nexport const characterSortKeys = [\"new\", \"level\", \"rarity\", \"name\",] as const\r\nexport type CharacterSortKey = typeof characterSortKeys[number]\r\n\r\nexport function characterSortConfigs(database: ArtCharDatabase, characterSheets: Record<CharacterSheetKey, CharacterSheet>): SortConfigs<CharacterSortKey, CharacterKey> {\r\n  return {\r\n    new: {\r\n      getValue: (ck) => database.chars.get(ck as CharacterKey) ? 0 : 1,\r\n      tieBreaker: \"name\"\r\n    },\r\n    name: {\r\n      getValue: (ck) => i18n.t(`charNames_gen:${charKeyToCharSheetKey(ck, database.gender)}`).toString(),\r\n    },\r\n    level: {\r\n      getValue: (ck) => {\r\n        const char = database.chars.get(ck as CharacterKey)\r\n        if (!char) return 0\r\n        return char.level * char.ascension\r\n      },\r\n      tieBreaker: \"rarity\"\r\n    },\r\n    rarity: {\r\n      getValue: (ck) => characterSheets?.[charKeyToCharSheetKey(ck, database.gender)]?.rarity,\r\n      tieBreaker: \"level\"\r\n    }\r\n  }\r\n}\r\n\r\nexport type CharacterFilterConfigs = FilterConfigs<\"element\" | \"weaponType\" | \"favorite\" | \"name\", CharacterKey>\r\nexport function characterFilterConfigs(database: ArtCharDatabase, characterSheets: Record<CharacterSheetKey, CharacterSheet>): CharacterFilterConfigs {\r\n  return {\r\n    element: (ck, filter) => filter.includes(characterSheets?.[charKeyToCharSheetKey(ck, database.gender)]?.elementKey),\r\n    weaponType: (ck, filter) => filter.includes(characterSheets?.[charKeyToCharSheetKey(ck, database.gender)]?.weaponTypeKey),\r\n    favorite: (ck, filter) =>\r\n      !filter || (filter === (database.states.getWithInit(`charMeta_${ck}`, initCharMeta).favorite ? \"yes\" : \"no\")),\r\n    name: (ck, filter) => !filter || (i18n.t(`charNames_gen:${charKeyToCharName(ck)}`).toLowerCase().includes(filter.toLowerCase()))\r\n  }\r\n}\r\n","import { toggleArr } from \"./Util\"\r\n\r\nexport function handleMultiSelect<T>(allKeys: T[]) {\r\n  return (arr: T[], v: T): T[] => {\r\n    const len = arr.length\r\n    if (len === allKeys.length) return [v]\r\n    if (len === 1 && arr[0] === v) return [...allKeys]\r\n    return [...new Set(toggleArr(arr, v))]\r\n  }\r\n}\r\n","type SortConfig<T> = {\r\n  getValue: (id: T) => number | string\r\n  tieBreaker?: string\r\n}\r\nexport type SortConfigs<Keys extends string, T> = Record<Keys, SortConfig<T>>\r\n\r\nexport function sortFunction<Keys extends string, T>(sortby: string, ascending: boolean, configs: SortConfigs<Keys, T>) {\r\n  function Sort(a: T, b: T, ascending: boolean, config: SortConfig<T>) {\r\n    const aV = config.getValue(a)\r\n    const bV = config.getValue(b)\r\n    let diff = 0\r\n    if (typeof aV === \"string\" && typeof bV === \"string\")\r\n      diff = aV.localeCompare(bV)\r\n    else\r\n      diff = ((bV as number) - (aV as number))\r\n    return (ascending ? -1 : 1) * diff\r\n  }\r\n  return (a: T, b: T) => {\r\n    if (!configs[sortby]) return 0\r\n    const filterOption = configs[sortby]\r\n    let diff = Sort(a, b, ascending, filterOption)\r\n    if (!diff && filterOption.tieBreaker && configs[filterOption.tieBreaker])\r\n      diff = Sort(a, b, ascending, configs[filterOption.tieBreaker])\r\n    return diff\r\n  }\r\n}\r\n\r\ntype FilterConfig<T> = (obj: T, filter: any) => boolean\r\nexport type FilterConfigs<Keys extends string, T> = Record<Keys, FilterConfig<T>>\r\nexport function filterFunction<Keys extends string, T>(filterOptions: Record<Keys, any>, filterConfigs: FilterConfigs<Keys, T>) {\r\n  return (obj: T) => Object.entries(filterOptions).every(([optionKey, optionVal]) => filterConfigs[optionKey as any] && filterConfigs[optionKey as any](obj, optionVal))\r\n}\r\n"],"names":["ArtifactCardPico","art","artifactObj","key","slotKey","artifactSheet","usePromise","setKey","ArtifactSheet","sx","display","flexDirection","height","width","pb","position","left","top","transform","opacity","component","src","Assets","mainStatKey","rarity","level","element","allElementsWithPhy","ele","includes","color","className","slotIcons","maxWidth","maxHeight","fontSize","lineHeight","pointerEvents","p","Artifact","bottom","right","StatIcon","ArtifactTooltip","children","fallback","variant","title","Suspense","ArtifactData","placement","disableInteractive","sheet","substats","slotName","getSlotName","mainStatUnit","KeyMap","mainIcon","mainVariant","artifactSlotIcon","cacheValueString","justifyContent","stars","py","map","stat","value","clamp","rolls","length","name","BootstrapTooltip","styled","props","arrow","classes","popper","theme","tooltipClasses","palette","common","black","backgroundColor","WeaponFullCard","weaponId","weapon","useWeapon","weaponSheet","WeaponSheet","UIData","useMemo","computeUIData","data","dataObjForWeapon","CardDark","Box","flexShrink","alignContent","getImg","ascension","mt","flexGrow","Typography","gutterBottom","gap","SqBadge","hasRefinement","refinement","WeaponStat","node","get","input","info","val","valueString","unit","undefined","CharacterCard","characterKey","artifactChildren","weaponChildren","characterChildren","onClick","onClickHeader","onClickTeammate","footer","hideStats","isTeammateCard","database","useContext","DatabaseContext","teamDataContext","DataContext","teamData","useTeamData","character","useCharacter","gender","useGender","characterSheet","CharacterSheet","characterDispatch","useCharacterReducer","target","onClickHandler","useCallback","actionWrapperFunc","CardActionArea","characterContextObj","dataContextObj","useDBState","initCharMeta","favorite","setCharMeta","Skeleton","minHeight","CardLight","zIndex","IconButton","_","Favorite","FavoriteBorder","ConditionalWrapper","condition","wrapper","ExistingCharacterCardContent","NewCharacterCardContent","CharacterContext","Header","HeaderContent","CardContent","Artifacts","Grid","container","columns","spacing","item","xs","WeaponCardPico","equippedWeapon","range","i","CharacterCardPico","team","index","Stats","HeaderContentNew","content","backgroundImage","bannerImg","backgroundPosition","backgroundSize","lg","alignSelf","thumbImg","pr","characterEle","characterLevel","constellation","autoBoost","skillBoost","burstBoost","tAuto","tSkill","tBurst","Chip","label","size","flexWrap","textShadow","whiteSpace","ascensionMaxLevel","colored","elementKey","artifacts","allSlotKeys","k","arts","id","direction","Object","values","getDisplay","basic","n","alignItems","teammateSheet","thumbImgSide","transformOrigin","falseWrapper","cursor","icon","faQuestionCircle","FieldsDisplay","fields","FieldDisplayList","m","field","FieldDisplay","ListItem","oldData","canShow","isEmpty","oldNode","oldValue","NodeFieldDisplay","suffix","textSuffix","BasicFieldDisplay","v","evalIfFunc","text","toFixed","fixed","emphasize","setFormulaData","FormulaDataContext","fieldText","isTeamBuff","fieldFormulaText","formula","fieldVal","diff","formulaTextOverlay","allAmpReactions","mr","AmpReactionModeText","reaction","trigger","subVariant","Divider","orientation","flexItem","boxShadow","Groups","noWrap","List","light","dark","palletOption","borderRadius","shape","overflow","margin","SortByButton","sortKeys","onChange","ascending","onChangeAsc","t","useTranslation","i18nKey","selected","disabled","startIcon","faSortAmountDownAlt","faSortAmountUp","StarIcon","faStar","StarsDisplay","Array","keys","ToggleButton","shouldForwardProp","prop","baseColor","selectedColor","main","contrastText","elementHandler","handleMultiSelect","allElements","ElementToggle","ToggleButtonGroup","exclusive","weaponTypeHandler","allWeaponTypeKeys","WeaponToggle","wt","tooltipAddl","WeaponStatPico","addlText","WeaponNameTooltip","weaponType","createContext","onModalOpen","onModalClose","FormulaDataWrapper","useBoolState","open","onOpen","onClose","useState","setState","Provider","modalOpen","tr","strKey","ns","key18","trm","teamSize","sum","tally","pcNodes","objectKeyValueMap","e","greaterEq","percent","protectiveCanopy","desc","sections","teamBuff","ffNode","ferventFlames","st","swNode","soothingWaters","condSIPath","condSI","condReadNode","siNode","equal","shatteringIce","path","header","states","on","highVoltage","iwNodeStam","iwNodeMove","iwNodeCD","impetuousWinds","condERPath","condER","erNodeshield_","erNodeDMG_","erNodeRes_","enduringRock","sgt","condSC2elePath","condSC2ele","condSC3elePath","condSC3ele","scBase_eleMas","sc2ele_eleMas","sc3ele_eleMas","resonanceSheets","resonanceData","inferInfoMut","premod","atk_","hp_","staminaDec_","moveSPD_","cdRed_","shield_","all_dmg_","geo_enemyRes_","eleMas","infoMut","pivot","total","critRate_","initialCharacterDisplayState","sortType","characterSortKeys","pageIndex","CharacterSelectionModal","show","onHide","onSelect","filter","newFirst","state","stateDispatch","sortBy","setsortBy","setascending","characterSheets","useForceUpdate","favesDirty","setFavesDirty","useEffect","followAny","s","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","sortConfigs","characterSortConfigs","filterConfigs","characterFilterConfigs","ownedCharacterKeyList","allCharacterKeys","cKey","chars","charKeyToCharSheetKey","characterKeyList","filterFunction","sort","sortFunction","concat","autoFocus","InputProps","md","updateCharacter","follow","r","action","type","enemyOverride","statKey","set","bonusStats","deepClone","teamMateKey","conditional","teamConditional","team_","charKey","stateDirty","update","setG","useMediaQueryUp","useTheme","sm","useMediaQuery","breakpoints","up","mainStatAssumptionLevel","overrideArt","overrideWeapon","dbDirty","setDbDirty","dbDirtyDeferred","getTeamDataCalc","cache","_getTeamData","getTeamData","teamBundle","calcData","uiDataForTeam","objectMap","obj","ck","rest","cacheTeamData","getCharDataBundle","weapons","equippedArtifacts","a","char1DataBundle","Promise","all","tchar","databundle","useCustom","weaponTypeKey","weaponSheetsDataOfType","weaponSheetsData","restWeaponSheetData","mergeData","artifactSheetsData","sheetData","artifactData","isArray","dataObjForArtifact","dataObjForCharacter","weaponID","setWeapon","new","getValue","tieBreaker","i18n","toString","char","getWithInit","charKeyToCharName","toLowerCase","allKeys","arr","len","Set","toggleArr","sortby","configs","Sort","b","config","aV","bV","localeCompare","filterOption","filterOptions","entries","every","optionKey","optionVal"],"sourceRoot":""}