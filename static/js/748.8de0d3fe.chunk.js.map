{"version":3,"file":"static/js/748.8de0d3fe.chunk.js","mappings":"mSAYe,SAASA,EAAT,GAA+H,IAAtFC,EAAqF,EAAlGC,YAA2BC,EAAuE,EAAhFC,QACrDC,GAAgBC,EAAAA,EAAAA,IAAW,kBAAS,OAAHL,QAAG,IAAHA,OAAA,EAAAA,EAAKM,SAAUC,EAAAA,EAAAA,IAAkBP,EAAIM,OAA3C,GAAoD,QAACN,QAAD,IAACA,OAAD,EAACA,EAAKM,SAE3F,IAAKN,IAAQI,EACX,OAAO,SAAC,IAAD,CAAUI,GAAI,CAAEC,QAAS,OAAQC,cAAe,SAAUC,OAAQ,QAAlE,UACL,SAAC,IAAD,CAAKH,GAAI,CAAEI,MAAO,OAAQC,GAAI,OAAQC,SAAU,YAAhD,UACE,SAAC,IAAD,CACEN,GAAI,CACFM,SAAU,WACVF,MAAO,MAAOD,OAAQ,MACtBI,KAAM,MAAOC,IAAK,MAClBC,UAAW,wBACXC,QAAS,IAEXC,UAAU,MACVC,IAAKC,EAAAA,EAAAA,KAAYnB,SAMzB,IAAQoB,EAA+BtB,EAA/BsB,YAAaC,EAAkBvB,EAAlBuB,OAAQC,EAAUxB,EAAVwB,MACvBC,EAAUC,EAAAA,GAAAA,MAAwB,SAAAC,GAAG,OAAI3B,EAAIsB,YAAYM,SAASD,EAA7B,IACrCE,EAAK,OAAGJ,QAAH,IAAGA,EAAAA,EAAW,YAEzB,OAAO,SAAC,IAAD,CAAiBzB,IAAKA,EAAtB,UAA2B,UAAC,IAAD,CAAUQ,GAAI,CAAEC,QAAS,OAAQC,cAAe,SAAUI,SAAU,YAApE,WAChC,SAAC,IAAD,CACEK,UAAU,MACVW,UAAS,eAAUP,EAAV,QACTH,IAAKhB,EAAc2B,UAAU7B,GAC7B8B,SAAS,OACTC,UAAU,UAEZ,SAAC,IAAD,CAAYzB,GAAI,CAAEM,SAAU,WAAYoB,SAAU,UAAWC,WAAY,EAAGjB,QAAS,IAAMkB,cAAe,QAA1G,UACE,6BAAQ,SAAC,IAAD,CAAS5B,GAAI,CAAE6B,EAAG,IAAOR,MAAOS,EAAAA,GAAAA,aAAsBd,GAAtD,UAA8D,kCAAUA,YAElF,SAAC,IAAD,CAAYhB,GAAI,CAAEM,SAAU,WAAYoB,SAAU,UAAWC,WAAY,EAAGjB,QAAS,IAAMkB,cAAe,OAAQG,OAAQ,EAAGC,MAAO,GAApI,UACE,SAAC,IAAD,CAASX,MAAOA,EAAOrB,GAAI,CAAE6B,EAAG,IAAhC,SAAwCI,EAAAA,EAASnB,WAGtD,C,iOCtCc,SAASoB,EAAT,GAA8F,IAAnE1C,EAAkE,EAAlEA,IAAK2C,EAA6D,EAA7DA,SACvCC,GAAW,SAAC,IAAD,WACf,SAAC,IAAD,CAAUC,QAAQ,cAAcjC,MAAO,IAAKD,OAAQ,QAEhDmC,GAAQ,SAAC,EAAAC,SAAD,CAAUH,SAAUA,EAApB,UACZ,SAACI,EAAD,CAAchD,IAAKA,MAGrB,OAAO,SAAC,IAAD,CAAkBiD,UAAU,MAAMH,MAAOA,EAAOI,oBAAkB,EAAlE,SACJP,GAEJ,CACD,SAASK,EAAT,GAA0D,IAAD,EAAjChD,EAAiC,EAAjCA,IAChBmD,GAAQ9C,EAAAA,EAAAA,IAAW,kBAAME,EAAAA,EAAAA,IAAkBP,EAAIM,OAA5B,GAAqC,CAACN,EAAIM,SAC3DH,EAAkDH,EAAlDG,QAASqB,EAAyCxB,EAAzCwB,MAAOD,EAAkCvB,EAAlCuB,OAAQD,EAA0BtB,EAA1BsB,YAAa8B,EAAapD,EAAboD,SACvCC,EAAQ,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAOG,YAAYnD,GAC9BoD,EAAeC,EAAAA,GAAAA,KAAYlC,GAC3BmC,EAAWhB,EAAAA,EAASnB,GACpBoC,EAAcF,EAAAA,GAAAA,WAAkBlC,GACtC,OAAO,UAAC,IAAD,CAAKe,EAAG,EAAR,WACL,UAAC,IAAD,CAAYQ,QAAQ,KAApB,WAA0Bc,EAAAA,EAAAA,IAAiBxD,GAA3C,IAAsDkD,MACtD,UAAC,IAAD,CAAYR,QAAQ,YAAYhB,MAAK,UAAK6B,EAAL,SAArC,UAA+DD,EAA/D,IAA0ED,EAAAA,GAAAA,IAAWlC,GAArF,KAAoGsC,EAAAA,EAAAA,IAAgB,UAACtB,EAAAA,GAAAA,cAAuBhB,EAAaC,EAAQC,UAA7C,QAAuD,EAAGgC,EAAAA,GAAAA,KAAYlC,IAAeiC,MACzM,UAAC,IAAD,CAAYV,QAAQ,YAAYrC,GAAI,CAAEC,QAAS,OAAQoD,eAAgB,iBAAvE,WAA2F,SAAC,IAAD,CAAcC,MAAOvC,KAAU,UAAC,IAAD,CAASM,MAAOS,EAAAA,GAAAA,aAAsBd,GAAtC,cAAgDA,KAA1K,QACA,SAAC,IAAD,CAAKuC,GAAI,EAAT,SACGX,EAASY,KAAI,SAACC,GAAD,QAA4BA,EAAKC,QAAS,UAAC,IAAD,CAA2BrC,MAAK,eAASsC,EAAAA,EAAAA,IAAMF,EAAKG,MAAMC,OAAQ,EAAG,GAArC,SAAhC,UACrD5B,EAAAA,EAASwB,EAAK/D,KADuC,IAChCsD,EAAAA,GAAAA,OAAcS,EAAK/D,KADa,KACP,wCAAa0D,EAAAA,EAAAA,IAAiBK,EAAKC,MAAOV,EAAAA,GAAAA,KAAYS,EAAK/D,OAA3D,OAAmEsD,EAAAA,GAAAA,KAAYS,EAAK/D,UAD5D+D,EAAK/D,IAAhE,OAKhB,SAAC,IAAD,CAAY2B,MAAM,eAAlB,gBAAkCsB,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAOmB,SAE5C,C,uHC3CKC,GAAmBC,EAAAA,EAAAA,KAAO,gBAAG1C,EAAH,EAAGA,UAAc2C,GAAjB,mBAC9B,SAAC,KAAD,kBAAaA,GAAb,IAAoBC,OAAK,EAACC,QAAS,CAAEC,OAAQ9C,KADf,GAAP0C,EAEtB,kBAAGK,EAAH,EAAGA,MAAH,mCACMC,EAAAA,EAAAA,OAAyB,CAC9BjD,MAAOgD,EAAME,QAAQC,OAAOC,SAF7B,sBAIMH,EAAAA,EAAAA,SAA2B,CAChCI,gBAAiBL,EAAME,QAAQC,OAAOC,MACtCjD,SAAU,MANX,KASH,K,scCCe,SAASmD,EAAT,GAA6D,IAAnCC,EAAkC,EAAlCA,SACjCC,GAASC,EAAAA,EAAAA,GAAUF,GACnBG,GAAclF,EAAAA,EAAAA,IAAW,kBAAY,OAANgF,QAAM,IAANA,OAAA,EAAAA,EAAQnF,MAAOsF,EAAAA,EAAAA,IAAgBH,EAAOnF,IAA5C,GAAkD,QAACmF,QAAD,IAACA,OAAD,EAACA,EAAQnF,MACpFuF,GAASC,EAAAA,EAAAA,UAAQ,kBAAMH,GAAeF,IAAUM,EAAAA,EAAAA,IAAc,CAACJ,EAAYK,MAAMC,EAAAA,EAAAA,IAAiBR,IAAjF,GAA4F,CAACE,EAAaF,IACjI,OAAKA,GAAWE,GAAgBE,GACzB,SAACK,EAAA,EAAD,WACL,UAACC,EAAA,EAAD,CAAKtF,QAAQ,OAAb,WACE,SAACsF,EAAA,EAAD,CAAKC,WAAY,EAAGhE,SAAS,MAAMvB,QAAQ,OAAOC,cAAc,SAASuF,aAAa,WAAWnE,UAAS,eAAUyD,EAAYhE,OAAtB,QAA1G,UACE,SAACwE,EAAA,EAAD,CACE5E,UAAU,MACVC,IAAKmE,EAAYW,OAAOb,EAAOc,WAC/BvF,MAAM,OACND,OAAO,OACPH,GAAI,CAAE4F,GAAI,aAGd,UAACL,EAAA,EAAD,CAAKM,SAAU,EAAG7F,GAAI,CAAE6B,EAAG,GAA3B,WACE,SAACiE,EAAA,EAAD,CAAYzD,QAAQ,QAAQ0D,cAAY,EAAxC,UAAyC,mCAAShB,QAAT,IAASA,OAAT,EAASA,EAAajB,UAC/D,UAACgC,EAAA,EAAD,CAAYzD,QAAQ,YAAYrC,GAAI,CAAEC,QAAS,OAAQ+F,IAAK,GAAKD,cAAY,EAA7E,WACE,UAACE,EAAA,EAAD,CAAS5E,MAAM,UAAf,iBAA8B2D,EAAAA,EAAAA,eAA2BH,MACxDE,EAAYmB,gBAAiB,UAACD,EAAA,EAAD,CAAS5E,MAAM,OAAf,cAAwBwD,EAAOsB,kBAE/D,UAACL,EAAA,EAAD,CAAYzD,QAAQ,YAAYrC,GAAI,CAAEC,QAAS,OAAQ+F,IAAK,GAA5D,WACE,SAACI,EAAD,CAAYC,KAAMpB,EAAOqB,IAAIC,EAAAA,GAAAA,OAAAA,SAC7B,SAACH,EAAD,CAAYC,KAAMpB,EAAOqB,IAAIC,EAAAA,GAAAA,OAAAA,kBApBU,IA0BhD,CACD,SAASH,EAAT,GAAsD,IAAhCC,EAA+B,EAA/BA,KACpB,IAAKA,EAAKG,KAAK9G,IAAK,OAAO,KAC3B,IAAM+G,GAAMC,EAAAA,EAAAA,IAAYL,EAAK3C,MAAO2C,EAAKM,KAAON,EAAKM,UAAWC,EAAJ,GAC5D,OAAO,UAACX,EAAA,EAAD,CAAS5E,MAAM,YAAf,UAA4BY,EAAAA,EAASoE,EAAKG,KAAK9G,KAA/C,IAAsD+G,IAC9D,C,yDCRc,SAASI,EAAT,GAAoL,IAAD,IAA1JC,EAA0J,EAA1JA,aAAcC,EAA4I,EAA5IA,iBAAkBC,EAA0H,EAA1HA,eAAgBC,EAA0G,EAA1GA,kBAAmBC,EAAuF,EAAvFA,QAASC,EAA8E,EAA9EA,cAAeC,EAA+D,EAA/DA,gBAAiBC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,eACxIC,GAAoBC,EAAAA,EAAAA,YAAWC,EAAAA,GAAzCC,SACFA,EAAQ,WAAGC,EAAAA,EAAAA,GAAYJ,EAAkB,GAAKT,UAAtC,QAAwDS,EAChEK,GAAYC,EAAAA,EAAAA,GAAaf,GACzBgB,GAAiBjI,EAAAA,EAAAA,IAAW,kBAAMkI,EAAAA,EAAAA,IAAmBjB,EAAzB,GAAwC,CAACA,IACrEkB,GAAoBC,EAAAA,EAAAA,GAAoBnB,GACxC1B,EAAI,OAAGsC,QAAH,IAAGA,GAAH,UAAGA,EAAWZ,UAAd,aAAG,EAA0BoB,OACjCC,GAAiBC,EAAAA,EAAAA,cAAY,kBAAMtB,IAAY,OAAII,QAAJ,IAAIA,OAAJ,EAAIA,EAAUJ,GAAhC,GAA+C,CAACA,EAAcI,IAC3FmB,GAAoBD,EAAAA,EAAAA,cACxB,SAAAjG,GAAQ,OAAI,SAACmG,EAAA,EAAD,CAAgBpB,QAASiB,EAAgBnI,GAAI,CAAE6F,SAAU,EAAG5F,QAAS,OAAQC,cAAe,UAA5F,SAAyGiC,GAA7G,GACR,CAACgG,IAGGI,GAAuDrD,EAAAA,EAAAA,UAAQ,kBAAM0C,GAAaE,GAAkB,CACxGF,UAAAA,EAAWE,eAAAA,EAAgBE,kBAAAA,EADwC,GAElE,CAACJ,EAAWE,EAAgBE,IACzBQ,GAA6CtD,EAAAA,EAAAA,UAAQ,kBAAME,GAAQsC,GAAa,CACpFtC,KAAAA,EACAsC,SAAAA,EAFyD,GAGvD,CAACtC,EAAMsC,IAEX,GAAoCe,EAAAA,EAAAA,GAAW,YAAD,OAAa3B,GAAgB4B,EAAAA,GAA3E,eAASC,EAAT,KAASA,SAAYC,GAArB,KAEA,OAAKhB,GAAcY,GAAmBD,GAE/B,SAAC,EAAAhG,SAAD,CAAUH,UAAU,SAACyG,EAAA,EAAD,CAAUxG,QAAQ,cAAcrC,GAAI,CAAEI,MAAO,OAAQD,OAAQ,OAAQ2I,UAAW,OAApG,UACL,SAACC,EAAA,WAAD,CAA2BrF,MAAO6E,EAAlC,UAAuD,SAACd,EAAA,WAAD,CAAsB/D,MAAO8E,EAA7B,UACrD,UAACQ,EAAA,EAAD,CAAWhJ,GAAI,CAAEG,OAAQ,OAAQF,QAAS,OAAQC,cAAe,UAAjE,WACE,SAACqF,EAAA,EAAD,CAAKvF,GAAI,CAAEC,QAAS,OAAQK,SAAU,WAAY2I,OAAQ,EAAGvI,QAAS,IAAtE,UACE,SAACwI,EAAA,EAAD,CAAYlJ,GAAI,CAAE6B,EAAG,IAAOqF,QAAS,SAAAiC,GAAC,OAAIP,GAAY,CAAED,UAAWA,GAA7B,EAAtC,SACGA,GAAW,SAACS,EAAA,EAAD,KAAe,SAACC,EAAA,EAAD,SAG/B,UAACC,EAAA,EAAD,CAAoBC,YAAarC,EAASsC,QAASnB,EAAnD,WACE,SAACoB,EAAD,CAAQvC,QAAUA,OAA0BN,EAAhBO,KAC5B,UAACuC,EAAA,EAAD,CAAa1J,GAAI,CAAEI,MAAO,OAAQH,QAAS,OAAQC,cAAe,SAAU8F,IAAK,EAAGH,SAAU,GAA9F,WACE,SAAC8D,EAAD,KACErC,IAAkB,UAACsC,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAS,IAArC,WAClB,SAACH,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,EAAG9J,OAAO,OAAzB,UACE,SAAC+J,EAAA,EAAD,CAAgBtF,SAAUgD,EAAUuC,oBAErCC,EAAAA,EAAAA,IAAM,EAAG,GAAG5G,KAAI,SAAA6G,GAAC,OAAI,SAACT,EAAA,GAAD,CAAcI,MAAI,EAACC,GAAI,EAAG9J,OAAO,OAAjC,UAAwC,SAACmK,EAAA,EAAD,CAAmBxD,aAAcc,EAAU2C,KAAKF,GAAInD,QAAUA,OAA4BN,EAAlBQ,EAA6BoD,MAAOH,KAAzIA,EAAf,OAEnB/C,IAAkB,SAAC3C,EAAD,CAAgBC,SAAUgD,EAAUuC,kBACrD7C,IAAkB,SAACmD,EAAD,IACnBzD,EACAD,EACAE,QAGJI,WA3B2D,IA+BnE,CACD,SAASoC,EAAT,GAAkF,IAAhEvC,EAA+D,EAA/DA,QACRY,GAAmBN,EAAAA,EAAAA,YAAWuB,EAAAA,GAA9BjB,eACA1C,GAASoC,EAAAA,EAAAA,YAAWC,EAAAA,GAApBrC,KACF0B,EAAe1B,EAAKkB,IAAIC,EAAAA,GAAAA,SAAe7C,MACvCgH,EAAetF,EAAKkB,IAAIC,EAAAA,GAAAA,SAAe7C,MACvCiH,EAAiBvF,EAAKkB,IAAIC,EAAAA,GAAAA,KAAW7C,MACrCkH,EAAgBxF,EAAKkB,IAAIC,EAAAA,GAAAA,eAAqB7C,MAC9CiC,EAAYP,EAAKkB,IAAIC,EAAAA,GAAAA,KAAW7C,MAChCmH,EAAYzF,EAAKkB,IAAIC,EAAAA,GAAAA,MAAAA,MAAkB7C,MACvCoH,EAAa1F,EAAKkB,IAAIC,EAAAA,GAAAA,MAAAA,OAAmB7C,MACzCqH,EAAa3F,EAAKkB,IAAIC,EAAAA,GAAAA,MAAAA,OAAmB7C,MAEzCsH,EAAQ5F,EAAKkB,IAAIC,EAAAA,GAAAA,MAAAA,MAAkB7C,MACnCuH,EAAS7F,EAAKkB,IAAIC,EAAAA,GAAAA,MAAAA,OAAmB7C,MACrCwH,EAAS9F,EAAKkB,IAAIC,EAAAA,GAAAA,MAAAA,OAAmB7C,MAErC2E,GAAoBD,EAAAA,EAAAA,cACxB,SAAAjG,GAAQ,OAAI,SAACmG,EAAA,EAAD,CAAgBpB,QAAS,kBAAMJ,IAAY,OAAII,QAAJ,IAAIA,OAAJ,EAAIA,EAAUJ,GAAhC,EAA+C9G,GAAI,CAAE6F,SAAU,EAAG5F,QAAS,OAAQC,cAAe,UAA3H,SAAwIiC,GAA5I,GACR,CAAC+E,EAASJ,IAEZ,OAAO,SAACwC,EAAA,EAAD,CAAoBC,YAAarC,EAASsC,QAASnB,EAAnD,UACL,UAAC9C,EAAA,EAAD,CAAKtF,QAAQ,OACXK,SAAS,WACTgB,UAAS,eAAUwG,EAAe/G,OAAzB,QACTf,GAAI,CACF,YAAa,CACXmL,QAAS,KACTlL,QAAS,QAASK,SAAU,WAC5BC,KAAM,EAAGC,IAAK,EACdJ,MAAO,OAAQD,OAAQ,OACvBO,QAAS,GACT0K,gBAAgB,OAAD,OAAStD,EAAeuD,UAAxB,KAAsCC,mBAAoB,SAAUC,eAAgB,UAGvGnL,MAAM,OAbR,WAcE,SAACmF,EAAA,EAAD,CAAKC,WAAY,EAAGxF,GAAI,CAAEwB,SAAU,CAAEyI,GAAI,MAAOuB,GAAI,QAAWC,UAAU,WAAWxL,QAAQ,OAAOC,cAAc,SAAS+I,OAAQ,EAAnI,UACE,SAAC1D,EAAA,EAAD,CACE5E,UAAU,MACVC,IAAKkH,EAAe4D,SACpBtL,MAAM,OACND,OAAO,OACPqB,SAAU,IACVxB,GAAI,CAAE4F,GAAI,aAGd,UAACL,EAAA,EAAD,CAAKM,SAAU,EAAG7F,GAAI,CAAEuD,GAAI,EAAGoI,GAAI,GAAK1L,QAAQ,OAAOC,cAAc,SAAS+I,OAAQ,EAAtF,WACE,SAAC2C,EAAA,EAAD,CAAMC,OAAO,SAAC/F,EAAA,EAAD,CAAYzD,QAAQ,YAApB,SAAiCyF,EAAehE,OAAoBgI,KAAK,QAAQzK,MAAOqJ,EAAc1K,GAAI,CAAEU,QAAS,QAClI,UAACkJ,EAAA,GAAD,CAAMC,WAAS,EAACE,QAAS,EAAGgC,SAAS,SAArC,WACE,UAACnC,EAAA,GAAD,CAAMI,MAAI,EAAChK,GAAI,CAAEgM,WAAY,gBAA7B,WACE,UAAClG,EAAA,EAAD,CAAYnF,UAAU,OAAO0B,QAAQ,KAAK4J,WAAW,SAArD,iBAAoEtB,MACpE,UAAC7E,EAAA,EAAD,CAAYnF,UAAU,OAAO0B,QAAQ,KAAKhB,MAAM,iBAAhD,cAAmE6K,EAAAA,GAAkBvG,UAEvF,SAACiE,EAAA,GAAD,CAAMI,MAAI,EAAV,UACE,SAAClE,EAAA,EAAD,CAAYzD,QAAQ,KAApB,UAAyB,UAAC4D,EAAA,EAAD,eAAW2E,aAGxC,UAAChB,EAAA,GAAD,CAAMC,WAAS,EAACE,QAAS,EAAGgC,SAAS,SAArC,WACE,SAACnC,EAAA,GAAD,CAAMI,MAAI,EAAV,UACE,SAAC4B,EAAA,EAAD,CAAMvK,MAAOwJ,EAAY,OAAS,YAAagB,OAAO,4BAAUb,SAElE,SAACpB,EAAA,GAAD,CAAMI,MAAI,EAAV,UACE,SAAC4B,EAAA,EAAD,CAAMvK,MAAOyJ,EAAa,OAAS,YAAae,OAAO,4BAAUZ,SAEnE,SAACrB,EAAA,GAAD,CAAMI,MAAI,EAAV,UACE,SAAC4B,EAAA,EAAD,CAAMvK,MAAO0J,EAAa,OAAS,YAAac,OAAO,4BAAUX,YAGrE,SAACpF,EAAA,EAAD,CAAYF,GAAI,EAAhB,UAAoB,SAAC,IAAD,CAActC,MAAOwE,EAAe/G,OAAQoL,SAAO,aAI9E,CACD,SAASxC,IACP,IAAQyC,GAAa5E,EAAAA,EAAAA,YAAW6E,EAAAA,GAAxBD,SACAhH,GAASoC,EAAAA,EAAAA,YAAWC,EAAAA,GAApBrC,KACFkH,GAAYpH,EAAAA,EAAAA,UAAQ,kBACxBqH,EAAAA,GAAAA,KAAgB,SAAAC,GAAC,YAAI,CAACA,EAAGJ,EAASK,KAAKnG,IAAd,UAAkBlB,EAAKkB,IAAIC,EAAAA,GAAAA,IAAUiG,GAAGE,IAAIhJ,aAA5C,QAAqD,IAA7D,GADO,GAExB,CAAC0B,EAAMgH,IAET,OAAO,SAACxC,EAAA,GAAD,CAAM+C,UAAU,MAAM9C,WAAS,EAACE,QAAS,IAAMD,QAAS,EAAxD,SACJwC,EAAU9I,KAAI,+BAAE9D,EAAF,KAAOF,EAAP,YACb,SAACoK,EAAA,GAAD,CAAMI,MAAI,EAAWC,GAAI,EAAzB,UACE,SAAC1K,EAAA,EAAD,CAAkBE,YAAaD,EAAKG,QAASD,KAD/BA,EADH,KAMlB,CAED,SAAS+K,IACP,IAAQrF,GAASoC,EAAAA,EAAAA,YAAWC,EAAAA,GAApBrC,KACR,OAAO,UAACG,EAAA,EAAD,CAAKvF,GAAI,CAAEI,MAAO,QAAlB,UACJwM,OAAOC,OAAOzH,EAAK0H,aAAaC,OAAOvJ,KAAI,SAAAwJ,GAAC,OAAI,SAAC,KAAD,CAAmC3G,KAAM2G,GAAlBA,EAAExG,KAAK9G,IAAlC,IAC5C0F,EAAKkB,IAAIC,EAAAA,GAAAA,SAAeC,KAAK9G,MAAO,UAAC6F,EAAA,EAAD,CAAKvF,GAAI,CAAEC,QAAS,OAAQ+F,IAAK,EAAGiH,WAAY,UAAhD,WACnC,SAACnH,EAAA,EAAD,CAAYD,SAAU,EAAtB,UAAyB,+CACxB5D,EAAAA,EAASmD,EAAKkB,IAAIC,EAAAA,GAAAA,SAAeC,KAAK9G,MACvC,SAACoG,EAAA,EAAD,UAAa9C,EAAAA,GAAAA,IAAWoC,EAAKkB,IAAIC,EAAAA,GAAAA,SAAeC,KAAK9G,YAG1D,C,wOCpLc,SAAS4K,EAAT,GAA6K,IAAD,IAA/IxD,aAAAA,OAA+I,MAAhI,GAAgI,MAA5H0D,MAAAA,OAA4H,OAAnH,EAAmH,EAAhHtD,EAAgH,EAAhHA,QACnEgG,GAAgBrN,EAAAA,EAAAA,IAAW,kBAAMkI,EAAAA,EAAAA,IAAmBjB,EAAzB,GAAwC,CAACA,IACpEc,GAAYC,EAAAA,EAAAA,GAAaf,GACzBqB,GAAiBC,EAAAA,EAAAA,cAAY,kBAAMtB,IAAY,OAAII,QAAJ,IAAIA,OAAJ,EAAIA,EAAUJ,GAAhC,GAA+C,CAACA,EAAcI,IAC3FmB,GAAoBD,EAAAA,EAAAA,cACxB,SAAAjG,GAAQ,OAAI,SAAC,IAAD,CAAgB+E,QAASiB,EAAzB,SAA0ChG,GAA9C,GACR,CAACgG,IACH,GAAI+E,GAAiBtF,EAAW,CAC9B,IAAMtF,GAAQ,SAAC,EAAAC,SAAD,CAAUH,UAAU,SAAC,IAAD,CAAUC,QAAQ,OAAOjC,MAAO,MAApD,UACZ,UAAC,IAAD,WAAa8M,EAAcC,YAAclL,EAAAA,EAASiL,EAAcC,YAAhE,IAA8ED,EAAcpJ,UAG9F,OAAO,SAAC,IAAD,CAAU9D,GAAI,CAAEwB,SAAU,IAAKlB,SAAU,WAAYL,QAAS,OAAQC,cAAe,UAArF,UACL,UAAC,IAAD,CAAoBqJ,YAAarC,EAASsC,QAASnB,EAAnD,WACE,SAAC,IAAD,CAAkB5F,UAAU,MAAMH,MAAOA,EAAzC,UACE,SAAC,IAAD,CAAKrC,QAAQ,OAAOqB,UAAS,eAAU4L,EAAcnM,OAAxB,QAA7B,UACE,SAAC,IAAD,CACEJ,UAAU,MACVC,IAAKsM,EAAcE,aACnB5L,SAAS,OACTC,UAAU,OACVzB,GAAI,CAAES,UAAW,aAAc4M,gBAAiB,iBAItD,SAAC,IAAD,CAAYrN,GAAI,CAAEM,SAAU,WAAYoB,SAAU,UAAWC,WAAY,EAAGjB,QAAS,IAAMkB,cAAe,OAAQpB,IAAK,GAAvH,UACE,6BAAQ,UAAC,IAAD,CAASa,MAAM,UAAf,UAA2BuG,EAAU5G,MAArC,IAA6CkL,EAAAA,GAAkBtE,EAAUjC,mBAEnF,SAAC,IAAD,CAAY3F,GAAI,CAAEM,SAAU,WAAYoB,SAAU,UAAWC,WAAY,EAAGjB,QAAS,IAAMkB,cAAe,OAAQG,OAAQ,EAAGC,MAAO,GAApI,UACE,6BAAQ,UAAC,IAAD,CAASX,MAAM,YAAf,cAA8BuG,EAAUgD,yBAIvD,CACC,OAAO,SAAC,IAAD,CAAU5K,GAAI,CAAEC,QAAS,OAAQgN,WAAY,SAAU5J,eAAgB,SAAUE,GAAI,SAArF,UACL,SAAC,IAAD,CAAK5C,UAAU,MAAMC,IAAKC,EAAAA,EAAAA,KAAA,cAAmB2J,EAAQ,IAAMxK,GAAI,CAAEI,MAAO,MAAOD,OAAQ,OAAQO,QAAS,OAG7G,C,8eCtBK4M,EAAkB,CAAC,QAAS,SAAU,QAYrC,SAASC,EAAT,GAAmI,IAAhGC,EAA+F,EAA/FA,KAAMC,EAAyF,EAAzFA,OAAQC,EAAiF,EAAjFA,SAAiF,IAAvEC,OAAAA,OAAuE,MAA9D,kBAAM,CAAN,EAA8D,MAAlDC,SAAAA,OAAkD,SACjIC,GAAW3I,EAAAA,EAAAA,UAAQ,kBAAM0I,EAAQ,CAAI,OAAJ,OAAcN,GAAmBA,CAA/C,GAAgE,CAACM,IAClFxB,GAAa5E,EAAAA,EAAAA,YAAW6E,EAAAA,GAAxBD,SACA0B,GAAMC,EAAAA,EAAAA,GAAe,CAAC,iBAAkB,kBAAxCD,EAER,GAA4BE,EAAAA,EAAAA,UAASH,EAAS,IAA9C,eAAOI,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA8CJ,EAAAA,EAAAA,WAAS,OAAIK,EAAAA,IAA3D,eAAOC,EAAP,KAAwBC,EAAxB,KACA,GAAwCP,EAAAA,EAAAA,WAAS,OAAIQ,EAAAA,KAArD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAkB9O,EAAAA,EAAAA,IAAW,kBAAMkI,EAAAA,EAAAA,MAAN,GAA6B,IAEhE,GAAoC6G,EAAAA,EAAAA,KAApC,eAAOC,GAAP,KAAmBC,GAAnB,MACAC,EAAAA,EAAAA,YAAU,WACR,OAAO3C,EAAS4C,OAAOC,WAAU,SAAAC,GAAC,MAAiB,kBAANA,GAAkBA,EAAE9N,SAAS,cAAgB0N,IAAxD,GACnC,GAAE,CAACA,GAAe1C,IAEnB,QAAoC4B,EAAAA,EAAAA,UAAS,IAA7C,iBAAOmB,GAAP,MAAmBC,GAAnB,MACMC,IAAqBC,EAAAA,EAAAA,kBAAiBH,IAEtCI,IAAcrK,EAAAA,EAAAA,UAAQ,kBAAMyJ,IAAmBa,EAAAA,EAAAA,IAAqBpD,EAAUuC,EAAxD,GAA0E,CAACvC,EAAUuC,IAC3Gc,IAAgBvK,EAAAA,EAAAA,UAAQ,kBAAMyJ,GAAmBE,KAAca,EAAAA,EAAAA,IAAuBtD,EAAUuC,EAAxE,GAA0F,CAACE,GAAYzC,EAAUuC,IACzIgB,IAAwBzK,EAAAA,EAAAA,UAAQ,kBAAMyJ,EAAkBiB,EAAAA,GAAAA,QAAwB,SAAAC,GAAI,OAAIlC,EAAOvB,EAAS0D,MAAMxJ,IAAIuJ,GAAOlB,EAAgBkB,GAArD,IAA+D,EAAnH,GAAuH,CAACzD,EAAUuC,EAAiBhB,IACnLoC,IAAmB7K,EAAAA,EAAAA,UAAQ,kBAAOyJ,GAAmBY,IAAeE,GACxEE,GACGhC,QAAOqC,EAAAA,EAAAA,GAAe,CAAE/O,QAASqN,EAAiB2B,WAAYxB,EAAc9F,SAAU,MAAO7E,KAAMuL,IAAsBI,KACzHS,MAAKC,EAAAA,EAAAA,GAAalC,EAAQE,EAAWoB,KACrCa,OACCT,GACGhC,QAAOqC,EAAAA,EAAAA,GAAe,CAAE/O,QAASqN,EAAiB2B,WAAYxB,EAAc9F,SAAU,KAAM7E,KAAMuL,IAAsBI,KACxHS,MAAKC,EAAAA,EAAAA,GAAalC,EAAQE,EAAWoB,MAE1C,EAT6B,GAU/B,CAACZ,EAAiBL,EAAiBG,EAAcR,EAAQE,EAAWoB,GAAaE,GAAeE,GAAuBN,KAEzH,OAAKV,GACE,SAAC,IAAD,CAAc0B,KAAM7C,EAAM8C,QAAS7C,EAAQzN,GAAI,CAAE,uBAAwB,CAAEqD,eAAgB,WAA3F,UACL,UAAC,IAAD,YACE,SAAC,IAAD,CAAarD,GAAI,CAAEuD,GAAI,GAAvB,UACE,UAAC,KAAD,CAAMsG,WAAS,EAACE,QAAS,EAAGgC,SAAS,SAArC,WACE,SAAC,KAAD,CAAM/B,MAAI,EAAV,UACE,SAAC,IAAD,CAAchK,GAAI,CAAEG,OAAQ,QAAUoQ,SAAU7B,EAAiBhL,MAAO+K,EAAc3C,KAAK,aAE7F,SAAC,KAAD,CAAM9B,MAAI,EAAV,UACE,SAAC,IAAD,CAAehK,GAAI,CAAEG,OAAQ,QAAUoQ,SAAUhC,EAAoB7K,MAAO4K,EAAiBxC,KAAK,aAEpG,SAAC,KAAD,CAAM9B,MAAI,EAACxE,WAAY,EAAvB,UACE,SAAC,IAAD,CACEgL,WAAS,EACT9M,MAAOyL,GACPoB,SAAU,SAACE,GAAD,OAAyCrB,GAAcqB,EAAEvI,OAAOxE,MAAhE,EACVmI,MAAOiC,EAAE,iBACThC,KAAK,QACL9L,GAAI,CAAEG,OAAQ,QACduQ,WAAY,CACV1Q,GAAI,CAAEG,OAAQ,cAKpB,SAAC,KAAD,CAAM6J,MAAI,EAAV,UACE,SAAC,IAAD,CAAchK,GAAI,CAAEG,OAAQ,QAC1B0N,SAAUA,EAAUnK,MAAOuK,EAAQsC,SAAUrC,EAC7CC,UAAWA,EAAWwC,YAAavC,OAEvC,SAAC,KAAD,CAAMpE,MAAI,EAAV,UACE,SAAC,IAAD,CAAa9C,QAASuG,YAI5B,SAAC,IAAD,KACA,SAAC,IAAD,WAAa,SAAC,KAAD,CAAM5D,WAAS,EAACE,QAAS,EAAzB,SACVgG,GAAiBvM,KAAI,SAAAsD,GAAY,OAAI,SAAC,KAAD,CAAMkD,MAAI,EAAoBC,GAAI,EAAG2G,GAAI,EAAGpF,GAAI,EAAhD,UACpC,SAACqF,EAAD,CAAiC/J,aAAcA,EAAcgB,eAAgB6G,EAAgB7H,GAAeI,QAAS,WAAQuG,IAAkB,OAARC,QAAQ,IAARA,GAAAA,EAAW5G,EAAe,GAA9IA,IADiCA,EAApB,aArCX,IA2C9B,CAED,SAAS+J,EAAT,GAAuJ,IAAD,IAA9H3J,EAA8H,EAA9HA,QAASJ,EAAqH,EAArHA,aAAcgB,EAAuG,EAAvGA,eACvCJ,GAAWC,EAAAA,EAAAA,GAAYb,GACb1B,GAAhB,iBAAyBsC,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAWZ,UAApC,QAAqD,CAAC,GAA9CoB,OACFnH,EAAS+G,EAAe/G,OACxBE,EAAUmE,EAAOA,EAAKkB,IAAIC,EAAAA,GAAAA,SAAe7C,WAAQkD,EACvD,GAAoC6B,EAAAA,EAAAA,GAAW,YAAD,OAAa3B,GAAgB4B,EAAAA,GAA3E,eAASC,EAAT,KAASA,SAAYC,EAArB,KACA,OAAO,SAAC,EAAArG,SAAD,CAAUH,UAAU,SAAC,IAAD,CAAUC,QAAQ,cAAclC,OAAQ,MAA5D,UAAqE,UAAC,IAAD,gBAC5DyG,IAAb+B,IAA0B,SAAC,IAAD,CAAK1I,QAAQ,OAAOK,SAAS,WAAWmL,UAAU,QAAQxC,OAAQ,EAAlE,UACzB,SAAC,IAAD,CAAYjJ,GAAI,CAAE6B,EAAG,IAAOqF,QAAS,kBAAM0B,EAAY,CAAED,UAAWA,GAA/B,EAArC,SACGA,GAAW,SAAC,IAAD,KAAe,SAAC,IAAD,SAG/B,SAAC,IAAD,CAAgBzB,QAASA,EAAzB,UACE,UAAC,IAAD,CAAWlH,GAAI,CAAEC,QAAS,OAAQgN,WAAY,UAA9C,WACE,SAAC,IAAD,CAAKtM,UAAU,MAAMC,IAAKkH,EAAe4D,SAAU1L,GAAI,CAAEI,MAAO,IAAKD,OAAQ,QAAUmB,UAAS,eAAUP,EAAV,WAChG,UAAC,IAAD,CAAKf,GAAI,CAAE8Q,GAAI,GAAf,WACE,SAAC,IAAD,WAAY,4BAAShJ,EAAehE,SACnCsB,GAAO,iCACN,UAAC,IAAD,CAAY/C,QAAQ,KAAKrC,GAAI,CAAEC,QAAS,OAAQ+F,IAAK,GAAKiH,WAAY,UAAtE,cAAoFhM,GAAWgB,EAAAA,EAAShB,GAAxG,KAAkH,SAAC,IAAD,CAASL,IAAG,UAAEC,EAAAA,EAAAA,mBAAF,aAAE,EAAqBiH,EAAeiJ,iBAApK,KAA4LC,EAAAA,EAAAA,IAAe5L,EAAKkB,IAAIC,EAAAA,GAAAA,KAAW7C,MAAO0B,EAAKkB,IAAIC,EAAAA,GAAAA,KAAW7C,WAC1P,UAAC,IAAD,CAAYrB,QAAQ,YAApB,WACE,SAAC,IAAD,CAAShB,MAAM,UAAf,oBAA8B+D,EAAKkB,IAAIC,EAAAA,GAAAA,eAAqB7C,SAD9D,KAEE,SAAC,IAAD,CAASrC,MAAO+D,EAAKkB,IAAIC,EAAAA,GAAAA,MAAAA,MAAkB7C,MAAQ,OAAS,YAA5D,UAAyE,4BAAU0B,EAAKkB,IAAIC,EAAAA,GAAAA,MAAAA,MAAkB7C,UAFhH,KAGE,SAAC,IAAD,CAASrC,MAAO+D,EAAKkB,IAAIC,EAAAA,GAAAA,MAAAA,OAAmB7C,MAAQ,OAAS,YAA7D,UAA0E,4BAAU0B,EAAKkB,IAAIC,EAAAA,GAAAA,MAAAA,OAAmB7C,UAHlH,KAIE,SAAC,IAAD,CAASrC,MAAO+D,EAAKkB,IAAIC,EAAAA,GAAAA,MAAAA,OAAmB7C,MAAQ,OAAS,YAA7D,UAA0E,4BAAU0B,EAAKkB,IAAIC,EAAAA,GAAAA,MAAAA,OAAmB7C,iBAE9G,+BACJ,SAAC,IAAD,CAAYrB,QAAQ,KAApB,UAAyB,SAAC,IAAD,CAAShB,MAAM,UAAf,sBAE3B,4BAAO,SAAC,IAAD,CAAciC,MAAOvC,EAAQoL,SAAO,kBAKpD,C,wBClJc,SAAS7C,EAAT,GAAmF,IAArDC,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,QAASyH,EAAgC,EAAhCA,aAAc9O,EAAkB,EAAlBA,SAC7E,OAAQoH,EAAYC,EAAQrH,GAAa8O,EAAeA,EAAa9O,GAAYA,CAClF,C,qaCED,EALwB,SAAC,GAAD,IAAGb,EAAH,EAAGA,UAAc2C,GAAjB,mBACtB,SAACF,EAAA,GAAD,gBAAkBtB,UAAU,OAAUwB,GAAtC,IAA6C3C,UAAWA,EAAxD,UACE,SAACiE,EAAA,EAAD,CAAK5E,UAAU,OAAOX,GAAI,CAAEkR,OAAQ,QAApC,UAA8C,SAAC,IAAD,CAAiBC,KAAMC,EAAAA,UAFjD,E,WCQT,SAASC,EAAT,GAAiE,IAAxCC,EAAuC,EAAvCA,OACtC,OAAO,SAACC,EAAD,CAAkBvR,GAAI,CAAEwR,EAAG,GAA3B,SACJF,EAAO9N,KAAI,SAACiO,EAAOpH,GAAR,OAAc,SAACqH,EAAD,CAAsBD,MAAOA,EAAO9Q,UAAWgR,EAAAA,IAA5BtH,EAAjC,KAEf,CAED,SAASqH,EAAT,GAAsG,IAA9ED,EAA6E,EAA7EA,MAAO9Q,EAAsE,EAAtEA,UAC7B,GAA0B6G,EAAAA,EAAAA,YAAWC,EAAAA,GAA7BrC,EAAR,EAAQA,KAAMwM,EAAd,EAAcA,QAEd,KADgB1M,EAAAA,EAAAA,UAAQ,2CAAMuM,QAAN,IAAMA,GAAN,UAAMA,EAAOI,eAAb,aAAM,OAAAJ,EAAiBrM,UAAvB,WAAsC,CAACqM,EAAOrM,IACxD,OAAO,KACrB,GAAI,SAAUqM,EAAO,CACnB,IAAMpL,EAAOjB,EAAKkB,IAAImL,EAAMpL,MAC5B,GAAIA,EAAKyL,QAAS,OAAO,KACzB,GAAIF,EAAS,CACX,IAAMG,EAAUH,EAAQtL,IAAImL,EAAMpL,MAC5B2L,EAAWD,EAAQD,QAAU,EAAIC,EAAQrO,MAC/C,OAAO,SAACuO,EAAD,CAAkB5L,KAAMA,EAAM2L,SAAUA,EAAUE,OAAQT,EAAMU,WAAYxR,UAAWA,GAC/F,CACI,OAAO,SAACsR,EAAD,CAAkB5L,KAAMA,EAAM6L,OAAQT,EAAMU,WAAYxR,UAAWA,GAChF,CACD,OAAO,SAACyR,EAAD,CAAmBX,MAAOA,EAAO9Q,UAAWA,GACpD,CAEM,SAASyR,EAAT,GAAgH,IAAD,EAAlFX,EAAkF,EAAlFA,MAAO9Q,EAA2E,EAA3EA,UACjCyE,GAASoC,EAAAA,EAAAA,YAAWC,EAAAA,GAApBrC,KACFiN,GAAIC,EAAAA,EAAAA,IAAWb,EAAM/N,MAAO0B,GAC5B/C,GAAUiQ,EAAAA,EAAAA,IAAWb,EAAMpP,QAAS+C,GACpCmN,EAAOd,EAAMc,OAAQ,0BAAOd,EAAMc,OAClCL,EAAST,EAAMU,aAAc,0BAAOV,EAAMU,aAChD,OAAO,UAAC5M,EAAA,EAAD,CAAKnF,MAAM,OAAOJ,GAAI,CAAEC,QAAS,OAAQoD,eAAgB,gBAAiB2C,IAAK,GAAKrF,UAAWA,EAA/F,WACL,UAACmF,EAAA,EAAD,CAAYzE,MAAK,UAAKgB,EAAL,SAAqBrC,GAAI,CAAEC,QAAS,OAAQ+F,IAAK,EAAGiH,WAAY,UAAjF,UAA8FsF,EAAML,MACpG,UAACpM,EAAA,EAAD,WAA2B,kBAANuM,EAAP,UAAwBA,EAAEG,eAA1B,aAAwB,OAAAH,EAAYZ,EAAMgB,OAASJ,EAAGZ,EAAM9K,UAE7E,CAEM,SAASsL,EAAT,GAAiM,IAArK5L,EAAoK,EAApKA,KAAM2L,EAA8J,EAA9JA,SAAUE,EAAoJ,EAApJA,OAAQvR,EAA4I,EAA5IA,UAAW+R,EAAiI,EAAjIA,UAC5DtN,GAASoC,EAAAA,EAAAA,YAAWC,EAAAA,GAApBrC,KACAuN,GAAmBnL,EAAAA,EAAAA,YAAWoL,EAAAA,GAA9BD,eACFzL,GAAUkB,EAAAA,EAAAA,cAAY,kBAAMuK,EAAevN,EAAMiB,EAA3B,GAAkC,CAACsM,EAAgBvN,EAAMiB,IAErF,GAAIA,EAAKyL,QAAS,OAAO,KAEzBI,EAASA,IAAU,0BAAOA,IAC1B,IAAMf,EAAO9K,EAAKG,KAAK9G,KAAOuC,EAAAA,EAASoE,EAAKG,KAAK9G,KAC3CmT,EAAYxM,EAAKG,KAAK9G,IAAMsD,EAAAA,GAAAA,IAAWqD,EAAKG,KAAK9G,KAAO,GACxDoT,EAAazM,EAAKG,KAAKsM,WACvBC,EAAmB1M,EAAK2M,QAC1BC,EAAW,GACf,QAAiBrM,IAAboL,EAAwB,CAC1B,IAAMkB,EAAO7M,EAAK3C,MAAQsO,EAC1BiB,GAAW,6BAAOvM,EAAAA,EAAAA,IAAYsL,EAAU3L,EAAKM,MAAOuM,EAAO,MAAUA,GAAQ,MAAS,UAAC,IAAD,CAAW7R,MAAO6R,EAAO,EAAI,UAAY,QAAzC,cAAoDA,EAAO,EAAI,IAAM,IAAIxM,EAAAA,EAAAA,IAAYwM,EAAM7M,EAAKM,SAAqB,KAC5M,MAAMsM,GAAWvM,EAAAA,EAAAA,IAAYL,EAAK3C,MAAO2C,EAAKM,MAE/C,IAAMwM,IAAuB9M,EAAK2M,UAAW,SAAC,EAAD,CAAiB9L,QAASA,EAAS5E,OAAO,SAACwD,EAAA,EAAD,WAAY,UAAC,EAAAvD,SAAD,CAAUH,UAAU,SAACyG,EAAA,EAAD,CAAUxG,QAAQ,cAAcjC,MAAO,IAAKD,OAAQ,KAAxE,UAChGiT,EAAAA,GAAAA,SAAyB/M,EAAKG,KAAKnE,WAAmB,UAACkD,EAAA,EAAD,CAAKvF,GAAI,CAAEC,QAAS,cAAe+F,IAAK,EAAGqN,GAAI,GAA/C,WACrD,SAAC9N,EAAA,EAAD,WAAK,SAAC+N,EAAA,EAAD,CAAqBC,SAAUlN,EAAKG,KAAKnE,QAA2BmR,QAASnN,EAAKG,KAAKiN,gBAC5F,SAACC,EAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,QAE1C,0BAAOb,WAET,OAAO,UAACxN,EAAA,EAAD,CAAKnF,MAAM,OAAOJ,GAAI,CAAEC,QAAS,OAAQoD,eAAgB,gBAAiB2C,IAAK,EAAG6N,UAAWnB,EAAY,iCAA8B9L,GAAajG,UAAWA,EAA/J,WACL,UAACmF,EAAA,EAAD,CAAYzE,MAAK,UAAKgF,EAAKG,KAAKnE,QAAf,SAA+BrC,GAAI,CAAEC,QAAS,OAAQ+F,IAAK,EAAGiH,WAAY,UAA3F,YAA0G6F,IAAc,SAACgB,EAAA,EAAD,IAAY3C,EAAM0B,EAAWX,MACrJ,UAAC3M,EAAA,EAAD,CAAKvF,GAAI,CAAEC,QAAS,OAAQ+F,IAAK,EAAGiH,WAAY,UAAhD,WACE,SAACnH,EAAA,EAAD,CAAYiO,QAAM,EAAlB,SAAoBd,IACnBE,OAGN,CAMM,IAAM5B,GAAmBvN,EAAAA,EAAAA,IAAOgQ,EAAAA,EAAPhQ,EAAoC,gBAAGK,EAAH,EAAGA,MAAH,IAAU4P,MAAAA,OAAV,MAAkB,cAAlB,MAAiCC,KAAAA,OAAjC,MAAwC,gBAAxC,MAAyDC,aAAAA,OAAzD,MAAwE,OAAxE,QAAsF,CACxJC,aAAc/P,EAAMgQ,MAAMD,aAC1BE,SAAU,SACVC,OAAQ,EACR,wCAAyC,CACvC7P,gBAAkBL,EAAME,QAAQ0P,GAAwBE,IAE1D,uCAAwC,CACtCzP,gBAAkBL,EAAME,QAAQ2P,GAAuBC,IARS,G,0PC1ErD,SAASK,EAAT,GAA2G,IAAnF3G,EAAkF,EAAlFA,SAAUnK,EAAwE,EAAxEA,MAAO6M,EAAiE,EAAjEA,SAAUpC,EAAuD,EAAvDA,UAAWwC,EAA4C,EAA5CA,YAAgB1M,GAA4B,YAC/G6J,GAAMC,EAAAA,EAAAA,GAAe,MAArBD,EACR,OAAO,UAAC,IAAD,CAAK7N,QAAQ,OAAOgN,WAAW,SAASjH,IAAK,EAA7C,WACL,SAAC,IAAD,CAAO8H,EAAGA,EAAG2G,QAAS3G,EAAE,UAAxB,wBACA,UAAC,KAAD,kBAAiB7J,GAAjB,eACE,SAAC,IAAD,CAAgB3B,OAAO,SAAC,IAAD,CAAOwL,EAAGA,EAAG2G,QAAS3G,EAAE,WAAD,OAAYpK,IAAnC,SAAqD,CAAEA,MAAOoK,EAAE,WAAD,OAAYpK,OAAlG,SACGmK,EAASrK,KAAI,SAAA9D,GAAG,OACf,SAAC,IAAD,CAAoBgV,SAAUhR,IAAUhE,EAAKiV,SAAUjR,IAAUhE,EAAKwH,QAAS,kBAAMqJ,EAAS7Q,EAAf,EAA/E,SAAqGoO,EAAE,WAAD,OAAYpO,KAAnGA,EADA,OAGnB,SAAC,IAAD,CAAQwH,QAAS,kBAAMyJ,GAAaxC,EAAnB,EAA+ByG,WAAW,SAAC,IAAD,CAAiBzD,KAAMhD,EAAY0G,EAAAA,IAAsBC,EAAAA,IAAgBxT,UAAU,UAA9I,SACG6M,GAAY,SAAC,IAAD,CAAOL,EAAGA,EAAG2G,QAAQ,YAArB,wBAAsD,SAAC,IAAD,CAAO3G,EAAGA,EAAG2G,QAAQ,aAArB,gCAI1E,C,mHCxBYM,EAAW,kBAAM,SAAC,IAAD,CAAiB5D,KAAM6D,EAAAA,KAA7B,EACXC,EAAe,SAAC,GAAD,IAAG3R,EAAH,EAAGA,MAAH,IAAU6I,QAAAA,OAAV,gBAC1B,SAAC,IAAD,CAAY9K,MAAO8K,EAAU,oBAAiBvF,EAAWjG,UAAU,OAAnE,SACG2C,GAAQ,OAAI4R,MAAM5R,GAAO6R,QAAQ3R,KAAI,SAAC2F,EAAGkB,GAAJ,OAAU,SAAC0K,EAAD,GAAe1K,EAAzB,IAAkC,MAFhD,C,8JC4B5B,GAzBiCrG,EAAAA,EAAAA,IAAOoR,EAAAA,EAAc,CACpDC,kBAAmB,SAACC,GAAD,MAAmB,cAATA,GAAiC,kBAATA,CAAlC,GADYtR,EAEG,gBAAGK,EAAH,EAAGA,MAAH,IAAUkR,UAAAA,OAAV,MAAsB,YAAtB,MAAmCC,cAAAA,OAAnC,MAAmD,UAAnD,QAAoE,CACtG,IAAK,CACH9Q,gBAAiBL,EAAME,QAAQgR,GAAWE,KAC1CpU,MAAOgD,EAAME,QAAQgR,GAAWG,cAElC,UAAW,CACThR,gBAAiBL,EAAME,QAAQgR,GAAWrB,MAE5C,iBAAkB,CAChBxP,gBAAiBL,EAAME,QAAQiR,GAAeC,KAC9CpU,MAAOgD,EAAME,QAAQiR,GAAeE,cAEtC,uBAAwB,CACtBhR,gBAAiBL,EAAME,QAAQiR,GAAetB,MAEhD,iBAAkB,CAChBxP,gBAAiBL,EAAME,QAAQgR,GAAWrB,MAE5C,8BAA+B,CAC7BxP,gBAAiBL,EAAME,QAAQiR,GAAetB,MAnBd,I,6CCD9ByB,GAAiBC,EAAAA,EAAAA,IAAkB,OAAIvH,EAAAA,IAC9B,SAASwH,EAAT,GAA2E,IAAlDnS,EAAiD,EAAjDA,MAAO6M,EAA0C,EAA1CA,SAAatM,GAA6B,YACvF,OAAO,SAAC6R,EAAA,GAAD,gBAAmBC,WAAS,EAACrS,MAAOA,GAAWO,GAA/C,aACJoK,EAAAA,EAAAA,KAAgB,SAAAlN,GAAG,OAAI,SAAC,EAAD,CAAoCuC,MAAOvC,EAAKqU,cAAerU,EAAK+F,QAAS,kBAAMqJ,EAASoF,EAAejS,EAAOvC,GAArC,EAA7E,UACtB,SAACoE,EAAA,EAAD,CAAKvF,GAAI,CAAE0B,SAAU,MAAOC,WAAY,GAAxC,SAA8CM,EAAAA,EAASd,MADFA,EAAnC,MAIvB,C,gMCPK6U,GAAoBJ,EAAAA,EAAAA,IAAkB,OAAIpH,EAAAA,KACjC,SAASyH,EAAT,GAAyE,IAAjDvS,EAAgD,EAAhDA,MAAO6M,EAAyC,EAAzCA,SAAatM,GAA4B,YACrF,OAAO,SAAC,KAAD,gBAAwB8R,WAAS,EAACrS,MAAOA,GAAWO,GAApD,aACJuK,EAAAA,GAAAA,KAAsB,SAAA0H,GAAE,aAAI,SAAC,IAAD,CAAuBxS,MAAOwS,EAAIhP,QAAS,kBAAMqJ,EAASyF,EAAkBtS,EAAOwS,GAAxC,EAA3C,UAC3B,SAAC,IAAD,CAAStV,IAAG,UAAEC,EAAAA,EAAAA,mBAAF,aAAE,EAAqBqV,GAAKpK,KAAM,KADAoK,EAAvB,MAI5B,C,qNCHc,SAAShM,EAAT,GAA6D,IAAnCtF,EAAkC,EAAlCA,SACjCC,GAASC,EAAAA,EAAAA,GAAUF,GACnBG,GAAclF,EAAAA,EAAAA,IAAW,kBAAY,OAANgF,QAAM,IAANA,OAAA,EAAAA,EAAQnF,MAAOsF,EAAAA,EAAAA,IAAgBH,EAAOnF,IAA5C,GAAkD,QAACmF,QAAD,IAACA,OAAD,EAACA,EAAQnF,MACpFuF,GAASC,EAAAA,EAAAA,UAAQ,kBAAMH,GAAeF,IAAUM,EAAAA,EAAAA,IAAc,CAACJ,EAAYK,MAAMC,EAAAA,EAAAA,IAAiBR,IAAjF,GAA4F,CAACE,EAAaF,IACjI,IAAKA,IAAWE,IAAgBE,EAAQ,OAAO,KAE/C,IAAMkR,GAAc,UAAC,IAAD,YAClB,SAACC,EAAD,CAAgB/P,KAAMpB,EAAOqB,IAAIC,EAAAA,GAAAA,OAAAA,SACjC,SAAC6P,EAAD,CAAgB/P,KAAMpB,EAAOqB,IAAIC,EAAAA,GAAAA,OAAAA,UAGnC,OAAO,UAAC,IAAD,CAAUvG,GAAI,CAAEG,OAAQ,OAAQqB,SAAU,IAAKlB,SAAU,WAAYL,QAAS,OAAQC,cAAe,UAArG,WACL,SAAC,IAAD,CAAKD,QAAQ,OAAOC,cAAc,SAASuF,aAAa,WAAWnE,UAAS,eAAUyD,EAAYhE,OAAtB,QAA5E,UACE,SAAC,IAAD,CAAmB4B,MAAOoC,EAAasR,SAAUF,EAAjD,UACE,SAAC,IAAD,CACExV,UAAU,MACVC,IAAKmE,EAAYW,OAAOb,EAAOc,WAC/BnE,SAAS,OACTC,UAAU,OACVzB,GAAI,CAAE4F,GAAI,eAIhB,SAAC,IAAD,CAAY5F,GAAI,CAAEM,SAAU,WAAYoB,SAAU,UAAWC,WAAY,EAAGjB,QAAS,IAAMkB,cAAe,QAA1G,UACE,6BAAQ,SAAC,IAAD,CAASP,MAAM,UAAf,SAA0B2D,EAAAA,EAAAA,eAA2BH,SAE9DE,EAAYmB,gBAAiB,SAAC,IAAD,CAAYlG,GAAI,CAAEM,SAAU,WAAYoB,SAAU,UAAWC,WAAY,EAAGjB,QAAS,IAAMkB,cAAe,OAAQG,OAAQ,EAAGC,MAAO,GAApI,UAC5B,6BAAQ,UAAC,IAAD,CAASX,MAAM,YAAf,cAA6BwD,EAAOsB,oBAGjD,CACD,SAASiQ,EAAT,GAA0D,IAAhC/P,EAA+B,EAA/BA,KACxB,IAAKA,EAAKG,KAAK9G,IAAK,OAAO,KAC3B,IAAM+G,GAAMC,EAAAA,EAAAA,IAAYL,EAAK3C,MAAO2C,EAAKM,KAAON,EAAKM,UAAWC,EAAJ,GAC5D,OAAO,UAAC,IAAD,WAAa3E,EAAAA,EAASoE,EAAKG,KAAK9G,KAAhC,IAAuC+G,IAC/C,C,yICrCc,SAAS6P,EAAT,GAAiE,IAApC3T,EAAmC,EAAnCA,MAAO0T,EAA4B,EAA5BA,SAAUlU,EAAkB,EAAlBA,SACrDG,GAAQ,UAAC,EAAAC,SAAD,CAAUH,UAAU,SAAC,IAAD,CAAUC,QAAQ,OAAOjC,MAAO,MAApD,WACZ,UAAC,IAAD,YAAY,SAAC,IAAD,CAASQ,IAAKC,EAAAA,EAAAA,YAAmB8B,EAAMsN,cAAnD,IAAoEtN,EAAMmB,QACzEuS,KAEH,OAAO,SAAC,IAAD,CAAkB5T,UAAU,MAAMH,MAAOA,EAAOI,oBAAkB,EAAlE,SACJP,GAEJ,C,+HCRYyQ,GAAqB2D,EAAAA,EAAAA,eAAc,CAAE5D,eAAgB,WAAS,EAAE6D,YAAa,WAAS,EAAEC,aAAc,WAAS,IAErH,SAASC,EAAT,GAAsE,IAAxCvU,EAAuC,EAAvCA,SACnC,GAAgCwU,EAAAA,EAAAA,KAAhC,eAAOtG,EAAP,KAAauG,EAAb,KAAqBtG,EAArB,KACA,GAAiCtC,EAAAA,EAAAA,UAAS,MAACpH,OAAWA,IAAtD,iCAAQxB,EAAR,KAAciB,EAAd,KAAqBwQ,EAArB,KACMlE,GAAiBvK,EAAAA,EAAAA,cAAY,SAAChD,EAAeiB,GAC7CjB,GAAQiB,EAAMuQ,IACbtG,IACLuG,EAAS,CAACzR,EAAMiB,GACjB,GAAE,CAACuQ,EAAQtG,IACZ,OAAO,SAACsC,EAAmBkE,SAApB,CAA6BpT,MAAO,CAAEiP,eAAAA,EAAgBvN,KAAAA,EAAMiB,KAAAA,EAAM0Q,UAAW1G,EAAMmG,YAAaI,EAAQH,aAAcnG,GAAtH,SAAmInO,GAC3I,C,2MCbK6U,EAAK,SAACC,GAAD,OAAoB,SAAC,IAAD,CAAWC,GAAG,yBAAyBC,MAAOF,GAAlE,EACLG,EAAM,SAACH,GAAD,OAAoB,SAAC,IAAD,CAAWC,GAAG,qBAAqBC,MAAOF,GAA9D,EAUNI,EAAWC,EAAAA,GAAAA,WAAA,UAAOjJ,EAAAA,EAAAA,KAAgB,SAAAlN,GAAG,OAAIoW,EAAAA,GAAMpW,EAAV,MAGrCqW,GAAUC,EAAAA,EAAAA,IAAkBvW,EAAAA,IAAoB,SAAAuP,GAAC,MAAI,CAAC,GAAD,OAAIA,EAAJ,UAAciH,EAAAA,EAAAA,IAAUH,EAAAA,GAAAA,IAAW,GAAGI,EAAAA,EAAAA,IAAQ,MAAlD,IAEjDC,EAA+B,CACnC9T,KAAMkT,EAAG,yBACTa,KAAMb,EAAG,yBACT7F,MAAM,4BAAOlP,EAAAA,EAAAA,MAAP,IAAwBA,EAAAA,EAAAA,IAAxB,IAAuCA,EAAAA,EAAAA,KAAvC,IAAuDA,EAAAA,EAAAA,MAAvD,IAAwEA,EAAAA,EAAAA,KAAxE,IAAwFA,EAAAA,EAAAA,QAAxF,SACN4P,QAAS,SAACzM,GAAD,OAAoF,IAAlEiJ,EAAAA,EAAAA,QAAmB,SAAAoC,GAAC,OAAIrL,EAAKkB,IAAIiR,EAAAA,GAAM9G,IAAI/M,OAAS,CAAhC,IAAmCG,MAAzE,EACTiU,SAAU,CAAC,CACTC,UAAU,EACVzG,OAAQ1E,OAAOC,OAAO2K,GAAShU,KAAI,SAAA6C,GAAI,MAAK,CAAEA,KAAAA,EAAP,OAKrC2R,GAASN,EAAAA,EAAAA,IAAUL,EAAU,GAAGK,EAAAA,EAAAA,IAAUH,EAAAA,GAAAA,KAAY,GAAGI,EAAAA,EAAAA,IAAQ,OACjEM,EAA4B,CAChCnU,KAAMkT,EAAG,sBACTa,KAAMb,EAAG,sBACT7F,MAAM,4BAAOlP,EAAAA,EAAAA,KAAP,IAAuBA,EAAAA,EAAAA,QAC7B4P,QAAS,SAACzM,GAAD,OAAkBA,EAAKkB,IAAIiR,EAAAA,GAAAA,MAAY7T,OAAS,GAAK0B,EAAKkB,IAAI+Q,GAAU3T,OAAS,CAAjF,EACToU,SAAU,CAAC,CACTC,UAAU,EACVzG,OAAQ,CAAC,CACPiB,MAAM2F,EAAAA,EAAAA,IAAG,uBACTxU,OAAQ,GACRiD,KAAM,KACL,CACDN,KAAM2R,OAMNG,GAAST,EAAAA,EAAAA,IAAUL,EAAU,GAAGK,EAAAA,EAAAA,IAAUH,EAAAA,GAAAA,MAAa,GAAGI,EAAAA,EAAAA,IAAQ,OAClES,EAA6B,CACjCtU,KAAMkT,EAAG,sBACTa,KAAMb,EAAG,sBACT7F,MAAM,4BAAOlP,EAAAA,EAAAA,MAAP,IAAwBA,EAAAA,EAAAA,SAC9B4P,QAAS,SAACzM,GAAD,OAAkBA,EAAKkB,IAAIiR,EAAAA,GAAAA,OAAa7T,OAAS,GAAK0B,EAAKkB,IAAI+Q,GAAU3T,OAAS,CAAlF,EACToU,SAAU,CAAC,CACTC,UAAU,EACVzG,OAAQ,CAAC,CACPiB,MAAM2F,EAAAA,EAAAA,IAAG,uBACTxU,OAAQ,GACRiD,KAAM,KACL,CACDN,KAAM8R,OAMNE,EAAa,CAAC,YAAa,iBAC3BC,GAASC,EAAAA,EAAAA,IAAaF,GACtBG,GAASd,EAAAA,EAAAA,IAAUL,EAAU,GAAGK,EAAAA,EAAAA,IAAUH,EAAAA,GAAAA,KAAY,GAAGkB,EAAAA,EAAAA,IAAMH,EAAQ,MAAMX,EAAAA,EAAAA,IAAQ,QACrFe,EAA4B,CAChC5U,KAAMkT,EAAG,sBACTa,KAAMb,EAAG,sBACT7F,MAAM,4BAAOlP,EAAAA,EAAAA,KAAP,IAAuBA,EAAAA,EAAAA,QAC7B4P,QAAS,SAACzM,GAAD,OAAkBA,EAAKkB,IAAIiR,EAAAA,GAAAA,MAAY7T,OAAS,GAAK0B,EAAKkB,IAAI+Q,GAAU3T,OAAS,CAAjF,EACToU,SAAU,CAAC,CACTC,UAAU,EACVzG,OAAQ,CAAC,CACPiB,MAAM2F,EAAAA,EAAAA,IAAG,0BACTxU,OAAQ,GACRiD,KAAM,OAEP,CACDoR,UAAU,EACVY,KAAMN,EACN3U,MAAO4U,EACPxU,KAAMsT,EAAI,sBACVwB,OAAQ,CACNtW,MAAO0U,EAAG,sBACV7F,KAAMlP,EAAAA,EAAAA,MAER+M,OAAQ,CACN6J,GAAI,CACFvH,OAAQ,CAAC,CACPjL,KAAMmS,SAQVM,EAA0B,CAC9BhV,KAAMkT,EAAG,oBACTa,KAAMb,EAAG,oBACT7F,MAAM,4BAAOlP,EAAAA,EAAAA,QAAP,IAA0BA,EAAAA,EAAAA,WAChC4P,QAAS,SAACzM,GAAD,OAAkBA,EAAKkB,IAAIiR,EAAAA,GAAAA,SAAe7T,OAAS,GAAK0B,EAAKkB,IAAI+Q,GAAU3T,OAAS,CAApF,EACToU,SAAU,CAAC,CACTC,UAAU,EACVzG,OAAQ,CAAC,CACPiB,MAAM2F,EAAAA,EAAAA,IAAG,wBACTxU,OAAQ,GACRiD,KAAM,SAMNoS,GAAarB,EAAAA,EAAAA,IAAUL,EAAU,GAAGK,EAAAA,EAAAA,IAAUH,EAAAA,GAAAA,MAAa,GAAGI,EAAAA,EAAAA,KAAS,OACvEqB,GAAatB,EAAAA,EAAAA,IAAUL,EAAU,GAAGK,EAAAA,EAAAA,IAAUH,EAAAA,GAAAA,MAAa,GAAGI,EAAAA,EAAAA,IAAQ,MACtEsB,GAAWvB,EAAAA,EAAAA,IAAUL,EAAU,GAAGK,EAAAA,EAAAA,IAAUH,EAAAA,GAAAA,MAAa,GAAGI,EAAAA,EAAAA,KAAS,OACrEuB,EAA6B,CACjCpV,KAAMkT,EAAG,uBACTa,KAAMb,EAAG,uBACT7F,MAAM,4BAAOlP,EAAAA,EAAAA,MAAP,IAAwBA,EAAAA,EAAAA,SAC9B4P,QAAS,SAACzM,GAAD,OAAkBA,EAAKkB,IAAIiR,EAAAA,GAAAA,OAAa7T,OAAS,GAAK0B,EAAKkB,IAAI+Q,GAAU3T,OAAS,CAAlF,EACToU,SAAU,CAAC,CACTC,UAAU,EACVzG,OAAQ,CAAC,CACPjL,KAAM0S,GACL,CACD1S,KAAM2S,GACL,CACD3S,KAAM4S,OAMNE,EAAa,CAAC,YAAa,gBAC3BC,GAASb,EAAAA,EAAAA,IAAaY,GACtBE,GAAgB3B,EAAAA,EAAAA,IAAUL,EAAU,GAAGK,EAAAA,EAAAA,IAAUH,EAAAA,GAAAA,IAAW,GAAGI,EAAAA,EAAAA,IAAQ,OACvE2B,GAAa5B,EAAAA,EAAAA,IAAUL,EAAU,GAAGK,EAAAA,EAAAA,IAAUH,EAAAA,GAAAA,IAAW,GAAGkB,EAAAA,EAAAA,IAAMW,EAAQ,MAAMzB,EAAAA,EAAAA,IAAQ,QACxF4B,GAAa7B,EAAAA,EAAAA,IAAUL,EAAU,GAAGK,EAAAA,EAAAA,IAAUH,EAAAA,GAAAA,IAAW,GAAGkB,EAAAA,EAAAA,IAAMW,EAAQ,MAAMzB,EAAAA,EAAAA,KAAS,OACzF6B,EAA2B,CAC/B1V,KAAMkT,EAAG,qBACTa,KAAMb,EAAG,qBACT7F,MAAM,4BAAOlP,EAAAA,EAAAA,IAAP,IAAsBA,EAAAA,EAAAA,OAC5B4P,QAAS,SAACzM,GAAD,OAAkBA,EAAKkB,IAAIiR,EAAAA,GAAAA,KAAW7T,OAAS,GAAK0B,EAAKkB,IAAI+Q,GAAU3T,OAAS,CAAhF,EACToU,SAAU,CAAC,CACTC,UAAU,EACVxF,KAAMyE,EAAG,qBACT1F,OAAQ,CAAC,CACPjL,KAAMgT,KAEP,CACDtB,UAAU,EACVY,KAAMQ,EACNzV,MAAO0V,EACPR,OAAQ,CACNtW,MAAO0U,EAAG,qBACV7F,KAAMlP,EAAAA,EAAAA,KAER6B,MAAMoU,EAAAA,EAAAA,IAAG,qBACTlJ,OAAQ,CACN6J,GAAI,CACFvH,OAAQ,CAAC,CACPjL,KAAMiT,GACL,CACDjT,KAAMkT,GACL,CACDhH,MAAMkH,EAAAA,EAAAA,IAAI,YACV/V,MAAO,GACPiD,KAAM,WAQV+S,EAAiB,CAAC,YAAa,uBAC/BC,GAAapB,EAAAA,EAAAA,IAAamB,GAC1BE,EAAiB,CAAC,YAAa,uBAC/BC,GAAatB,EAAAA,EAAAA,IAAaqB,GAC1BE,GAAgBpC,EAAAA,EAAAA,IAAUL,EAAU,GAAGK,EAAAA,EAAAA,IAAUH,EAAAA,GAAAA,OAAc,EAAG,GAAI,CAAE7X,IAAK,YAC7Eqa,GAAgBrC,EAAAA,EAAAA,IAAUL,EAAU,GAAGK,EAAAA,EAAAA,IAAUH,EAAAA,GAAAA,OAAc,GAAGkB,EAAAA,EAAAA,IAAMkB,EAAY,KAAM,GAAI,CAAEja,IAAK,aACrGsa,GAAgBtC,EAAAA,EAAAA,IAAUL,EAAU,GAAGK,EAAAA,EAAAA,IAAUH,EAAAA,GAAAA,OAAc,GAAGkB,EAAAA,EAAAA,IAAMoB,EAAY,KAAM,GAAI,CAAEna,IAAK,aAsD9Fua,EAAgC,CAC3CrC,EACAK,EACAG,EACAM,EACAI,EACAI,EACAM,EA5DoC,CACpC1V,KAAMkT,EAAG,0BACTa,KAAMb,EAAG,0BACT7F,MAAM,4BAAOlP,EAAAA,EAAAA,OAAP,IAAyBA,EAAAA,EAAAA,UAC/B4P,QAAS,SAACzM,GAAD,OAAkBA,EAAKkB,IAAIiR,EAAAA,GAAAA,QAAc7T,OAAS,GAAK0B,EAAKkB,IAAI+Q,GAAU3T,OAAS,CAAnF,EACToU,SAAU,CAAC,CACTC,UAAU,EACVxF,KAAMyE,EAAG,0BACT1F,OAAQ,CAAC,CAAEjL,KAAMyT,KAChB,CACD/B,UAAU,EACVY,KAAMe,EACNhW,MAAOiW,EACPf,OAAQ,CACNtW,MAAO0U,EAAG,0BACV7F,KAAMlP,EAAAA,EAAAA,QAER6B,KAAMsT,EAAI,8BACVpI,OAAQ,CACN6J,GAAI,CACFvH,OAAQ,CAAC,CACPjL,KAAM0T,GACL,CACDxH,MAAMkH,EAAAA,EAAAA,IAAI,YACV/V,MAAO,EACPiD,KAAM,SAIX,CACDoR,UAAU,EACVY,KAAMiB,EACNlW,MAAOmW,EACPjB,OAAQ,CACNtW,MAAO0U,EAAG,0BACV7F,KAAMlP,EAAAA,EAAAA,QAER6B,KAAMsT,EAAI,8BACVpI,OAAQ,CACN6J,GAAI,CACFvH,OAAQ,CAAC,CACPjL,KAAM2T,GACL,CACDzH,MAAMkH,EAAAA,EAAAA,IAAI,YACV/V,MAAO,EACPiD,KAAM,YAmBHuT,GAAgBC,EAAAA,EAAAA,IAAa,CACxCC,QAAO,kBACF5C,GADC,IAEJ6C,KAAMrC,EACNsC,IAAKnC,EACLoC,YAAaxB,EACbyB,SAAUxB,EACVyB,OAAQxB,EACRyB,QAASrB,EACTsB,SAAUrB,EACVsB,cAAerB,EACfsB,QAAQC,EAAAA,EAAAA,KAAQxD,EAAAA,EAAAA,IAAIwC,EAAeC,EAAeC,GAAgB,CAAEe,OAAO,MAE7EC,MAAO,CAELC,UAAWzC,I,2JCvQA,SAAS0C,IAA4B,IAAD,EACzC9O,GAAa5E,EAAAA,EAAAA,YAAW6E,EAAAA,GAAxBD,SACF+O,GAAWC,EAAAA,EAAAA,MAEjB,cAA+BC,EAAAA,EAAAA,IAAS,CAAE1C,KAAM,4BAA6B2C,KAAK,WAAlF,QAA8F,CAAEC,OAAQ,CAAEC,IAAK,MAAzGD,OAAUC,IAAAA,OAAhB,MAAsB,GAAtB,EACMC,GAAKrT,EAAAA,EAAAA,aAAW,yCACpB,WAAOtB,GAAP,yFACQc,EAAYwE,EAAS0D,MAAMxJ,IAAIQ,GACjC4U,EAASF,EAER5T,EAJP,wBAKU+T,EAoBL,CACLjc,IArBqCoH,EAsBrC9F,MAAO,EACP2E,UAAW,EACXiW,QAAS,SACTC,mBAAmBC,EAAAA,EAAAA,GAAavP,EAAAA,IAAa,iBAAM,EAAN,IAC7CpC,eAAgB,GAChB4R,YAAa,CAAC,EACdC,WAAY,CAAC,EACbC,cAAe,CAAC,EAChBC,OAAQ,CACNC,KAAM,EACNC,MAAO,EACPC,MAAO,GAETC,aAAc,GACd1R,cAAe,EACfL,KAAM,CAAC,GAAI,GAAI,IACfgS,gBAAiB,CAAC,EAClBC,aAAa,EACbC,kBAAmB,IAvCfrQ,EAAS0D,MAAM4M,IAAI5V,EAAc6U,GANrC,SAOiC5T,EAAAA,EAAAA,IAAmBjB,GAPpD,UAOUgB,EAPV,0DASUjD,GAAS8X,EAAAA,EAAAA,GAAqB7U,EAAeiJ,eAC7CnM,EAAWwH,EAASwQ,QAAQC,IAAIhY,GACtCuH,EAASwQ,QAAQF,IAAI9X,EAAU,CAAEkY,SAAUhW,IAI3C4U,EAAS,GAfb,QAiBEP,EAAS,eAAD,OAAgBrU,EAAhB,YAAgC4U,IAjB1C,4CADoB,sDAoBpB,CAACP,EAAU/O,EAAUoP,IAEvB,OAAOC,CACR,C,6FCrCc,SAAS5T,IAAgE,IAAnDf,EAAkD,uDAAJ,GACjF,GAAqBU,EAAAA,EAAAA,YAAW6E,EAAAA,GAAxBD,EAAR,EAAQA,SACR,GAAqC4B,EAAAA,EAAAA,UAAS5B,EAAS0D,MAAMxJ,IAAIQ,IAAjE,eAAOc,EAAP,KAAkBmV,EAAlB,KAKA,OAJAhO,EAAAA,EAAAA,YAAU,kBAAMgO,EAAgB3Q,EAAS0D,MAAMxJ,IAAIQ,GAAzC,GAAyD,CAACsF,EAAUtF,KAC9EiI,EAAAA,EAAAA,YAAU,kBACRjI,EAAesF,EAAS0D,MAAMkN,OAAOlW,EAAciW,QAAmBnW,CAD9D,GAER,CAACE,EAAciW,EAAiB3Q,IAC3BxE,CACR,C,4HCqBc,SAASK,EAAoBnB,GAE1C,IAAQsF,GAAa5E,EAAAA,EAAAA,YAAW6E,EAAAA,GAAxBD,SAER,OAAOhE,EAAAA,EAAAA,cAAY,SAAC6U,GAClB,GAAKnW,EAAL,CACA,IAAMc,EAAYwE,EAAS0D,MAAMxJ,IAAIQ,GACrC,GAAKc,EACL,GAAI,SAAUqV,EAAQ,OAAQA,EAAOC,MACnC,IAAK,gBACH,IAAMjB,EAAgBrU,EAAUqU,cACxBkB,EAAmBF,EAAnBE,QAASzZ,EAAUuZ,EAAVvZ,MACjB,GAAIuY,EAAckB,KAAazZ,EAAO,MACtC0I,EAAS0D,MAAM4M,IAAI5V,GAAnB,kBAAsCc,GAAtC,IAAiDqU,eAAc,kBAAMA,GAAP,cAAuBkB,EAAUzZ,OAC/F,MAEF,IAAK,YACH,IAAQyZ,EAAmBF,EAAnBE,QAASzZ,EAAUuZ,EAAVvZ,MACXsY,GAAaoB,EAAAA,EAAAA,IAAUxV,EAAUoU,YACvC,GAAIA,EAAWmB,KAAazZ,EAAO,MAC9BA,EACAsY,EAAWmB,GAAWzZ,SADRsY,EAAWmB,GAE9B/Q,EAAS0D,MAAM4M,IAAI5V,GAAnB,kBAAsCc,GAAtC,IAAiDoU,WAAAA,KACjD,MAEF,IAAK,aACH,IAAQmB,EAAYF,EAAZE,QACFnB,EAAapU,EAAUoU,kBACtBA,EAAWmB,GAClB/Q,EAAS0D,MAAM4M,IAAI5V,GAAnB,kBAAsCc,GAAtC,IAAiDoU,WAAAA,KACjD,MAEF,IAAK,kBACH,IAAQqB,EAA6BJ,EAA7BI,YAAatB,EAAgBkB,EAAhBlB,YACfQ,GAAkBa,EAAAA,EAAAA,IAAUxV,EAAU2U,iBAC5CA,EAAgBc,GAAetB,EAC/B3P,EAAS0D,MAAM4M,IAAI5V,GAAnB,kBAAsCc,GAAtC,IAAiD2U,gBAAAA,KACjD,MAEF,IAAK,OACH,IAAce,EAAU1V,EAAhB2C,KACFA,GAAI,OAAO+S,GACT9S,EAAmByS,EAAnBzS,MAAO+S,EAAYN,EAAZM,QACfhT,EAAKC,GAAS+S,EAEdnR,EAAS0D,MAAM4M,IAAI5V,GAAnB,kBAAsCc,GAAtC,IAAiD2C,KAAAA,UAGnD6B,EAAS0D,MAAM4M,IAAI5V,GAAnB,kBAAsCc,GAAcqV,GA3C7B,CA4C1B,GAAE,CAACnW,EAAcsF,GACnB,C,kFCjFc,SAASwC,IACtB,OAA6BZ,EAAAA,EAAAA,UAAS,CAAC,GAAvC,eAAOwP,EAAP,KAAmBC,EAAnB,KAEA,MAAO,CAACD,GADgBpV,EAAAA,EAAAA,cAAY,kBAAMqV,EAAO,CAAC,EAAd,GAAkB,IAEvD,C,kFCJc,SAASC,IACtB,IAAMrZ,GAAQsZ,EAAAA,EAAAA,KACRC,GAAKC,EAAAA,EAAAA,GAAcxZ,EAAMyZ,YAAYC,GAAG,OACxCnN,GAAKiN,EAAAA,EAAAA,GAAcxZ,EAAMyZ,YAAYC,GAAG,OACxCvS,GAAKqS,EAAAA,EAAAA,GAAcxZ,EAAMyZ,YAAYC,GAAG,OAE9C,OADWF,EAAAA,EAAAA,GAAcxZ,EAAMyZ,YAAYC,GAAG,OAC/B,KACXvS,EAAW,KACXoF,EAAW,KACXgN,EAAW,KACR,IACR,C,8SCUc,SAASjW,EAAYb,GAAqK,IAApIkX,EAAmI,uDAAjG,EAAGC,EAA8F,uCAAtDC,EAAsD,uCACtM,GAAqB1W,EAAAA,EAAAA,YAAW6E,EAAAA,GAAxBD,EAAR,EAAQA,SACR,GAA8BwC,EAAAA,EAAAA,KAA9B,eAAOuP,EAAP,KAAgBC,EAAhB,KACMC,GAAkB/O,EAAAA,EAAAA,kBAAiB6O,GACnC/Y,GAAOvF,EAAAA,EAAAA,IAAW,kBAAMye,EAAgBlS,EAAUtF,EAAckX,EAAyBC,EAAaC,EAApF,GAAqG,CAACG,EAAiBvX,EAAcsF,EAAU4R,EAAyBC,EAAaC,IAEvMK,GAAmBnW,EAAAA,EAAAA,cAAY,WACnCgE,EAASoS,mBAAmB1X,GAC5BsX,GACD,GAAE,CAAChS,EAAUtF,EAAcsX,IAM5B,OAJArP,EAAAA,EAAAA,YAAU,kBACRjI,EAAesF,EAAS0D,MAAMkN,OAAOlW,EAAcyX,QAAoB3X,CAD/D,GAER,CAACE,EAAcyX,EAAkBnS,IAE5BhH,CACR,UAEckZ,EAAAA,EAAAA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,KAAAA,MAAf,WAA+BlS,EAA2BtF,GAA1D,6GAA2FkX,EAA3F,+BAA6H,EAAGC,EAAhI,uBAAwKC,EAAxK,uBAEOpX,EAFP,oDAKOkX,GAA4BC,GAAgBC,EALnD,qBAMUO,EAAQrS,EAASsS,aAAa5X,IANxC,yCAOsB2X,GAPtB,wBAS0CE,EAAYvS,EAAUtF,EAAckX,EAAyBC,EAAaC,GATpH,uJASwI,CAAC,EATzI,kBASUxW,EATV,EASUA,SAAUkX,EATpB,EASoBA,WACblX,GAAakX,EAVpB,0DAYQC,GAAWC,EAAAA,EAAAA,IAAcpX,EAAUZ,GAEnC1B,GAAO2Z,EAAAA,EAAAA,IAAUF,GAAU,SAACG,EAAKC,GACrC,MAA6BL,EAAWK,GAApBC,GAApB,EAAQ9Z,MAAR,aACA,OAAO,kBAAK4Z,GAAQE,EACrB,IACIlB,GAA4BC,GAAgBC,GAC/C9R,EAAS+S,cAAcrY,EAAc1B,GAnBzC,kBAoBSA,GApBT,oEAuBO,SAAeuZ,EAAtB,iDAAO,OAAP,0BAAO,WAA2BvS,EAA2BtF,GAAtD,uGAAuFkX,EAAvF,+BAAyH,EAAGC,EAA5H,uBAAoKC,EAApK,uBAEApX,EAFA,oDAGCc,EAAYwE,EAAS0D,MAAMxJ,IAAIQ,GAHhC,kEAMyBsY,GAAkB,EAAMpB,EACpDpW,EACAsW,GAAkC9R,EAASwQ,QAAQtW,IAAIsB,EAAUuC,gBAFpB,OAG5C8T,QAH4C,IAG5CA,EAAAA,EAAerR,OAAOC,OAAOjF,EAAUiU,mBAAmBrY,KAAI,SAAA6b,GAAC,OAAIjT,EAASK,KAAKnG,IAAI+Y,EAAtB,IAA0B1R,QAAO,SAAA0R,GAAC,OAAIA,CAAJ,KAT/F,WAMCC,EAND,iEAYCV,GAZD,UAYiB9X,EAAewY,GAC/B5X,GAbD,UAa2CZ,EAAewY,EAAgBla,MAb1E,UAeCma,QAAQC,IAAIF,EAAgB1X,UAAU2C,KAAK/G,IAA/B,yCAAmC,WAAOyb,GAAP,mFAC9CA,EAD8C,oDAE7CQ,EAAQrT,EAAS0D,MAAMxJ,IAAI2Y,GAFkB,iEAI1BG,GAAkB,EAAO,GAAR,QAAC,UACpCK,GADmC,IAC5B1D,YAAW,UAAEnU,EAAU2U,gBAAgB0C,UAA5B,QAAmC,CAAC,IAC3D7S,EAASwQ,QAAQtW,IAAImZ,EAAMtV,gBAC3ByC,OAAOC,OAAO4S,EAAM5D,mBAAmBrY,KAAI,SAAA6b,GAAC,OAAIjT,EAASK,KAAKnG,IAAI+Y,EAAtB,IAA0B1R,QAAO,SAAA0R,GAAC,OAAIA,CAAJ,KAP7B,UAI7CK,EAJ6C,0DASnDd,EAAWK,GAAMS,EACjBhY,EAASuX,GAAMS,EAAWta,KAVyB,4CAAnC,wDAfb,iCA4BE,CAAEsC,SAAAA,EAAUkX,WAAAA,IA5Bd,6EAsCQQ,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,KAAAA,MAAf,oIAAiCO,EAAjC,gCAAoD3B,EAApD,uBACEpW,EADF,uBAEE/C,EAFF,uBAGEyH,EAHF,gCAM+BvE,EAAAA,EAAAA,IAAmBH,EAAUlI,KAN5D,UAMQoI,EANR,2EAQ4B9C,EAAAA,EAAAA,IAAgBH,EAAOnF,KARnD,WAQQqF,EARR,2EAWuCC,EAAAA,EAAAA,iBAA6B8C,EAAeiJ,eAXnF,eAWQ6O,EAXR,OAaQC,EAAmBF,EAAa,WAEpC,MAA4C5a,EAAYK,KAApC0a,GAApB,EAAQ7f,SAAR,aACA,OAAO8f,EAAAA,EAAAA,IAAU,CAACD,EAAqBF,GACxC,CAJqC,GAI/B7a,EAAYK,KAjBrB,UAmBmCrF,EAAAA,EAAAA,WAnBnC,eAmBQigB,EAnBR,OAoBQC,GAAYF,EAAAA,EAAAA,IAAU,CAACjY,EAAeoY,QAAQtY,EAAUuF,YAAa0S,EAAkBG,IACvFG,EAAejL,MAAMkL,QAAQ9T,GAAaA,EAAU9I,KAAI,SAAA6b,GAAC,OAAIgB,EAAAA,EAAAA,IAAmBhB,EAAGrB,EAA1B,IAAsD,CAAC1R,GAChHlH,EAtBR,kBAuBO+a,GAvBP,EAwBIG,EAAAA,EAAAA,IAAoB1Y,EAAW+X,EAAYM,OAAYrZ,IACvDvB,EAAAA,EAAAA,IAAiBR,GACjBob,EACAzb,EAAAA,GACA0V,EAAAA,IA5BJ,kBA8BS,CAAEtS,UAAAA,EAAW/C,OAAAA,EAAQiD,eAAAA,EAAgB/C,YAAAA,EAAaK,KAAAA,IA9B3D,oE,6FCnGe,SAASN,IAA8C,IAApCyb,EAAmC,uDAAJ,GAC/D,GAAqB/Y,EAAAA,EAAAA,YAAW6E,EAAAA,GAAxBD,EAAR,EAAQA,SACR,GAA4B4B,EAAAA,EAAAA,UAAS5B,EAASwQ,QAAQtW,IAAIia,IAA1D,eAAO1b,EAAP,KAAe2b,EAAf,KAKA,OAJAzR,EAAAA,EAAAA,YAAU,kBAAMyR,EAAUpU,EAASwQ,QAAQtW,IAAIia,GAArC,GAAiD,CAACnU,EAAUmU,KACtExR,EAAAA,EAAAA,YAAU,kBACRwR,EAAWnU,EAASwQ,QAAQI,OAAOuD,EAAUC,QAAa5Z,CADlD,GAER,CAAC2Z,EAAUC,EAAWpU,IACjBvH,CACR,C,mICLY4b,EAAoB,CAAC,QAAS,SAAU,QAG9C,SAASjR,EAAqBpD,EAA2BuC,GAC9D,MAAO,CACLkO,IAAK,CACH6D,SAAU,SAACzB,GAAD,OAAQ7S,EAAS0D,MAAMxJ,IAAI2Y,GAAsB,EAAI,CAArD,EACV0B,WAAY,QAEd7c,KAAM,CACJ4c,SAAU,SAACzB,GAAD,OAAQ2B,EAAAA,EAAAA,EAAA,wBAAwB3B,IAAM4B,UAAtC,GAEZ7f,MAAO,CACL0f,SAAU,SAACzB,GACT,IAAM6B,EAAO1U,EAAS0D,MAAMxJ,IAAI2Y,GAChC,OAAK6B,EACEA,EAAK9f,MAAQ8f,EAAKnb,UADP,CAEnB,EACDgb,WAAY,UAEd5f,OAAQ,CACN2f,SAAU,SAACzB,GAAD,oBAAQtQ,QAAR,IAAQA,GAAR,UAAQA,EAAkBsQ,UAA1B,aAAQ,EAAuBle,MAA/B,EACV4f,WAAY,SAGjB,CAGM,SAASjR,EAAuBtD,EAA2BuC,GAChE,MAAO,CACL1N,QAAS,SAACge,EAAItR,GAAL,eAAgBA,EAAOvM,SAAP,OAAgBuN,QAAhB,IAAgBA,GAAhB,UAAgBA,EAAkBsQ,UAAlC,aAAgB,EAAuB9R,aACtD,aAAP8R,IAAsB7S,EAAS0D,MAAMxJ,IAAI2Y,IAAuBtR,EAAOoT,MAAK,SAAAC,GAAE,OAAIrS,EAAgBsS,SAASC,YAAY9f,SAAS4f,EAAlD,KACvE,aAAP/B,GAAqBtR,EAAOvM,SAAP,UAAgBgL,EAAS0D,MAAMxJ,IAAI2Y,UAAnC,aAAgB,EAAwC9R,WAFvE,EAGT8C,WAAY,SAACgP,EAAItR,GAAL,aAAgBA,EAAOvM,SAAP,OAAgBuN,QAAhB,IAAgBA,GAAhB,UAAgBA,EAAkBsQ,UAAlC,aAAgB,EAAuBlO,cAAvD,EACZpI,SAAU,SAACsW,EAAItR,GAAL,OACPA,GAAWA,KAAYvB,EAAS4C,OAAOmS,YAAhB,mBAAwClC,GAAMvW,EAAAA,GAAcC,SAAW,MAAQ,KAD/F,EAEV7E,KAAM,SAACmb,EAAItR,GAAL,OAAiBA,GAAWiT,EAAAA,EAAAA,EAAA,wBAAwB3B,IAAMmC,cAAchgB,SAASuM,EAAOyT,cAAxF,EAET,C,kFC1CM,SAASxL,EAAqByL,GACnC,OAAO,SAACC,EAAUjP,GAChB,IAAMkP,EAAMD,EAAIzd,OAChB,OAAI0d,IAAQF,EAAQxd,OAAe,CAACwO,GACxB,IAARkP,GAAaD,EAAI,KAAOjP,GAAU,OAAIgP,IACnC,OAAI,IAAIG,KAAIC,EAAAA,EAAAA,IAAUH,EAAKjP,IACnC,CACF,C,8FCHM,SAASlC,EAAqCuR,EAAgBvT,EAAoBwT,GACvF,SAASC,EAAKvC,EAAMwC,EAAM1T,EAAoB2T,GAC5C,IAAMC,EAAKD,EAAOpB,SAASrB,GACrB2C,EAAKF,EAAOpB,SAASmB,GAM3B,OAAQ1T,GAAa,EAAI,IAJP,kBAAP4T,GAAiC,kBAAPC,EAC5BD,EAAGE,cAAcD,GAEfA,EAAiBD,EAE7B,CACD,OAAO,SAAC1C,EAAMwC,GACZ,IAAKF,EAAQD,GAAS,OAAO,EAC7B,IAAMQ,EAAeP,EAAQD,GACzBxO,EAAO0O,EAAKvC,EAAGwC,EAAG1T,EAAW+T,GAGjC,OAFKhP,GAAQgP,EAAavB,YAAcgB,EAAQO,EAAavB,cAC3DzN,EAAO0O,EAAKvC,EAAGwC,EAAG1T,EAAWwT,EAAQO,EAAavB,cAC7CzN,CACR,CACF,CAIM,SAASlD,EAAuCmS,EAAkC1S,GACvF,OAAO,SAACuP,GAAD,OAAYpS,OAAOwV,QAAQD,GAAeE,OAAM,+BAAEC,EAAF,KAAaC,EAAb,YAA4B9S,EAAc6S,IAAqB7S,EAAc6S,GAAkBtD,EAAKuD,EAApG,GAAhD,CACR,C,yGC7BM,SAASC,IACd,MAAO,CAAEC,QAAQ,EAClB,CAEM,SAAS/Z,IACd,MAAO,CACLga,UAAS,OAAKC,EAAAA,GACdha,UAAU,EAEb,C","sources":["Components/Artifact/ArtifactCardPico.tsx","Components/Artifact/ArtifactTooltip.tsx","Components/BootstrapTooltip.tsx","Components/Weapon/WeaponFullCard.tsx","Components/Character/CharacterCard.tsx","Components/Character/CharacterCardPico.tsx","Components/Character/CharacterSelectionModal.tsx","Components/ConditionalWrapper.tsx","Components/QuestionTooltip.tsx","Components/FieldDisplay.tsx","Components/SortByButton.tsx","Components/StarDisplay.tsx","Components/SolidColoredToggleButton.tsx","Components/ToggleButton/ElementToggle.tsx","Components/ToggleButton/WeaponToggle.tsx","Components/Weapon/WeaponCardPico.tsx","Components/Weapon/WeaponNameTooltip.tsx","Context/FormulaDataContext.tsx","Data/Resonance.tsx","ReactHooks/useCharSelectionCallback.tsx","ReactHooks/useCharacter.tsx","ReactHooks/useCharacterReducer.tsx","ReactHooks/useForceUpdate.tsx","ReactHooks/useMediaQueryUp.tsx","ReactHooks/useTeamData.tsx","ReactHooks/useWeapon.tsx","Util/CharacterSort.ts","Util/MultiSelect.ts","Util/SortByFilters.ts","stateInit.tsx"],"sourcesContent":["import { Box, Typography } from '@mui/material';\r\nimport Assets from '../../Assets/Assets';\r\nimport Artifact from '../../Data/Artifacts/Artifact';\r\nimport { ArtifactSheet } from '../../Data/Artifacts/ArtifactSheet';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { ICachedArtifact } from '../../Types/artifact';\r\nimport { allElementsWithPhy, SlotKey } from '../../Types/consts';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\nimport ArtifactTooltip from './ArtifactTooltip';\r\n\r\nexport default function ArtifactCardPico({ artifactObj: art, slotKey: key }: { artifactObj: ICachedArtifact | undefined, slotKey: SlotKey }) {\r\n  const artifactSheet = usePromise(() => art?.setKey && ArtifactSheet.get(art.setKey), [art?.setKey])\r\n  // Blank artifact slot icon\r\n  if (!art || !artifactSheet)\r\n    return <CardDark sx={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\r\n      <Box sx={{ width: \"100%\", pb: \"100%\", position: \"relative\", }}>\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            width: \"70%\", height: \"70%\",\r\n            left: \"50%\", top: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            opacity: 0.7\r\n          }}\r\n          component=\"img\"\r\n          src={Assets.slot[key]}\r\n        />\r\n      </Box>\r\n    </CardDark>\r\n\r\n  // Actual artifact icon + info\r\n  const { mainStatKey, rarity, level } = art\r\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\r\n  const color = element ?? \"secondary\"\r\n\r\n  return <ArtifactTooltip art={art}><CardDark sx={{ display: \"flex\", flexDirection: \"column\", position: \"relative\" }}>\r\n    <Box\r\n      component=\"img\"\r\n      className={`grad-${rarity}star`}\r\n      src={artifactSheet.slotIcons[key]}\r\n      maxWidth=\"100%\"\r\n      maxHeight=\"100%\"\r\n    />\r\n    <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", }}>\r\n      <strong><SqBadge sx={{ p: 0.5 }} color={Artifact.levelVariant(level)}><strong>+{level}</strong></SqBadge></strong>\r\n    </Typography>\r\n    <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", bottom: 0, right: 0 }}>\r\n      <SqBadge color={color} sx={{ p: 0.5 }}>{StatIcon[mainStatKey]}</SqBadge>\r\n    </Typography>\r\n  </CardDark></ArtifactTooltip>\r\n}\r\n","import { Box, Skeleton, Typography } from \"@mui/material\";\r\nimport { Suspense } from \"react\";\r\nimport Artifact from \"../../Data/Artifacts/Artifact\";\r\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\r\nimport KeyMap, { cacheValueString } from \"../../KeyMap\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport { ICachedArtifact, ICachedSubstat } from \"../../Types/artifact\";\r\nimport { clamp } from \"../../Util/Util\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport SqBadge from \"../SqBadge\";\r\nimport { StarsDisplay } from \"../StarDisplay\";\r\nimport StatIcon from \"../StatIcon\";\r\nimport { artifactSlotIcon } from \"./SlotNameWIthIcon\";\r\n\r\nexport default function ArtifactTooltip({ art, children }: { art: ICachedArtifact, children: JSX.Element }) {\r\n  const fallback = <Box>\r\n    <Skeleton variant=\"rectangular\" width={100} height={100} />\r\n  </Box>\r\n  const title = <Suspense fallback={fallback}>\r\n    <ArtifactData art={art} />\r\n  </Suspense>\r\n\r\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\r\n    {children}\r\n  </BootstrapTooltip>\r\n}\r\nfunction ArtifactData({ art }: { art: ICachedArtifact }) {\r\n  const sheet = usePromise(() => ArtifactSheet.get(art.setKey), [art.setKey])\r\n  const { slotKey, level, rarity, mainStatKey, substats } = art\r\n  const slotName = sheet?.getSlotName(slotKey)\r\n  const mainStatUnit = KeyMap.unit(mainStatKey)\r\n  const mainIcon = StatIcon[mainStatKey]\r\n  const mainVariant = KeyMap.getVariant(mainStatKey)\r\n  return <Box p={1}>\r\n    <Typography variant='h6'>{artifactSlotIcon(slotKey)} {slotName}</Typography>\r\n    <Typography variant=\"subtitle1\" color={`${mainVariant}.main`}>{mainIcon} {KeyMap.get(mainStatKey)} {cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, level) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</Typography>\r\n    <Typography variant=\"subtitle2\" sx={{ display: \"flex\", justifyContent: \"space-between\" }} ><StarsDisplay stars={rarity} /><SqBadge color={Artifact.levelVariant(level)}>+{level}</SqBadge> </Typography>\r\n    <Box py={1}>\r\n      {substats.map((stat: ICachedSubstat) => !!stat.value && <Typography key={stat.key} color={`roll${clamp(stat.rolls.length, 1, 6)}.main`}>\r\n        {StatIcon[stat.key]} {KeyMap.getStr(stat.key)} <strong>{`+${cacheValueString(stat.value, KeyMap.unit(stat.key))}${KeyMap.unit(stat.key)}`}</strong>\r\n      </Typography>)}\r\n    </Box>\r\n\r\n    <Typography color=\"success.main\">{sheet?.name}</Typography>\r\n  </Box>\r\n}\r\n","import { styled, Tooltip, tooltipClasses, TooltipProps } from \"@mui/material\";\r\n\r\nconst BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.arrow}`]: {\r\n    color: theme.palette.common.black,\r\n  },\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    maxWidth: 500,\r\n  },\r\n}));\r\nexport default BootstrapTooltip\r\n","import { Box, Typography } from '@mui/material';\r\nimport { useMemo } from 'react';\r\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\r\nimport { uiInput as input } from '../../Formula';\r\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\r\nimport { NodeDisplay } from '../../Formula/uiData';\r\nimport { valueString } from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport useWeapon from '../../ReactHooks/useWeapon';\r\nimport { ICachedWeapon } from '../../Types/weapon';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\n\r\nexport default function WeaponFullCard({ weaponId }: { weaponId: string }) {\r\n  const weapon = useWeapon(weaponId)\r\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n  return <CardDark>\r\n    <Box display=\"flex\" >\r\n      <Box flexShrink={1} maxWidth=\"35%\" display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`} >\r\n        <Box\r\n          component=\"img\"\r\n          src={weaponSheet.getImg(weapon.ascension)}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </Box>\r\n      <Box flexGrow={1} sx={{ p: 1 }}>\r\n        <Typography variant=\"body2\" gutterBottom><strong>{weaponSheet?.name}</strong></Typography>\r\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} gutterBottom>\r\n          <SqBadge color=\"primary\">Lv. {WeaponSheet.getLevelString(weapon as ICachedWeapon)}</SqBadge>\r\n          {weaponSheet.hasRefinement && <SqBadge color=\"info\">R{weapon.refinement}</SqBadge>}\r\n        </Typography>\r\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} >\r\n          <WeaponStat node={UIData.get(input.weapon.main)} />\r\n          <WeaponStat node={UIData.get(input.weapon.sub)} />\r\n        </Typography>\r\n\r\n      </Box>\r\n    </Box>\r\n  </CardDark>\r\n}\r\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\r\n  if (!node.info.key) return null\r\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\r\n  return <SqBadge color=\"secondary\">{StatIcon[node.info.key]} {val}</SqBadge>\r\n}\r\n","import { Favorite, FavoriteBorder } from '@mui/icons-material';\r\nimport { Box, CardActionArea, CardContent, Chip, Grid, IconButton, Skeleton, Typography } from '@mui/material';\r\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\r\nimport { ascensionMaxLevel } from '../../Data/LevelData';\r\nimport { DatabaseContext } from '../../Database/Database';\r\nimport { DataContext, dataContextObj, TeamData } from '../../Context/DataContext';\r\nimport { uiInput as input } from '../../Formula';\r\nimport KeyMap from '../../KeyMap';\r\nimport CharacterCardPico from './CharacterCardPico';\r\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\r\nimport useTeamData from '../../ReactHooks/useTeamData';\r\nimport { ICachedArtifact } from '../../Types/artifact';\r\nimport { allSlotKeys, CharacterKey, ElementKey, SlotKey } from '../../Types/consts';\r\nimport { range } from '../../Util/Util';\r\nimport ArtifactCardPico from '../Artifact/ArtifactCardPico';\r\nimport CardLight from '../Card/CardLight';\r\nimport ConditionalWrapper from '../ConditionalWrapper';\r\nimport { NodeFieldDisplay } from '../FieldDisplay';\r\nimport SqBadge from '../SqBadge';\r\nimport { StarsDisplay } from '../StarDisplay';\r\nimport StatIcon from '../StatIcon';\r\nimport WeaponCardPico from '../Weapon/WeaponCardPico';\r\nimport WeaponFullCard from '../Weapon/WeaponFullCard';\r\nimport { CharacterContext, CharacterContextObj } from '../../Context/CharacterContext';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\r\nimport useCharacter from '../../ReactHooks/useCharacter';\r\nimport useDBState from '../../ReactHooks/useDBState';\r\nimport { initCharMeta } from '../../stateInit';\r\n\r\ntype CharacterCardProps = {\r\n  characterKey: CharacterKey | \"\",\r\n  onClick?: (characterKey: CharacterKey) => void,\r\n  onClickHeader?: (characterKey: CharacterKey) => void,\r\n  onClickTeammate?: (characterKey: CharacterKey) => void,\r\n  artifactChildren?: Displayable,\r\n  weaponChildren?: Displayable,\r\n  characterChildren?: Displayable,\r\n  footer?: Displayable,\r\n  isTeammateCard?: boolean,\r\n}\r\nexport default function CharacterCard({ characterKey, artifactChildren, weaponChildren, characterChildren, onClick, onClickHeader, onClickTeammate, footer, isTeammateCard }: CharacterCardProps) {\r\n  const { teamData: teamDataContext } = useContext(DataContext)\r\n  const teamData = useTeamData(teamDataContext ? \"\" : characterKey) ?? (teamDataContext as TeamData | undefined)\r\n  const character = useCharacter(characterKey)\r\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey), [characterKey])\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const data = teamData?.[characterKey]?.target\r\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey), [characterKey, onClick])\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickHandler} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\r\n    [onClickHandler],\r\n  )\r\n\r\n  const characterContextObj: CharacterContextObj | undefined = useMemo(() => character && characterSheet && {\r\n    character, characterSheet, characterDispatch\r\n  }, [character, characterSheet, characterDispatch])\r\n  const dataContextObj: dataContextObj | undefined = useMemo(() => data && teamData && ({\r\n    data,\r\n    teamData,\r\n  }), [data, teamData])\r\n\r\n  const [{ favorite }, setCharMeta] = useDBState(`charMeta_${characterKey}`, initCharMeta)\r\n\r\n  if (!character || !dataContextObj || !characterContextObj) return null;\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 350 }} />}>\r\n    <CharacterContext.Provider value={characterContextObj}><DataContext.Provider value={dataContextObj}>\r\n      <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n        <Box sx={{ display: \"flex\", position: \"absolute\", zIndex: 2, opacity: 0.7 }}>\r\n          <IconButton sx={{ p: 0.5 }} onClick={_ => setCharMeta({ favorite: !favorite })}>\r\n            {favorite ? <Favorite /> : <FavoriteBorder />}\r\n          </IconButton>\r\n        </Box>\r\n        <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\r\n          <Header onClick={!onClick ? onClickHeader : undefined} />\r\n          <CardContent sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 1, flexGrow: 1 }}>\r\n            <Artifacts />\r\n            {!isTeammateCard && <Grid container columns={4} spacing={0.75}>\r\n              <Grid item xs={1} height=\"100%\">\r\n                <WeaponCardPico weaponId={character.equippedWeapon} />\r\n              </Grid>\r\n              {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={character.team[i]} onClick={!onClick ? onClickTeammate : undefined} index={i} /></Grid>)}\r\n            </Grid>}\r\n            {isTeammateCard && <WeaponFullCard weaponId={character.equippedWeapon} />}\r\n            {!isTeammateCard && <Stats />}\r\n            {weaponChildren}\r\n            {artifactChildren}\r\n            {characterChildren}\r\n          </CardContent>\r\n        </ConditionalWrapper>\r\n        {footer}\r\n      </CardLight>\r\n    </DataContext.Provider></CharacterContext.Provider>\r\n  </Suspense>\r\n}\r\nfunction Header({ onClick }: { onClick?: (characterKey: CharacterKey) => void }) {\r\n  const { characterSheet } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const characterKey = data.get(input.charKey).value as CharacterKey\r\n  const characterEle = data.get(input.charEle).value as ElementKey\r\n  const characterLevel = data.get(input.lvl).value\r\n  const constellation = data.get(input.constellation).value\r\n  const ascension = data.get(input.asc).value\r\n  const autoBoost = data.get(input.bonus.auto).value\r\n  const skillBoost = data.get(input.bonus.skill).value\r\n  const burstBoost = data.get(input.bonus.burst).value\r\n\r\n  const tAuto = data.get(input.total.auto).value\r\n  const tSkill = data.get(input.total.skill).value\r\n  const tBurst = data.get(input.total.burst).value\r\n\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={() => characterKey && onClick?.(characterKey)} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\r\n    [onClick, characterKey],\r\n  )\r\n  return <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\r\n    <Box display=\"flex\"\r\n      position=\"relative\"\r\n      className={`grad-${characterSheet.rarity}star`}\r\n      sx={{\r\n        \"&::before\": {\r\n          content: '\"\"',\r\n          display: \"block\", position: \"absolute\",\r\n          left: 0, top: 0,\r\n          width: \"100%\", height: \"100%\",\r\n          opacity: 0.7,\r\n          backgroundImage: `url(${characterSheet.bannerImg})`, backgroundPosition: \"center\", backgroundSize: \"cover\",\r\n        }\r\n      }}\r\n      width=\"100%\" >\r\n      <Box flexShrink={1} sx={{ maxWidth: { xs: \"40%\", lg: \"40%\" } }} alignSelf=\"flex-end\" display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n        <Box\r\n          component=\"img\"\r\n          src={characterSheet.thumbImg}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          maxWidth={256}\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </Box>\r\n      <Box flexGrow={1} sx={{ py: 1, pr: 1 }} display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n        <Chip label={<Typography variant=\"subtitle1\">{characterSheet.name}</Typography>} size=\"small\" color={characterEle} sx={{ opacity: 0.85 }} />\r\n        <Grid container spacing={1} flexWrap=\"nowrap\">\r\n          <Grid item sx={{ textShadow: \"0 0 5px gray\" }}>\r\n            <Typography component=\"span\" variant=\"h6\" whiteSpace=\"nowrap\" >Lv. {characterLevel}</Typography>\r\n            <Typography component=\"span\" variant=\"h6\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"h6\"><SqBadge>C{constellation}</SqBadge></Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1} flexWrap=\"nowrap\">\r\n          <Grid item>\r\n            <Chip color={autoBoost ? \"info\" : \"secondary\"} label={<strong >{tAuto}</strong>} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Chip color={skillBoost ? \"info\" : \"secondary\"} label={<strong >{tSkill}</strong>} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Chip color={burstBoost ? \"info\" : \"secondary\"} label={<strong >{tBurst}</strong>} />\r\n          </Grid>\r\n        </Grid>\r\n        <Typography mt={1} ><StarsDisplay stars={characterSheet.rarity} colored /></Typography>\r\n      </Box>\r\n    </Box>\r\n  </ConditionalWrapper>\r\n}\r\nfunction Artifacts() {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { data } = useContext(DataContext)\r\n  const artifacts = useMemo(() =>\r\n    allSlotKeys.map(k => [k, database.arts.get(data.get(input.art[k].id).value ?? \"\")]),\r\n    [data, database]) as Array<[SlotKey, ICachedArtifact | undefined]>;\r\n\r\n  return <Grid direction=\"row\" container spacing={0.75} columns={5}>\r\n    {artifacts.map(([key, art]: [SlotKey, ICachedArtifact | undefined]) =>\r\n      <Grid item key={key} xs={1}>\r\n        <ArtifactCardPico artifactObj={art} slotKey={key} />\r\n      </Grid>\r\n    )}\r\n  </Grid>\r\n}\r\n\r\nfunction Stats() {\r\n  const { data } = useContext(DataContext)\r\n  return <Box sx={{ width: \"100%\" }} >\r\n    {Object.values(data.getDisplay().basic).map(n => <NodeFieldDisplay key={n.info.key} node={n} />)}\r\n    {data.get(input.special).info.key && <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\r\n      <Typography flexGrow={1}><strong>Specialized:</strong></Typography>\r\n      {StatIcon[data.get(input.special).info.key!]}\r\n      <Typography>{KeyMap.get(data.get(input.special).info.key!)}</Typography>\r\n    </Box>}\r\n  </Box>\r\n}\r\n","import { Box, CardActionArea, Skeleton, Typography } from '@mui/material';\r\nimport { Suspense, useCallback } from 'react';\r\nimport Assets from '../../Assets/Assets';\r\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\r\nimport { ascensionMaxLevel } from '../../Data/LevelData';\r\nimport useCharacter from '../../ReactHooks/useCharacter';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { CharacterKey } from '../../Types/consts';\r\nimport BootstrapTooltip from '../BootstrapTooltip';\r\nimport CardDark from '../Card/CardDark';\r\nimport ConditionalWrapper from '../ConditionalWrapper';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\n\r\nexport default function CharacterCardPico({ characterKey = \"\", index = -1, onClick }: { characterKey: CharacterKey | \"\", index?: number, onClick?: (characterKey: CharacterKey) => void }) {\r\n  const teammateSheet = usePromise(() => CharacterSheet.get(characterKey), [characterKey])\r\n  const character = useCharacter(characterKey)\r\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey), [characterKey, onClick])\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickHandler}>{children}</CardActionArea>,\r\n    [onClickHandler])\r\n  if (teammateSheet && character) {\r\n    const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n      <Typography>{teammateSheet.elementKey && StatIcon[teammateSheet.elementKey]} {teammateSheet.name}</Typography>\r\n    </Suspense>\r\n\r\n    return <CardDark sx={{ maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\r\n      <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}>\r\n        <BootstrapTooltip placement=\"top\" title={title}>\r\n          <Box display=\"flex\" className={`grad-${teammateSheet.rarity}star`}>\r\n            <Box\r\n              component=\"img\"\r\n              src={teammateSheet.thumbImgSide}\r\n              maxWidth=\"100%\"\r\n              maxHeight=\"100%\"\r\n              sx={{ transform: \"scale(1.4)\", transformOrigin: \"bottom\" }}\r\n            />\r\n          </Box>\r\n        </BootstrapTooltip>\r\n        <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", top: 0, }}>\r\n          <strong><SqBadge color=\"primary\" >{character.level}/{ascensionMaxLevel[character.ascension]}</SqBadge></strong>\r\n        </Typography>\r\n        <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", bottom: 0, right: 0, }}>\r\n          <strong><SqBadge color=\"secondary\" >C{character.constellation}</SqBadge></strong>\r\n        </Typography>\r\n      </ConditionalWrapper>\r\n    </CardDark>\r\n  } else {\r\n    return <CardDark sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", py: \"12.5%\" }}>\r\n      <Box component=\"img\" src={Assets.team[`team${index + 2}`]} sx={{ width: \"75%\", height: \"auto\", opacity: 0.7 }} />\r\n    </CardDark>\r\n  }\r\n}\r\n","import { Favorite, FavoriteBorder } from \"@mui/icons-material\";\r\nimport { Box, CardActionArea, CardContent, Divider, Grid, IconButton, Skeleton, TextField, Typography } from \"@mui/material\";\r\nimport { ChangeEvent, Suspense, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\r\nimport { getLevelString } from \"../../Data/LevelData\";\r\nimport { DatabaseContext } from \"../../Database/Database\";\r\nimport { uiInput as input } from \"../../Formula\";\r\nimport useDBState from \"../../ReactHooks/useDBState\";\r\nimport useForceUpdate from \"../../ReactHooks/useForceUpdate\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport useTeamData from \"../../ReactHooks/useTeamData\";\r\nimport { initCharMeta } from \"../../stateInit\";\r\nimport { ICachedCharacter } from \"../../Types/character\";\r\nimport { allCharacterKeys, allElements, allWeaponTypeKeys, Ascension, CharacterKey } from \"../../Types/consts\";\r\nimport { characterFilterConfigs, characterSortConfigs } from \"../../Util/CharacterSort\";\r\nimport { filterFunction, sortFunction } from \"../../Util/SortByFilters\";\r\nimport CardDark from \"../Card/CardDark\";\r\nimport CardLight from \"../Card/CardLight\";\r\nimport CloseButton from \"../CloseButton\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport ModalWrapper from \"../ModalWrapper\";\r\nimport SortByButton from \"../SortByButton\";\r\nimport SqBadge from \"../SqBadge\";\r\nimport { StarsDisplay } from \"../StarDisplay\";\r\nimport StatIcon from \"../StatIcon\";\r\nimport ElementToggle from \"../ToggleButton/ElementToggle\";\r\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\";\r\n\r\nconst defaultSortKeys = [\"level\", \"rarity\", \"name\"]\r\n\r\ntype characterFilter = (character: ICachedCharacter | undefined, sheet: CharacterSheet) => boolean\r\n\r\ntype CharacterSelectionModalProps = {\r\n  show: boolean,\r\n  newFirst?: boolean\r\n  onHide: () => void,\r\n  onSelect?: (ckey: CharacterKey) => void,\r\n  filter?: characterFilter\r\n}\r\n\r\nexport function CharacterSelectionModal({ show, onHide, onSelect, filter = () => true, newFirst = false }: CharacterSelectionModalProps) {\r\n  const sortKeys = useMemo(() => newFirst ? [\"new\", ...defaultSortKeys] : defaultSortKeys, [newFirst])\r\n  const { database } = useContext(DatabaseContext)\r\n  const { t } = useTranslation([\"page_character\", \"charNames_gen\"])\r\n\r\n  const [sortBy, setsortBy] = useState(sortKeys[0])\r\n  const [ascending, setascending] = useState(false)\r\n  const [elementalFilter, setelementalFilter] = useState([...allElements])\r\n  const [weaponFilter, setweaponFilter] = useState([...allWeaponTypeKeys])\r\n\r\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\r\n\r\n  const [favesDirty, setFavesDirty] = useForceUpdate()\r\n  useEffect(() => {\r\n    return database.states.followAny(s => typeof s === \"string\" && s.includes(\"charMeta_\") && setFavesDirty())\r\n  }, [setFavesDirty, database])\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const deferredSearchTerm = useDeferredValue(searchTerm)\r\n\r\n  const sortConfigs = useMemo(() => characterSheets && characterSortConfigs(database, characterSheets), [database, characterSheets])\r\n  const filterConfigs = useMemo(() => characterSheets && favesDirty && characterFilterConfigs(database, characterSheets), [favesDirty, database, characterSheets])\r\n  const ownedCharacterKeyList = useMemo(() => characterSheets ? allCharacterKeys.filter(cKey => filter(database.chars.get(cKey), characterSheets[cKey])) : [], [database, characterSheets, filter])\r\n  const characterKeyList = useMemo(() => (characterSheets && sortConfigs && filterConfigs) ?\r\n    ownedCharacterKeyList\r\n      .filter(filterFunction({ element: elementalFilter, weaponType: weaponFilter, favorite: \"yes\", name: deferredSearchTerm }, filterConfigs))\r\n      .sort(sortFunction(sortBy, ascending, sortConfigs) as (a: CharacterKey, b: CharacterKey) => number)\r\n      .concat(\r\n        ownedCharacterKeyList\r\n          .filter(filterFunction({ element: elementalFilter, weaponType: weaponFilter, favorite: \"no\", name: deferredSearchTerm }, filterConfigs))\r\n          .sort(sortFunction(sortBy, ascending, sortConfigs) as (a: CharacterKey, b: CharacterKey) => number)\r\n      )\r\n    : [],\r\n    [characterSheets, elementalFilter, weaponFilter, sortBy, ascending, sortConfigs, filterConfigs, ownedCharacterKeyList, deferredSearchTerm])\r\n\r\n  if (!characterSheets) return null\r\n  return <ModalWrapper open={show} onClose={onHide} sx={{ \"& .MuiContainer-root\": { justifyContent: \"normal\" } }}>\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container spacing={1} flexWrap=\"nowrap\" >\r\n          <Grid item>\r\n            <WeaponToggle sx={{ height: \"100%\" }} onChange={setweaponFilter} value={weaponFilter} size=\"small\" />\r\n          </Grid>\r\n          <Grid item>\r\n            <ElementToggle sx={{ height: \"100%\" }} onChange={setelementalFilter} value={elementalFilter} size=\"small\" />\r\n          </Grid>\r\n          <Grid item flexShrink={2}>\r\n            <TextField\r\n              autoFocus\r\n              value={searchTerm}\r\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\r\n              label={t(\"characterName\")}\r\n              size=\"small\"\r\n              sx={{ height: \"100%\" }}\r\n              InputProps={{\r\n                sx: { height: \"100%\" }\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item >\r\n            <SortByButton sx={{ height: \"100%\" }}\r\n              sortKeys={sortKeys} value={sortBy} onChange={setsortBy as any}\r\n              ascending={ascending} onChangeAsc={setascending} />\r\n          </Grid>\r\n          <Grid item>\r\n            <CloseButton onClick={onHide} />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent><Grid container spacing={1}>\r\n        {characterKeyList.map(characterKey => <Grid item key={characterKey} xs={6} md={4} lg={3} >\r\n          <CharacterBtn key={characterKey} characterKey={characterKey} characterSheet={characterSheets[characterKey]} onClick={() => { onHide(); onSelect?.(characterKey) }} />\r\n        </Grid>)}\r\n      </Grid></CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n\r\nfunction CharacterBtn({ onClick, characterKey, characterSheet }: { onClick: () => void, characterKey: CharacterKey, characterSheet: CharacterSheet }) {\r\n  const teamData = useTeamData(characterKey)\r\n  const { target: data } = teamData?.[characterKey] ?? {}\r\n  const rarity = characterSheet.rarity\r\n  const element = data ? data.get(input.charEle).value : undefined\r\n  const [{ favorite }, setCharMeta] = useDBState(`charMeta_${characterKey}`, initCharMeta)\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" height={130} />}><Box>\r\n    {favorite !== undefined && <Box display=\"flex\" position=\"absolute\" alignSelf=\"start\" zIndex={1}>\r\n      <IconButton sx={{ p: 0.5 }} onClick={() => setCharMeta({ favorite: !favorite })}>\r\n        {favorite ? <Favorite /> : <FavoriteBorder />}\r\n      </IconButton>\r\n    </Box>}\r\n    <CardActionArea onClick={onClick} >\r\n      <CardLight sx={{ display: \"flex\", alignItems: \"center\" }}  >\r\n        <Box component=\"img\" src={characterSheet.thumbImg} sx={{ width: 130, height: \"auto\" }} className={`grad-${rarity}star`} />\r\n        <Box sx={{ pl: 1 }}>\r\n          <Typography><strong>{characterSheet.name}</strong></Typography>\r\n          {data ? <>\r\n            <Typography variant=\"h6\" sx={{ display: \"flex\", gap: 0.5, alignItems: \"center\" }}> {element && StatIcon[element]} <ImgIcon src={Assets.weaponTypes?.[characterSheet.weaponTypeKey]} />{` `}{getLevelString(data.get(input.lvl).value, data.get(input.asc).value as Ascension)}</Typography>\r\n            <Typography variant=\"subtitle2\" >\r\n              <SqBadge color=\"success\">{`C${data.get(input.constellation).value}`}</SqBadge>{` `}\r\n              <SqBadge color={data.get(input.bonus.auto).value ? \"info\" : \"secondary\"}><strong >{data.get(input.total.auto).value}</strong></SqBadge>{` `}\r\n              <SqBadge color={data.get(input.bonus.skill).value ? \"info\" : \"secondary\"}><strong >{data.get(input.total.skill).value}</strong></SqBadge>{` `}\r\n              <SqBadge color={data.get(input.bonus.burst).value ? \"info\" : \"secondary\"}><strong >{data.get(input.total.burst).value}</strong></SqBadge>\r\n            </Typography>\r\n          </> : <>\r\n            <Typography variant=\"h6\"><SqBadge color=\"primary\">NEW</SqBadge></Typography>\r\n          </>}\r\n          <small><StarsDisplay stars={rarity} colored /></small>\r\n        </Box>\r\n      </CardLight>\r\n    </CardActionArea >\r\n  </Box></Suspense>\r\n}\r\n","import { ReactNode } from \"react\";\r\n\r\ntype Prop = {\r\n  condition: boolean,\r\n  wrapper: (children: ReactNode) => ReactNode\r\n  falseWrapper?: (children: ReactNode) => ReactNode\r\n  children: ReactNode\r\n}\r\n// Wrap children with element provided by wrapper func when condition is true.\r\nexport default function ConditionalWrapper({ condition, wrapper, falseWrapper, children }: Prop) {\r\n  return (condition ? wrapper(children) : (falseWrapper ? falseWrapper(children) : children)) as JSX.Element;\r\n}","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, TooltipProps } from \"@mui/material\";\r\nimport BootstrapTooltip from \"./BootstrapTooltip\";\r\n\r\ninterface ITooltipProps extends Omit<TooltipProps, \"children\"> {\r\n  className?: string,\r\n}\r\nconst QuestionTooltip = ({ className, ...props }: ITooltipProps) =>\r\n  <BootstrapTooltip placement=\"top\" {...props} className={className}>\r\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\r\n  </BootstrapTooltip>\r\n\r\nexport default QuestionTooltip\r\n","import { Groups } from \"@mui/icons-material\";\r\nimport { Box, Divider, List, ListItem, ListProps, Palette, PaletteColor, Skeleton, styled, Typography } from \"@mui/material\";\r\nimport React, { Suspense, useCallback, useContext, useMemo } from 'react';\r\nimport { DataContext } from \"../Context/DataContext\";\r\nimport { FormulaDataContext } from \"../Context/FormulaDataContext\";\r\nimport { NodeDisplay } from \"../Formula/api\";\r\nimport { Variant } from \"../Formula/type\";\r\nimport KeyMap, { valueString } from \"../KeyMap\";\r\nimport { allAmpReactions, AmpReactionKey } from \"../Types/consts\";\r\nimport { IBasicFieldDisplay, IFieldDisplay } from \"../Types/fieldDisplay\";\r\nimport { evalIfFunc } from \"../Util/Util\";\r\nimport AmpReactionModeText from \"./AmpReactionModeText\";\r\nimport ColorText from \"./ColoredText\";\r\nimport QuestionTooltip from \"./QuestionTooltip\";\r\nimport StatIcon from \"./StatIcon\";\r\n\r\nexport default function FieldsDisplay({ fields }: { fields: IFieldDisplay[] }) {\r\n  return <FieldDisplayList sx={{ m: 0 }}>\r\n    {fields.map((field, i) => <FieldDisplay key={i} field={field} component={ListItem} />)}\r\n  </FieldDisplayList>\r\n}\r\n\r\nfunction FieldDisplay({ field, component }: { field: IFieldDisplay, component?: React.ElementType }) {\r\n  const { data, oldData } = useContext(DataContext)\r\n  const canShow = useMemo(() => field?.canShow?.(data) ?? true, [field, data])\r\n  if (!canShow) return null\r\n  if (\"node\" in field) {\r\n    const node = data.get(field.node)\r\n    if (node.isEmpty) return null\r\n    if (oldData) {\r\n      const oldNode = oldData.get(field.node)\r\n      const oldValue = oldNode.isEmpty ? 0 : oldNode.value\r\n      return <NodeFieldDisplay node={node} oldValue={oldValue} suffix={field.textSuffix} component={component} />\r\n    }\r\n    else return <NodeFieldDisplay node={node} suffix={field.textSuffix} component={component} />\r\n  }\r\n  return <BasicFieldDisplay field={field} component={component} />\r\n}\r\n\r\nexport function BasicFieldDisplay({ field, component }: { field: IBasicFieldDisplay, component?: React.ElementType }) {\r\n  const { data } = useContext(DataContext)\r\n  const v = evalIfFunc(field.value, data)\r\n  const variant = evalIfFunc(field.variant, data)\r\n  const text = field.text && <span>{field.text}</span>\r\n  const suffix = field.textSuffix && <span>{field.textSuffix}</span>\r\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1 }} component={component} >\r\n    <Typography color={`${variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{text}{suffix}</Typography>\r\n    <Typography >{typeof v === \"number\" ? v.toFixed?.(field.fixed) : v}{field.unit}</Typography>\r\n  </Box>\r\n}\r\n\r\nexport function NodeFieldDisplay({ node, oldValue, suffix, component, emphasize }: { node: NodeDisplay, oldValue?: number, suffix?: Displayable, component?: React.ElementType, emphasize?: boolean }) {\r\n  const { data } = useContext(DataContext)\r\n  const { setFormulaData } = useContext(FormulaDataContext)\r\n  const onClick = useCallback(() => setFormulaData(data, node), [setFormulaData, data, node])\r\n\r\n  if (node.isEmpty) return null\r\n\r\n  suffix = suffix && <span>{suffix}</span>\r\n  const icon = node.info.key && StatIcon[node.info.key]\r\n  const fieldText = node.info.key ? KeyMap.get(node.info.key) : \"\"\r\n  const isTeamBuff = node.info.isTeamBuff\r\n  const fieldFormulaText = node.formula\r\n  let fieldVal = \"\" as Displayable\r\n  if (oldValue !== undefined) {\r\n    const diff = node.value - oldValue\r\n    fieldVal = <span>{valueString(oldValue, node.unit)}{diff > 0.0001 || diff < -0.0001 ? <ColorText color={diff > 0 ? \"success\" : \"error\"}> {diff > 0 ? \"+\" : \"\"}{valueString(diff, node.unit)}</ColorText> : \"\"}</span>\r\n  } else fieldVal = valueString(node.value, node.unit)\r\n\r\n  const formulaTextOverlay = !!node.formula && <QuestionTooltip onClick={onClick} title={<Typography><Suspense fallback={<Skeleton variant=\"rectangular\" width={300} height={30} />}>\r\n    {allAmpReactions.includes(node.info.variant as any) && <Box sx={{ display: \"inline-flex\", gap: 1, mr: 1 }}>\r\n      <Box><AmpReactionModeText reaction={node.info.variant as AmpReactionKey} trigger={node.info.subVariant as Variant} /></Box>\r\n      <Divider orientation=\"vertical\" flexItem />\r\n    </Box>}\r\n    <span>{fieldFormulaText}</span>\r\n  </Suspense></Typography>} />\r\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1, boxShadow: emphasize ? \"0px 0px 0px 2px red inset\" : undefined }} component={component} >\r\n    <Typography color={`${node.info.variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{!!isTeamBuff && <Groups />}{icon}{fieldText}{suffix}</Typography>\r\n    <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>\r\n      <Typography noWrap>{fieldVal}</Typography>\r\n      {formulaTextOverlay}\r\n    </Box>\r\n  </Box>\r\n}\r\nexport interface FieldDisplayListProps extends ListProps {\r\n  light?: keyof Palette,\r\n  dark?: keyof Palette,\r\n  palletOption?: keyof PaletteColor\r\n}\r\nexport const FieldDisplayList = styled(List)<FieldDisplayListProps>(({ theme, light = \"contentDark\", dark = \"contentDarker\", palletOption = \"main\" }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  overflow: \"hidden\",\r\n  margin: 0,\r\n  '> .MuiListItem-root:nth-of-type(even)': {\r\n    backgroundColor: (theme.palette[light] as PaletteColor)[palletOption]\r\n  },\r\n  '> .MuiListItem-root:nth-of-type(odd)': {\r\n    backgroundColor: (theme.palette[dark] as PaletteColor)[palletOption]\r\n  },\r\n}));\r\n","import { faSortAmountDownAlt, faSortAmountUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button, ButtonGroup, ButtonGroupProps, MenuItem } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport DropdownButton from \"./DropdownMenu/DropdownButton\";\r\n\r\ntype SortByButtonProps = ButtonGroupProps & {\r\n  sortKeys: string[]\r\n  value: string\r\n  onChange: (value: string) => void\r\n  ascending: boolean\r\n  onChangeAsc: (value: boolean) => void\r\n}\r\n// Assumes that all the sortKeys has corresponding translations in ui.json sortMap\r\nexport default function SortByButton({ sortKeys, value, onChange, ascending, onChangeAsc, ...props }: SortByButtonProps) {\r\n  const { t } = useTranslation(\"ui\")\r\n  return <Box display=\"flex\" alignItems=\"center\" gap={1}>\r\n    <Trans t={t} i18nKey={t(\"sortBy\") as any}>Sort by: </Trans>\r\n    <ButtonGroup {...props} >\r\n      <DropdownButton title={<Trans t={t} i18nKey={t(`sortMap.${value}`) as any}>{{ value: t(`sortMap.${value}`) }}</Trans>}>\r\n        {sortKeys.map(key =>\r\n          <MenuItem key={key} selected={value === key} disabled={value === key} onClick={() => onChange(key)}>{t(`sortMap.${key}`) as any}</MenuItem>)}\r\n      </DropdownButton>\r\n      <Button onClick={() => onChangeAsc(!ascending)} startIcon={<FontAwesomeIcon icon={ascending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" />}>\r\n        {ascending ? <Trans t={t} i18nKey=\"ascending\" >Ascending</Trans> : <Trans t={t} i18nKey=\"descending\" >Descending</Trans>}\r\n      </Button>\r\n    </ButtonGroup>\r\n  </Box>\r\n}\r\n","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Typography } from '@mui/material'\r\nimport { Rarity } from '../Types/consts'\r\n\r\nexport const StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nexport const StarsDisplay = ({ stars, colored = false }: { stars: Rarity, colored?: boolean }) =>\r\n  <Typography color={colored ? \"warning.main\" : undefined} component=\"span\">\r\n    {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n  </Typography>\r\n","import { ButtonProps, ToggleButton, ToggleButtonProps, styled } from \"@mui/material\";\r\n\r\ntype SolidColoredToggleButtonPartial = {\r\n  baseColor?: ButtonProps[\"color\"];\r\n  selectedColor?: ButtonProps[\"color\"];\r\n}\r\nexport type SolidColoredToggleButtonProps = SolidColoredToggleButtonPartial & ToggleButtonProps\r\n\r\n\r\nconst SolidColoredToggleButton = styled(ToggleButton, {\r\n  shouldForwardProp: (prop) => prop !== \"baseColor\" && prop !== \"selectedColor\"\r\n})<SolidColoredToggleButtonPartial>(({ theme, baseColor = \"secondary\", selectedColor = \"success\" }) => ({\r\n  '&': {\r\n    backgroundColor: theme.palette[baseColor].main,\r\n    color: theme.palette[baseColor].contrastText,\r\n  },\r\n  '&:hover': {\r\n    backgroundColor: theme.palette[baseColor].dark,\r\n  },\r\n  '&.Mui-selected': {\r\n    backgroundColor: theme.palette[selectedColor].main,\r\n    color: theme.palette[selectedColor].contrastText,\r\n  },\r\n  '&.Mui-selected:hover': {\r\n    backgroundColor: theme.palette[selectedColor].dark,\r\n  },\r\n  '&.Mui-disabled': {\r\n    backgroundColor: theme.palette[baseColor].dark,\r\n  },\r\n  '&.Mui-selected.Mui-disabled': {\r\n    backgroundColor: theme.palette[selectedColor].dark,\r\n  },\r\n}));\r\n\r\nexport default SolidColoredToggleButton\r\n","import { Box, ToggleButtonGroup } from \"@mui/material\";\r\nimport { allElements, ElementKey } from \"../../Types/consts\";\r\nimport { handleMultiSelect } from \"../../Util/MultiSelect\";\r\nimport SolidColoredToggleButton from \"../SolidColoredToggleButton\";\r\nimport { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\nimport StatIcon from \"../StatIcon\";\r\ntype ElementToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: ElementKey[]) => void\r\n  value: ElementKey[]\r\n}\r\nconst elementHandler = handleMultiSelect([...allElements])\r\nexport default function ElementToggle({ value, onChange, ...props }: ElementToggleProps) {\r\n  return <ToggleButtonGroup exclusive value={value} {...props}>\r\n    {allElements.map(ele => <SolidColoredToggleButton key={ele} value={ele} selectedColor={ele} onClick={() => onChange(elementHandler(value, ele))}>\r\n      <Box sx={{ fontSize: \"2em\", lineHeight: 1 }}>{StatIcon[ele]}</Box>\r\n    </SolidColoredToggleButton>)}\r\n  </ToggleButtonGroup>\r\n}\r\n","import { ToggleButton } from \"@mui/material\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport { allWeaponTypeKeys, WeaponTypeKey } from \"../../Types/consts\";\r\nimport { handleMultiSelect } from \"../../Util/MultiSelect\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport SolidToggleButtonGroup, { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\ntype WeaponToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: WeaponTypeKey[]) => void\r\n  value: WeaponTypeKey[]\r\n}\r\nconst weaponTypeHandler = handleMultiSelect([...allWeaponTypeKeys])\r\nexport default function WeaponToggle({ value, onChange, ...props }: WeaponToggleProps) {\r\n  return <SolidToggleButtonGroup exclusive value={value} {...props}>\r\n    {allWeaponTypeKeys.map(wt => <ToggleButton key={wt} value={wt} onClick={() => onChange(weaponTypeHandler(value, wt))}>\r\n      <ImgIcon src={Assets.weaponTypes?.[wt]} size={2} />\r\n    </ToggleButton>)}\r\n  </SolidToggleButtonGroup>\r\n}\r\n","import { Box, Typography } from '@mui/material';\r\nimport { useMemo } from 'react';\r\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\r\nimport { uiInput as input } from '../../Formula';\r\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\r\nimport { NodeDisplay } from '../../Formula/uiData';\r\nimport { valueString } from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport useWeapon from '../../ReactHooks/useWeapon';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport StatIcon from '../StatIcon';\r\nimport WeaponNameTooltip from './WeaponNameTooltip';\r\n\r\nexport default function WeaponCardPico({ weaponId }: { weaponId: string }) {\r\n  const weapon = useWeapon(weaponId)\r\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n\r\n  const tooltipAddl = <Box>\r\n    <WeaponStatPico node={UIData.get(input.weapon.main)} />\r\n    <WeaponStatPico node={UIData.get(input.weapon.sub)} />\r\n  </Box>\r\n\r\n  return <CardDark sx={{ height: \"100%\", maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\r\n    <Box display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`}>\r\n      <WeaponNameTooltip sheet={weaponSheet} addlText={tooltipAddl}>\r\n        <Box\r\n          component=\"img\"\r\n          src={weaponSheet.getImg(weapon.ascension)}\r\n          maxWidth=\"100%\"\r\n          maxHeight=\"100%\"\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </WeaponNameTooltip>\r\n    </Box>\r\n    <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", }}>\r\n      <strong><SqBadge color=\"primary\">{WeaponSheet.getLevelString(weapon)}</SqBadge></strong>\r\n    </Typography>\r\n    {weaponSheet.hasRefinement && <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", bottom: 0, right: 0, }}>\r\n      <strong><SqBadge color=\"secondary\">R{weapon.refinement}</SqBadge></strong>\r\n    </Typography>}\r\n  </CardDark>\r\n}\r\nfunction WeaponStatPico({ node }: { node: NodeDisplay }) {\r\n  if (!node.info.key) return null\r\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\r\n  return <Typography>{StatIcon[node.info.key]} {val}</Typography>\r\n}\r\n","import { Skeleton, Typography } from \"@mui/material\";\r\nimport { ReactElement, ReactNode, Suspense } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\n\r\ntype Data = {\r\n  sheet: WeaponSheet,\r\n  addlText?: any,\r\n  children: ReactElement<any, any> & ReactNode,\r\n}\r\nexport default function WeaponNameTooltip({ sheet, addlText, children }: Data) {\r\n  const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n    <Typography><ImgIcon src={Assets.weaponTypes[sheet.weaponType]} /> {sheet.name}</Typography>\r\n    {addlText}\r\n  </Suspense>\r\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\r\n    {children}\r\n  </BootstrapTooltip>\r\n}\r\n","import { createContext, useCallback, useState } from \"react\";\r\nimport { NodeDisplay, UIData } from \"../Formula/uiData\";\r\nimport useBoolState from \"../ReactHooks/useBoolState\";\r\n\r\ntype FormulaDataContextObj = {\r\n  data?: UIData,\r\n  node?: NodeDisplay,\r\n  modalOpen?: boolean,\r\n  onModalOpen: () => void,\r\n  onModalClose: () => void,\r\n  setFormulaData: (data?: UIData, node?: NodeDisplay) => void\r\n}\r\nexport const FormulaDataContext = createContext({ setFormulaData: () => { }, onModalOpen: () => { }, onModalClose: () => { } } as FormulaDataContextObj);\r\n\r\nexport function FormulaDataWrapper({ children }: { children: JSX.Element }) {\r\n  const [open, onOpen, onClose] = useBoolState()\r\n  const [[data, node], setState] = useState([undefined, undefined] as [data: UIData | undefined, node: NodeDisplay | undefined])\r\n  const setFormulaData = useCallback((data?: UIData, node?: NodeDisplay) => {\r\n    if (data && node) onOpen()\r\n    else onClose()\r\n    setState([data, node])\r\n  }, [onOpen, onClose])\r\n  return <FormulaDataContext.Provider value={{ setFormulaData, data, node, modalOpen: open, onModalOpen: onOpen, onModalClose: onClose }} >{children}</FormulaDataContext.Provider>\r\n}\r\n","import StatIcon from \"../Components/StatIcon\";\r\nimport { Translate } from \"../Components/Translate\";\r\nimport { tally } from \"../Formula\";\r\nimport { inferInfoMut } from \"../Formula/api\";\r\nimport { UIData } from \"../Formula/uiData\";\r\nimport { equal, greaterEq, infoMut, percent, sum } from \"../Formula/utils\";\r\nimport { allElements, allElementsWithPhy } from \"../Types/consts\";\r\nimport { DocumentSection } from \"../Types/sheet\";\r\nimport { objectKeyValueMap } from \"../Util/Util\";\r\nimport { condReadNode, sgt, st } from \"./SheetUtil\";\r\nconst tr = (strKey: string) => <Translate ns=\"elementalResonance_gen\" key18={strKey} />\r\nconst trm = (strKey: string) => <Translate ns=\"elementalResonance\" key18={strKey} />\r\n\r\ntype IResonance = {\r\n  name: Displayable,\r\n  desc: Displayable,\r\n  icon: Displayable,\r\n  canShow: (data: UIData) => boolean\r\n  sections: DocumentSection[]\r\n}\r\n\r\nconst teamSize = sum(...allElements.map(ele => tally[ele]))\r\n\r\n// Protective Canopy\r\nconst pcNodes = objectKeyValueMap(allElementsWithPhy, e => [`${e}_res_`, greaterEq(tally.ele, 4, percent(0.15))])\r\n\r\nconst protectiveCanopy: IResonance = {\r\n  name: tr(\"ProtectiveCanopy.name\"),\r\n  desc: tr(\"ProtectiveCanopy.desc\"),\r\n  icon: <span>{StatIcon.anemo} {StatIcon.geo} {StatIcon.pyro} {StatIcon.hydro} {StatIcon.cryo} {StatIcon.electro} x4</span>,\r\n  canShow: (data: UIData) => allElements.filter(e => data.get(tally[e]).value >= 1).length === 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: Object.values(pcNodes).map(node => ({ node }))\r\n  }]\r\n}\r\n\r\n// Fervent Flames\r\nconst ffNode = greaterEq(teamSize, 4, greaterEq(tally.pyro, 2, percent(0.25)))\r\nconst ferventFlames: IResonance = {\r\n  name: tr(\"FerventFlames.name\"),\r\n  desc: tr(\"FerventFlames.desc\"),\r\n  icon: <span>{StatIcon.pyro} {StatIcon.pyro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.pyro).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.cryo\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }, {\r\n      node: ffNode\r\n    }]\r\n  }]\r\n}\r\n\r\n// Soothing Waters\r\nconst swNode = greaterEq(teamSize, 4, greaterEq(tally.hydro, 2, percent(0.25)))\r\nconst soothingWaters: IResonance = {\r\n  name: tr(\"SoothingWater.name\"),\r\n  desc: tr(\"SoothingWater.desc\"),\r\n  icon: <span>{StatIcon.hydro} {StatIcon.hydro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.hydro).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.pyro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }, {\r\n      node: swNode\r\n    }]\r\n  }]\r\n}\r\n\r\n//ShatteringIce\r\nconst condSIPath = [\"resonance\", \"ShatteringIce\"]\r\nconst condSI = condReadNode(condSIPath)\r\nconst siNode = greaterEq(teamSize, 4, greaterEq(tally.cryo, 2, equal(condSI, \"on\", percent(0.15))))\r\nconst shatteringIce: IResonance = {\r\n  name: tr(\"ShatteringIce.name\"),\r\n  desc: tr(\"ShatteringIce.desc\"),\r\n  icon: <span>{StatIcon.cryo} {StatIcon.cryo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.cryo).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.electro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }]\r\n  }, {\r\n    teamBuff: true,\r\n    path: condSIPath,\r\n    value: condSI,\r\n    name: trm(\"ShatteringIce.cond\"),\r\n    header: {\r\n      title: tr(\"ShatteringIce.name\"),\r\n      icon: StatIcon.cryo,\r\n    },\r\n    states: {\r\n      on: {\r\n        fields: [{\r\n          node: siNode\r\n        }]\r\n      }\r\n    }\r\n  }]\r\n}\r\n\r\n// High Voltage\r\nconst highVoltage: IResonance = {\r\n  name: tr(\"HighVoltage.name\"),\r\n  desc: tr(\"HighVoltage.desc\"),\r\n  icon: <span>{StatIcon.electro} {StatIcon.electro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.electro).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      text: st(\"effectDuration.hydro\"),\r\n      value: -40,\r\n      unit: \"%\"\r\n    }]\r\n  }]\r\n}\r\n\r\n// Impetuous Winds\r\nconst iwNodeStam = greaterEq(teamSize, 4, greaterEq(tally.anemo, 2, percent(-0.15)))\r\nconst iwNodeMove = greaterEq(teamSize, 4, greaterEq(tally.anemo, 2, percent(0.1)))\r\nconst iwNodeCD = greaterEq(teamSize, 4, greaterEq(tally.anemo, 2, percent(-0.05)))\r\nconst impetuousWinds: IResonance = {\r\n  name: tr(\"ImpetuousWinds.name\"),\r\n  desc: tr(\"ImpetuousWinds.desc\"),\r\n  icon: <span>{StatIcon.anemo} {StatIcon.anemo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.anemo).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    fields: [{\r\n      node: iwNodeStam\r\n    }, {\r\n      node: iwNodeMove\r\n    }, {\r\n      node: iwNodeCD\r\n    }]\r\n  }]\r\n}\r\n\r\n// Enduring Rock\r\nconst condERPath = [\"resonance\", \"EnduringRock\"]\r\nconst condER = condReadNode(condERPath)\r\nconst erNodeshield_ = greaterEq(teamSize, 4, greaterEq(tally.geo, 2, percent(0.15)))\r\nconst erNodeDMG_ = greaterEq(teamSize, 4, greaterEq(tally.geo, 2, equal(condER, \"on\", percent(0.15))))\r\nconst erNodeRes_ = greaterEq(teamSize, 4, greaterEq(tally.geo, 2, equal(condER, \"on\", percent(-0.2))))\r\nconst enduringRock: IResonance = {\r\n  name: tr(\"EnduringRock.name\"),\r\n  desc: tr(\"EnduringRock.desc\"),\r\n  icon: <span>{StatIcon.geo} {StatIcon.geo}</span>,\r\n  canShow: (data: UIData) => data.get(tally.geo).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    text: tr(\"EnduringRock.desc\"),\r\n    fields: [{\r\n      node: erNodeshield_\r\n    }]\r\n  }, {\r\n    teamBuff: true,\r\n    path: condERPath,\r\n    value: condER,\r\n    header: {\r\n      title: tr(\"EnduringRock.name\"),\r\n      icon: StatIcon.geo,\r\n    },\r\n    name: st(\"protectedByShield\"),\r\n    states: {\r\n      on: {\r\n        fields: [{\r\n          node: erNodeDMG_\r\n        }, {\r\n          node: erNodeRes_\r\n        }, {\r\n          text: sgt(\"duration\"),\r\n          value: 15,\r\n          unit: \"s\"\r\n        }]\r\n      }\r\n    }\r\n  }]\r\n}\r\n\r\n// Sprawling Canopy\r\nconst condSC2elePath = [\"resonance\", \"SprawlingCanopy2ele\"]\r\nconst condSC2ele = condReadNode(condSC2elePath)\r\nconst condSC3elePath = [\"resonance\", \"SprawlingCanopy3ele\"]\r\nconst condSC3ele = condReadNode(condSC3elePath)\r\nconst scBase_eleMas = greaterEq(teamSize, 4, greaterEq(tally.dendro, 2, 50, { key: \"eleMas\" }))\r\nconst sc2ele_eleMas = greaterEq(teamSize, 4, greaterEq(tally.dendro, 2, equal(condSC2ele, \"on\", 30, { key: \"eleMas\" })))\r\nconst sc3ele_eleMas = greaterEq(teamSize, 4, greaterEq(tally.dendro, 2, equal(condSC3ele, \"on\", 20, { key: \"eleMas\" })))\r\nconst sprawlingGreenery: IResonance = {\r\n  name: tr(\"SprawlingGreenery.name\"),\r\n  desc: tr(\"SprawlingGreenery.desc\"),\r\n  icon: <span>{StatIcon.dendro} {StatIcon.dendro}</span>,\r\n  canShow: (data: UIData) => data.get(tally.dendro).value >= 2 && data.get(teamSize).value >= 4,\r\n  sections: [{\r\n    teamBuff: true,\r\n    text: tr(\"SprawlingGreenery.desc\"),\r\n    fields: [{ node: scBase_eleMas }]\r\n  }, {\r\n    teamBuff: true,\r\n    path: condSC2elePath,\r\n    value: condSC2ele,\r\n    header: {\r\n      title: tr(\"SprawlingGreenery.name\"),\r\n      icon: StatIcon.dendro,\r\n    },\r\n    name: trm(\"SprawlingGreenery.cond2ele\"),\r\n    states: {\r\n      on: {\r\n        fields: [{\r\n          node: sc2ele_eleMas\r\n        }, {\r\n          text: sgt(\"duration\"),\r\n          value: 6,\r\n          unit: \"s\"\r\n        }]\r\n      }\r\n    }\r\n  }, {\r\n    teamBuff: true,\r\n    path: condSC3elePath,\r\n    value: condSC3ele,\r\n    header: {\r\n      title: tr(\"SprawlingGreenery.name\"),\r\n      icon: StatIcon.dendro,\r\n    },\r\n    name: trm(\"SprawlingGreenery.cond3ele\"),\r\n    states: {\r\n      on: {\r\n        fields: [{\r\n          node: sc3ele_eleMas\r\n        }, {\r\n          text: sgt(\"duration\"),\r\n          value: 6,\r\n          unit: \"s\"\r\n        }]\r\n      }\r\n    }\r\n  }]\r\n}\r\n\r\n\r\nexport const resonanceSheets: IResonance[] = [\r\n  protectiveCanopy,\r\n  ferventFlames,\r\n  soothingWaters,\r\n  shatteringIce,\r\n  highVoltage,\r\n  impetuousWinds,\r\n  enduringRock,\r\n  sprawlingGreenery,\r\n]\r\n\r\nexport const resonanceData = inferInfoMut({\r\n  premod: {\r\n    ...pcNodes,\r\n    atk_: ffNode,\r\n    hp_: swNode,\r\n    staminaDec_: iwNodeStam,\r\n    moveSPD_: iwNodeMove,\r\n    cdRed_: iwNodeCD,\r\n    shield_: erNodeshield_,\r\n    all_dmg_: erNodeDMG_,\r\n    geo_enemyRes_: erNodeRes_,\r\n    eleMas: infoMut(sum(scBase_eleMas, sc2ele_eleMas, sc3ele_eleMas), { pivot: true }),\r\n  },\r\n  total: {\r\n    // TODO: this crit rate is on-hit. Might put it in a `hit.critRate_` namespace later.\r\n    critRate_: siNode\r\n  }\r\n})\r\n","import { useCallback, useContext } from \"react\";\r\nimport { useNavigate, useMatch } from \"react-router\";\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { allSlotKeys, CharacterKey } from \"../Types/consts\";\r\nimport { defaultInitialWeapon } from \"../Util/WeaponUtil\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { objectKeyMap } from \"../Util/Util\";\r\n\r\n/**\r\n * Basically a history hook to go to the dedicated character page. Will create the character if it doesn't exist.\r\n * @returns\r\n */\r\nexport default function useCharSelectionCallback() {\r\n  const { database } = useContext(DatabaseContext)\r\n  const navigate = useNavigate()\r\n  // Used to maintain the previous tab, if there is one\r\n  let { params: { tab = \"\" } } = useMatch({ path: \"/characters/:charKey/:tab\", end: false }) ?? { params: { tab: \"\" } }\r\n  const cb = useCallback(\r\n    async (characterKey: CharacterKey) => {\r\n      const character = database.chars.get(characterKey)\r\n      let navTab = tab\r\n      // Create a new character + weapon, with linking if char isnt in db.\r\n      if (!character) {\r\n        const newChar = initialCharacter(characterKey)\r\n        database.chars.set(characterKey, newChar)\r\n        const characterSheet = await CharacterSheet.get(characterKey)\r\n        if (!characterSheet) return\r\n        const weapon = defaultInitialWeapon(characterSheet.weaponTypeKey)\r\n        const weaponId = database.weapons.new(weapon)\r\n        database.weapons.set(weaponId, { location: characterKey })\r\n        // If we are navigating to a new character,\r\n        // redirect to Overview, regardless of previous tab.\r\n        // Trying to enforce a certain UI flow when building new characters\r\n        navTab = \"\"\r\n      }\r\n      navigate(`/characters/${characterKey}/${navTab}`)\r\n    },\r\n    [navigate, database, tab],\r\n  )\r\n  return cb\r\n}\r\n\r\nexport function initialCharacter(key: CharacterKey): ICachedCharacter {\r\n  return {\r\n    key,\r\n    level: 1,\r\n    ascension: 0,\r\n    hitMode: \"avgHit\",\r\n    equippedArtifacts: objectKeyMap(allSlotKeys, () => \"\"),\r\n    equippedWeapon: \"\",\r\n    conditional: {},\r\n    bonusStats: {},\r\n    enemyOverride: {},\r\n    talent: {\r\n      auto: 1,\r\n      skill: 1,\r\n      burst: 1,\r\n    },\r\n    infusionAura: \"\",\r\n    constellation: 0,\r\n    team: [\"\", \"\", \"\"],\r\n    teamConditional: {},\r\n    compareData: false,\r\n    customMultiTarget: []\r\n  }\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\n\r\nexport default function useCharacter(characterKey: CharacterKey | \"\" | undefined = \"\") {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [character, updateCharacter] = useState(database.chars.get(characterKey))\r\n  useEffect(() => updateCharacter(database.chars.get(characterKey)), [database, characterKey])\r\n  useEffect(() =>\r\n    characterKey ? database.chars.follow(characterKey, updateCharacter) : undefined,\r\n    [characterKey, updateCharacter, database])\r\n  return character\r\n}\r\n","import { useCallback, useContext } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { IConditionalValues } from \"../Types/sheet\";\r\nimport { deepClone } from \"../Util/Util\";\r\n\r\ntype characterReducerBonusStatsAction = {\r\n  type: \"editStats\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\ntype characterReducerenemyOverrideAction = {\r\n  type: \"enemyOverride\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\ntype characterReducerResetStatsAction = {\r\n  type: \"resetStats\",\r\n  statKey: string\r\n}\r\ntype characterTeamAction = {\r\n  type: \"team\",\r\n  index: number,\r\n  charKey: CharacterKey | \"\"\r\n}\r\ntype characterTeamConditional = {\r\n  type: \"teamConditional\",\r\n  teamMateKey: CharacterKey,\r\n  conditional: IConditionalValues\r\n}\r\nexport type characterReducerAction = characterReducerBonusStatsAction | characterReducerenemyOverrideAction | characterReducerResetStatsAction | characterTeamAction | characterTeamConditional | Partial<ICachedCharacter>\r\n\r\nexport default function useCharacterReducer(characterKey: CharacterKey | \"\") {\r\n\r\n  const { database } = useContext(DatabaseContext)\r\n\r\n  return useCallback((action: characterReducerAction): void => {\r\n    if (!characterKey) return\r\n    const character = database.chars.get(characterKey)\r\n    if (!character) return\r\n    if (\"type\" in action) switch (action.type) {\r\n      case \"enemyOverride\": {\r\n        const enemyOverride = character.enemyOverride\r\n        const { statKey, value } = action\r\n        if (enemyOverride[statKey] === value) break\r\n        database.chars.set(characterKey, { ...character, enemyOverride: { ...enemyOverride, [statKey]: value } })\r\n        break\r\n      }\r\n      case \"editStats\": {\r\n        const { statKey, value } = action\r\n        const bonusStats = deepClone(character.bonusStats)\r\n        if (bonusStats[statKey] === value) break\r\n        if (!value) delete bonusStats[statKey]\r\n        else bonusStats[statKey] = value\r\n        database.chars.set(characterKey, { ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"resetStats\": {\r\n        const { statKey } = action\r\n        const bonusStats = character.bonusStats\r\n        delete bonusStats[statKey]\r\n        database.chars.set(characterKey, { ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"teamConditional\": {\r\n        const { teamMateKey, conditional } = action\r\n        const teamConditional = deepClone(character.teamConditional)\r\n        teamConditional[teamMateKey] = conditional\r\n        database.chars.set(characterKey, { ...character, teamConditional })\r\n        break\r\n      }\r\n      case \"team\": {\r\n        const { team: team_ } = character\r\n        const team = [...team_] as ICachedCharacter[\"team\"]\r\n        const { index, charKey } = action\r\n        team[index] = charKey\r\n        // update src character\r\n        database.chars.set(characterKey, { ...character, team })\r\n      }\r\n    } else\r\n      database.chars.set(characterKey, { ...character, ...action })\r\n  }, [characterKey, database])\r\n}\r\n","import { useCallback, useState } from \"react\"\r\n\r\nexport default function useForceUpdate(): [object, () => void] {\r\n  const [stateDirty, update] = useState({})\r\n  const forceUpdateHook = useCallback(() => update({}), [])\r\n  return [stateDirty, forceUpdateHook]\r\n}","import { useMediaQuery, useTheme } from \"@mui/material\";\r\n\r\nexport default function useMediaQueryUp() {\r\n  const theme = useTheme();\r\n  const sm = useMediaQuery(theme.breakpoints.up('sm'));\r\n  const md = useMediaQuery(theme.breakpoints.up('md'));\r\n  const lg = useMediaQuery(theme.breakpoints.up('lg'));\r\n  const xl = useMediaQuery(theme.breakpoints.up('xl'));\r\n  if (xl) return \"xl\"\r\n  if (lg) return \"lg\"\r\n  if (md) return \"md\"\r\n  if (sm) return \"sm\"\r\n  return \"xs\"\r\n}\r\n","import { useCallback, useContext, useDeferredValue, useEffect } from \"react\";\r\nimport { TeamData } from \"../Context/DataContext\";\r\nimport { ArtifactSheet } from \"../Data/Artifacts/ArtifactSheet\";\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\r\nimport { resonanceData } from \"../Data/Resonance\";\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\";\r\nimport { ArtCharDatabase, DatabaseContext } from \"../Database/Database\";\r\nimport { common } from \"../Formula\";\r\nimport { dataObjForArtifact, dataObjForCharacter, dataObjForWeapon, mergeData, uiDataForTeam } from \"../Formula/api\";\r\nimport { Data } from \"../Formula/type\";\r\nimport { ICachedArtifact } from \"../Types/artifact\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { ICachedWeapon } from \"../Types/weapon\";\r\nimport { objectMap } from \"../Util/Util\";\r\nimport useForceUpdate from \"./useForceUpdate\";\r\nimport usePromise from \"./usePromise\";\r\n\r\ntype TeamDataBundle = {\r\n  teamData: Dict<CharacterKey, Data[]>\r\n  teamBundle: Dict<CharacterKey, CharBundle>\r\n}\r\n\r\nexport default function useTeamData(characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[] | Data, overrideWeapon?: ICachedWeapon): TeamData | undefined {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [dbDirty, setDbDirty] = useForceUpdate()\r\n  const dbDirtyDeferred = useDeferredValue(dbDirty)\r\n  const data = usePromise(() => getTeamDataCalc(database, characterKey, mainStatAssumptionLevel, overrideArt, overrideWeapon), [dbDirtyDeferred, characterKey, database, mainStatAssumptionLevel, overrideArt, overrideWeapon])\r\n\r\n  const setTeamDataDirty = useCallback(() => {\r\n    database.invalidateTeamData(characterKey)\r\n    setDbDirty()\r\n  }, [database, characterKey, setDbDirty])\r\n\r\n  useEffect(() =>\r\n    characterKey ? database.chars.follow(characterKey, setTeamDataDirty) : undefined,\r\n    [characterKey, setTeamDataDirty, database])\r\n\r\n  return data\r\n}\r\n\r\nasync function getTeamDataCalc(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[] | Data, overrideWeapon?: ICachedWeapon):\r\n  Promise<TeamData | undefined> {\r\n  if (!characterKey) return\r\n\r\n  // Retrive from cache\r\n  if (!mainStatAssumptionLevel && !overrideArt && !overrideWeapon) {\r\n    const cache = database._getTeamData(characterKey)\r\n    if (cache) return cache\r\n  }\r\n  const { teamData, teamBundle } = (await getTeamData(database, characterKey, mainStatAssumptionLevel, overrideArt, overrideWeapon)) ?? {}\r\n  if (!teamData || !teamBundle) return\r\n\r\n  const calcData = uiDataForTeam(teamData, characterKey as CharacterKey)\r\n\r\n  const data = objectMap(calcData, (obj, ck) => {\r\n    const { data: _, ...rest } = teamBundle[ck]!\r\n    return { ...obj, ...rest }\r\n  })\r\n  if (!mainStatAssumptionLevel && !overrideArt && !overrideWeapon)\r\n    database.cacheTeamData(characterKey, data)\r\n  return data\r\n}\r\n\r\nexport async function getTeamData(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[] | Data, overrideWeapon?: ICachedWeapon):\r\n  Promise<TeamDataBundle | undefined> {\r\n  if (!characterKey) return\r\n  const character = database.chars.get(characterKey)\r\n  if (!character) return\r\n\r\n  const char1DataBundle = await getCharDataBundle(true, mainStatAssumptionLevel,\r\n    character,\r\n    overrideWeapon ? overrideWeapon : database.weapons.get(character.equippedWeapon)!,\r\n    (overrideArt ?? Object.values(character.equippedArtifacts).map(a => database.arts.get(a)).filter(a => a) as ICachedArtifact[])\r\n  )\r\n  if (!char1DataBundle) return\r\n  const teamBundle = { [characterKey]: char1DataBundle }\r\n  const teamData: Dict<CharacterKey, Data[]> = { [characterKey]: char1DataBundle.data }\r\n\r\n  await Promise.all(char1DataBundle.character.team.map(async (ck) => {\r\n    if (!ck) return\r\n    const tchar = database.chars.get(ck)\r\n    if (!tchar) return\r\n    const databundle = await getCharDataBundle(false, 0,\r\n      { ...tchar, conditional: character.teamConditional[ck] ?? {} },\r\n      database.weapons.get(tchar.equippedWeapon)!,\r\n      Object.values(tchar.equippedArtifacts).map(a => database.arts.get(a)).filter(a => a) as ICachedArtifact[])\r\n    if (!databundle) return\r\n    teamBundle[ck] = databundle\r\n    teamData[ck] = databundle.data\r\n  }))\r\n\r\n  return { teamData, teamBundle }\r\n}\r\ntype CharBundle = {\r\n  character: ICachedCharacter,\r\n  weapon: ICachedWeapon,\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet,\r\n  data: Data[]\r\n}\r\n\r\nasync function getCharDataBundle(useCustom = false, mainStatAssumptionLevel: number,\r\n  character: ICachedCharacter,\r\n  weapon: ICachedWeapon,\r\n  artifacts: ICachedArtifact[] | Data,\r\n): Promise<CharBundle | undefined> {\r\n\r\n  const characterSheet = await CharacterSheet.get(character.key)\r\n  if (!characterSheet) return\r\n  const weaponSheet = await WeaponSheet.get(weapon.key)\r\n  if (!weaponSheet) return\r\n\r\n  const weaponSheetsDataOfType = await WeaponSheet.getAllDataOfType(characterSheet.weaponTypeKey)\r\n\r\n  const weaponSheetsData = useCustom ? (() => {\r\n    // display is included in WeaponSheet.getAllDataOfType\r\n    const { display, ...restWeaponSheetData } = weaponSheet.data\r\n    return mergeData([restWeaponSheetData, weaponSheetsDataOfType])\r\n  })() : weaponSheet.data\r\n\r\n  const artifactSheetsData = await ArtifactSheet.getAllData\r\n  const sheetData = mergeData([characterSheet.getData(character.elementKey), weaponSheetsData, artifactSheetsData])\r\n  const artifactData = Array.isArray(artifacts) ? artifacts.map(a => dataObjForArtifact(a, mainStatAssumptionLevel)) : [artifacts]\r\n  const data = [\r\n    ...artifactData,\r\n    dataObjForCharacter(character, useCustom ? sheetData : undefined),\r\n    dataObjForWeapon(weapon),\r\n    sheetData,\r\n    common, // NEED TO PUT THIS AT THE END\r\n    resonanceData,\r\n  ]\r\n  return { character, weapon, characterSheet, weaponSheet, data }\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\n\r\nexport default function useWeapon(weaponID: string | undefined = \"\") {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [weapon, setWeapon] = useState(database.weapons.get(weaponID))\r\n  useEffect(() => setWeapon(database.weapons.get(weaponID)), [database, weaponID])\r\n  useEffect(() =>\r\n    weaponID ? database.weapons.follow(weaponID, setWeapon) : undefined,\r\n    [weaponID, setWeapon, database])\r\n  return weapon\r\n}\r\n","import CharacterSheet from \"../Data/Characters/CharacterSheet\";\r\nimport { ArtCharDatabase } from \"../Database/Database\";\r\nimport i18n from \"../i18n\";\r\nimport { initCharMeta } from \"../stateInit\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { FilterConfigs, SortConfigs } from \"./SortByFilters\";\r\nexport const characterSortKeys = [\"level\", \"rarity\", \"name\"]\r\nexport type CharacterSortKey = typeof characterSortKeys[number]\r\n\r\nexport function characterSortConfigs(database: ArtCharDatabase, characterSheets: Record<CharacterKey, CharacterSheet>): SortConfigs<CharacterSortKey, CharacterKey> {\r\n  return {\r\n    new: {\r\n      getValue: (ck) => database.chars.get(ck as CharacterKey) ? 0 : 1,\r\n      tieBreaker: \"name\"\r\n    },\r\n    name: {\r\n      getValue: (ck) => i18n.t(`charNames_gen\"${ck}`).toString(),\r\n    },\r\n    level: {\r\n      getValue: (ck) => {\r\n        const char = database.chars.get(ck as CharacterKey)\r\n        if (!char) return 0\r\n        return char.level * char.ascension\r\n      },\r\n      tieBreaker: \"rarity\"\r\n    },\r\n    rarity: {\r\n      getValue: (ck) => characterSheets?.[ck]?.rarity,\r\n      tieBreaker: \"level\"\r\n    }\r\n  }\r\n}\r\n\r\nexport type CharacterFilterConfigs = FilterConfigs<\"element\" | \"weaponType\" | \"favorite\" | \"name\", CharacterKey>\r\nexport function characterFilterConfigs(database: ArtCharDatabase, characterSheets: Record<CharacterKey, CharacterSheet>): CharacterFilterConfigs {\r\n  return {\r\n    element: (ck, filter) => filter.includes(characterSheets?.[ck]?.elementKey) ||\r\n      (ck === \"Traveler\" && !database.chars.get(ck as CharacterKey) && filter.some(fe => characterSheets.Traveler.elementKeys.includes(fe))) ||\r\n      (ck === \"Traveler\" && filter.includes(database.chars.get(ck as CharacterKey)?.elementKey)),\r\n    weaponType: (ck, filter) => filter.includes(characterSheets?.[ck]?.weaponTypeKey),\r\n    favorite: (ck, filter) =>\r\n      !filter || (filter === (database.states.getWithInit(`charMeta_${ck}`, initCharMeta).favorite ? \"yes\" : \"no\")),\r\n    name: (ck, filter) => !filter || (i18n.t(`charNames_gen:${ck}`).toLowerCase().includes(filter.toLowerCase()))\r\n  }\r\n}\r\n","import { toggleArr } from \"./Util\"\r\n\r\nexport function handleMultiSelect<T>(allKeys: T[]) {\r\n  return (arr: T[], v: T): T[] => {\r\n    const len = arr.length\r\n    if (len === allKeys.length) return [v]\r\n    if (len === 1 && arr[0] === v) return [...allKeys]\r\n    return [...new Set(toggleArr(arr, v))]\r\n  }\r\n}\r\n","type SortConfig<T> = {\r\n  getValue: (id: T) => number | string\r\n  tieBreaker?: string\r\n}\r\nexport type SortConfigs<Keys extends string, T> = Record<Keys, SortConfig<T>>\r\n\r\nexport function sortFunction<Keys extends string, T>(sortby: string, ascending: boolean, configs: SortConfigs<Keys, T>) {\r\n  function Sort(a: T, b: T, ascending: boolean, config: SortConfig<T>) {\r\n    const aV = config.getValue(a)\r\n    const bV = config.getValue(b)\r\n    let diff = 0\r\n    if (typeof aV === \"string\" && typeof bV === \"string\")\r\n      diff = aV.localeCompare(bV)\r\n    else\r\n      diff = ((bV as number) - (aV as number))\r\n    return (ascending ? -1 : 1) * diff\r\n  }\r\n  return (a: T, b: T) => {\r\n    if (!configs[sortby]) return 0\r\n    const filterOption = configs[sortby]\r\n    let diff = Sort(a, b, ascending, filterOption)\r\n    if (!diff && filterOption.tieBreaker && configs[filterOption.tieBreaker])\r\n      diff = Sort(a, b, ascending, configs[filterOption.tieBreaker])\r\n    return diff\r\n  }\r\n}\r\n\r\ntype FilterConfig<T> = (obj: T, filter: any) => boolean\r\nexport type FilterConfigs<Keys extends string, T> = Record<Keys, FilterConfig<T>>\r\nexport function filterFunction<Keys extends string, T>(filterOptions: Record<Keys, any>, filterConfigs: FilterConfigs<Keys, T>) {\r\n  return (obj: T) => Object.entries(filterOptions).every(([optionKey, optionVal]) => filterConfigs[optionKey as any] && filterConfigs[optionKey as any](obj, optionVal))\r\n}\r\n","import { allSubstatKeys } from \"./Types/artifact\"\r\n\r\nexport function initGlobalSettings() {\r\n  return { tcMode: false }\r\n}\r\n\r\nexport function initCharMeta() {\r\n  return {\r\n    rvFilter: [...allSubstatKeys],\r\n    favorite: false\r\n  }\r\n}\r\n"],"names":["ArtifactCardPico","art","artifactObj","key","slotKey","artifactSheet","usePromise","setKey","ArtifactSheet","sx","display","flexDirection","height","width","pb","position","left","top","transform","opacity","component","src","Assets","mainStatKey","rarity","level","element","allElementsWithPhy","ele","includes","color","className","slotIcons","maxWidth","maxHeight","fontSize","lineHeight","pointerEvents","p","Artifact","bottom","right","StatIcon","ArtifactTooltip","children","fallback","variant","title","Suspense","ArtifactData","placement","disableInteractive","sheet","substats","slotName","getSlotName","mainStatUnit","KeyMap","mainIcon","mainVariant","artifactSlotIcon","cacheValueString","justifyContent","stars","py","map","stat","value","clamp","rolls","length","name","BootstrapTooltip","styled","props","arrow","classes","popper","theme","tooltipClasses","palette","common","black","backgroundColor","WeaponFullCard","weaponId","weapon","useWeapon","weaponSheet","WeaponSheet","UIData","useMemo","computeUIData","data","dataObjForWeapon","CardDark","Box","flexShrink","alignContent","getImg","ascension","mt","flexGrow","Typography","gutterBottom","gap","SqBadge","hasRefinement","refinement","WeaponStat","node","get","input","info","val","valueString","unit","undefined","CharacterCard","characterKey","artifactChildren","weaponChildren","characterChildren","onClick","onClickHeader","onClickTeammate","footer","isTeammateCard","teamDataContext","useContext","DataContext","teamData","useTeamData","character","useCharacter","characterSheet","CharacterSheet","characterDispatch","useCharacterReducer","target","onClickHandler","useCallback","actionWrapperFunc","CardActionArea","characterContextObj","dataContextObj","useDBState","initCharMeta","favorite","setCharMeta","Skeleton","minHeight","CharacterContext","CardLight","zIndex","IconButton","_","Favorite","FavoriteBorder","ConditionalWrapper","condition","wrapper","Header","CardContent","Artifacts","Grid","container","columns","spacing","item","xs","WeaponCardPico","equippedWeapon","range","i","CharacterCardPico","team","index","Stats","characterEle","characterLevel","constellation","autoBoost","skillBoost","burstBoost","tAuto","tSkill","tBurst","content","backgroundImage","bannerImg","backgroundPosition","backgroundSize","lg","alignSelf","thumbImg","pr","Chip","label","size","flexWrap","textShadow","whiteSpace","ascensionMaxLevel","colored","database","DatabaseContext","artifacts","allSlotKeys","k","arts","id","direction","Object","values","getDisplay","basic","n","alignItems","teammateSheet","elementKey","thumbImgSide","transformOrigin","defaultSortKeys","CharacterSelectionModal","show","onHide","onSelect","filter","newFirst","sortKeys","t","useTranslation","useState","sortBy","setsortBy","ascending","setascending","allElements","elementalFilter","setelementalFilter","allWeaponTypeKeys","weaponFilter","setweaponFilter","characterSheets","useForceUpdate","favesDirty","setFavesDirty","useEffect","states","followAny","s","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","sortConfigs","characterSortConfigs","filterConfigs","characterFilterConfigs","ownedCharacterKeyList","allCharacterKeys","cKey","chars","characterKeyList","filterFunction","weaponType","sort","sortFunction","concat","open","onClose","onChange","autoFocus","e","InputProps","onChangeAsc","md","CharacterBtn","pl","weaponTypeKey","getLevelString","falseWrapper","cursor","icon","faQuestionCircle","FieldsDisplay","fields","FieldDisplayList","m","field","FieldDisplay","ListItem","oldData","canShow","isEmpty","oldNode","oldValue","NodeFieldDisplay","suffix","textSuffix","BasicFieldDisplay","v","evalIfFunc","text","toFixed","fixed","emphasize","setFormulaData","FormulaDataContext","fieldText","isTeamBuff","fieldFormulaText","formula","fieldVal","diff","formulaTextOverlay","allAmpReactions","mr","AmpReactionModeText","reaction","trigger","subVariant","Divider","orientation","flexItem","boxShadow","Groups","noWrap","List","light","dark","palletOption","borderRadius","shape","overflow","margin","SortByButton","i18nKey","selected","disabled","startIcon","faSortAmountDownAlt","faSortAmountUp","StarIcon","faStar","StarsDisplay","Array","keys","ToggleButton","shouldForwardProp","prop","baseColor","selectedColor","main","contrastText","elementHandler","handleMultiSelect","ElementToggle","ToggleButtonGroup","exclusive","weaponTypeHandler","WeaponToggle","wt","tooltipAddl","WeaponStatPico","addlText","WeaponNameTooltip","createContext","onModalOpen","onModalClose","FormulaDataWrapper","useBoolState","onOpen","setState","Provider","modalOpen","tr","strKey","ns","key18","trm","teamSize","sum","tally","pcNodes","objectKeyValueMap","greaterEq","percent","protectiveCanopy","desc","sections","teamBuff","ffNode","ferventFlames","st","swNode","soothingWaters","condSIPath","condSI","condReadNode","siNode","equal","shatteringIce","path","header","on","highVoltage","iwNodeStam","iwNodeMove","iwNodeCD","impetuousWinds","condERPath","condER","erNodeshield_","erNodeDMG_","erNodeRes_","enduringRock","sgt","condSC2elePath","condSC2ele","condSC3elePath","condSC3ele","scBase_eleMas","sc2ele_eleMas","sc3ele_eleMas","resonanceSheets","resonanceData","inferInfoMut","premod","atk_","hp_","staminaDec_","moveSPD_","cdRed_","shield_","all_dmg_","geo_enemyRes_","eleMas","infoMut","pivot","total","critRate_","useCharSelectionCallback","navigate","useNavigate","useMatch","end","params","tab","cb","navTab","newChar","hitMode","equippedArtifacts","objectKeyMap","conditional","bonusStats","enemyOverride","talent","auto","skill","burst","infusionAura","teamConditional","compareData","customMultiTarget","set","defaultInitialWeapon","weapons","new","location","updateCharacter","follow","action","type","statKey","deepClone","teamMateKey","team_","charKey","stateDirty","update","useMediaQueryUp","useTheme","sm","useMediaQuery","breakpoints","up","mainStatAssumptionLevel","overrideArt","overrideWeapon","dbDirty","setDbDirty","dbDirtyDeferred","getTeamDataCalc","setTeamDataDirty","invalidateTeamData","cache","_getTeamData","getTeamData","teamBundle","calcData","uiDataForTeam","objectMap","obj","ck","rest","cacheTeamData","getCharDataBundle","a","char1DataBundle","Promise","all","tchar","databundle","useCustom","weaponSheetsDataOfType","weaponSheetsData","restWeaponSheetData","mergeData","artifactSheetsData","sheetData","getData","artifactData","isArray","dataObjForArtifact","dataObjForCharacter","weaponID","setWeapon","characterSortKeys","getValue","tieBreaker","i18n","toString","char","some","fe","Traveler","elementKeys","getWithInit","toLowerCase","allKeys","arr","len","Set","toggleArr","sortby","configs","Sort","b","config","aV","bV","localeCompare","filterOption","filterOptions","entries","every","optionKey","optionVal","initGlobalSettings","tcMode","rvFilter","allSubstatKeys"],"sourceRoot":""}