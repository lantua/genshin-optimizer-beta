{"version":3,"file":"static/js/678.eeb3c746.chunk.js","mappings":"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","sources":["Components/Artifact/LocationFilterAutocomplete.tsx","Components/Artifact/ArtifactFilterDisplay.tsx","../node_modules/@mui/icons-material/esm/PersonSearch.js"],"sourcesContent":["import { BusinessCenter, PersonSearch } from \"@mui/icons-material\"\r\nimport { Skeleton } from \"@mui/material\"\r\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\"\r\nimport { initCharMeta } from \"../../Database/Data/StateData\"\r\nimport { DatabaseContext } from \"../../Database/Database\"\r\nimport { FilterLocationKey } from \"../../PageArtifact/ArtifactSort\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { LocationCharacterKey, locationCharacterKeys, travelerKeys } from \"../../Types/consts\"\r\nimport ThumbSide from \"../Character/ThumbSide\"\r\nimport GeneralAutocomplete, { GeneralAutocompleteOption } from \"../GeneralAutocomplete\"\r\n\r\nexport default function LocationFilterAutocomplete({ location, setLocation }: { location: FilterLocationKey, setLocation: (v: FilterLocationKey) => void }) {\r\n  const { t } = useTranslation([\"ui\", \"artifact\", \"charNames_gen\"])\r\n  const { database } = useContext(DatabaseContext)\r\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\r\n  const toText = useCallback((key: LocationCharacterKey): string => t(`charNames_gen:${key === \"Traveler\" ? database.chars.LocationToCharacterKey(key).slice(0, 9) : key}`), [database, t])\r\n  const toImg = useCallback((key: FilterLocationKey) => {\r\n    switch (key) {\r\n      case \"\":\r\n        return <></>\r\n      case \"Inventory\":\r\n        return <BusinessCenter />\r\n      case \"Equipped\":\r\n        return <PersonSearch />\r\n      default:\r\n        return characterSheets ? <ThumbSide src={characterSheets[database.chars.LocationToCharacterKey(key)]?.thumbImgSide} sx={{ pr: 1 }} /> : <></>\r\n    }\r\n  }, [database, characterSheets])\r\n  const isFavorite = useCallback((key: LocationCharacterKey) => key === \"Traveler\" ?\r\n    travelerKeys.some(key => database.states.getWithInit(`charMeta_${key}`, initCharMeta).favorite) :\r\n    key ? database.states.getWithInit(`charMeta_${key}`, initCharMeta).favorite : false, [database])\r\n  const values: GeneralAutocompleteOption<FilterLocationKey>[] = useMemo(() => [{\r\n    key: \"\",\r\n    label: t`artifact:filterLocation.any`,\r\n  }, {\r\n    key: \"Equipped\",\r\n    label: t`artifact:filterLocation.currentlyEquipped`\r\n  }, {\r\n    key: \"Inventory\",\r\n    label: t`artifact:filterLocation.inventory`\r\n  },\r\n  ...locationCharacterKeys.map(v => ({ key: v, label: toText(v), favorite: isFavorite(v) }))\r\n    .sort((a, b) => {\r\n      if (a.favorite && !b.favorite) return -1\r\n      if (!a.favorite && b.favorite) return 1\r\n      return a.label.localeCompare(b.label)\r\n    })\r\n  ], [t, toText, isFavorite])\r\n  return <Suspense fallback={<Skeleton variant=\"text\" width={100} />}><GeneralAutocomplete size=\"small\" options={values} valueKey={location} onChange={setLocation} toImg={toImg} clearKey=\"\" label={t`artifact:filterLocation.location`} /></Suspense>\r\n}\r\n","import { faBan, faChartLine } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Lock, LockOpen } from '@mui/icons-material';\r\nimport { Box, Grid, ToggleButton } from \"@mui/material\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { FilterOption } from \"../../PageArtifact/ArtifactSort\";\r\nimport { allArtifactRarities, allSlotKeys } from \"../../Types/consts\";\r\nimport { handleMultiSelect } from \"../../Util/MultiSelect\";\r\nimport SolidToggleButtonGroup from \"../SolidToggleButtonGroup\";\r\nimport { StarsDisplay } from \"../StarDisplay\";\r\nimport { ArtifactMainStatMultiAutocomplete, ArtifactSetMultiAutocomplete, ArtifactSubstatMultiAutocomplete } from \"./ArtifactAutocomplete\";\r\nimport ArtifactLevelSlider from \"./ArtifactLevelSlider\";\r\nimport LocationFilterAutocomplete from \"./LocationFilterAutocomplete\";\r\nimport { artifactSlotIcon } from \"./SlotNameWIthIcon\";\r\n\r\nconst exclusionValues = [\"excluded\", \"included\"] as const\r\nconst lockedValues = [\"locked\", \"unlocked\"] as const\r\n\r\nconst rarityHandler = handleMultiSelect([...allArtifactRarities])\r\nconst slotHandler = handleMultiSelect([...allSlotKeys])\r\nconst exclusionHandler = handleMultiSelect([...exclusionValues])\r\nconst lockedHandler = handleMultiSelect([...lockedValues])\r\n\r\ninterface ArtifactFilterDisplayProps {\r\n  filterOption: FilterOption\r\n  filterOptionDispatch: (option: any) => void\r\n  disableSlotFilter?: boolean\r\n}\r\nexport default function ArtifactFilterDisplay({ filterOption, filterOptionDispatch, disableSlotFilter = false }: ArtifactFilterDisplayProps) {\r\n  const { t } = useTranslation([\"artifact\", \"ui\"]);\r\n\r\n  const { artSetKeys = [], mainStatKeys = [], rarity = [], slotKeys = [], levelLow, levelHigh, substats = [],\r\n    location = \"\", exclusion = [...exclusionValues], locked = [...lockedValues] } = filterOption\r\n\r\n  return <Grid container spacing={1}>\r\n    {/* left */}\r\n    <Grid item xs={12} md={6} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n      {/* Artifact stars filter */}\r\n      <SolidToggleButtonGroup fullWidth value={rarity} size=\"small\" >\r\n        {allArtifactRarities.map(star => <ToggleButton key={star} value={star} onClick={() => filterOptionDispatch({ rarity: rarityHandler(rarity, star) })}><StarsDisplay stars={star} /></ToggleButton>)}\r\n      </SolidToggleButtonGroup>\r\n      {/* Artifact Slot */}\r\n      <SolidToggleButtonGroup fullWidth value={slotKeys} size=\"small\" disabled={disableSlotFilter}>\r\n        {allSlotKeys.map(slotKey => <ToggleButton key={slotKey} value={slotKey} onClick={() => filterOptionDispatch({ slotKeys: slotHandler(slotKeys, slotKey) })}>{artifactSlotIcon(slotKey)}</ToggleButton>)}\r\n      </SolidToggleButtonGroup>\r\n      {/* exclusion + locked */}\r\n      <Box display=\"flex\" gap={1}>\r\n        <SolidToggleButtonGroup fullWidth value={exclusion} size=\"small\">\r\n          {exclusionValues.map((v, i) => <ToggleButton key={v} value={v} sx={{ display: \"flex\", gap: 1 }} onClick={() => filterOptionDispatch({ exclusion: exclusionHandler(exclusion, v) })}>\r\n            <FontAwesomeIcon icon={i ? faChartLine : faBan} /><Trans i18nKey={`exclusion.${v}`} t={t} />\r\n          </ToggleButton>)}\r\n        </SolidToggleButtonGroup>\r\n        <SolidToggleButtonGroup fullWidth value={locked} size=\"small\">\r\n          {lockedValues.map((v, i) => <ToggleButton key={v} value={v} sx={{ display: \"flex\", gap: 1 }} onClick={() => filterOptionDispatch({ locked: lockedHandler(locked, v) })}>\r\n            {i ? <LockOpen /> : <Lock />}<Trans i18nKey={`ui:${v}`} t={t} />\r\n          </ToggleButton>)}\r\n        </SolidToggleButtonGroup>\r\n      </Box>\r\n      {/* Artiface level filter */}\r\n      <ArtifactLevelSlider showLevelText levelLow={levelLow} levelHigh={levelHigh}\r\n        setLow={levelLow => filterOptionDispatch({ levelLow })}\r\n        setHigh={levelHigh => filterOptionDispatch({ levelHigh })}\r\n        setBoth={(levelLow, levelHigh) => filterOptionDispatch({ levelLow, levelHigh })} />\r\n      <Grid container display=\"flex\" gap={1}>\r\n        <Grid item flexGrow={1}>\r\n          {/* location */}\r\n          <LocationFilterAutocomplete location={location} setLocation={location => filterOptionDispatch({ location })} />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n    {/* right */}\r\n    <Grid item xs={12} md={6} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n      {/* Artifact Set */}\r\n      <ArtifactSetMultiAutocomplete artSetKeys={artSetKeys} setArtSetKeys={artSetKeys => filterOptionDispatch({ artSetKeys })} />\r\n      <ArtifactMainStatMultiAutocomplete mainStatKeys={mainStatKeys} setMainStatKeys={mainStatKeys => filterOptionDispatch({ mainStatKeys })} />\r\n      <ArtifactSubstatMultiAutocomplete substatKeys={substats} setSubstatKeys={substats => filterOptionDispatch({ substats })} />\r\n    </Grid>\r\n  </Grid>\r\n}\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"circle\", {\n  cx: \"10\",\n  cy: \"8\",\n  r: \"4\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10.35 14.01C7.62 13.91 2 15.27 2 18v2h9.54c-2.47-2.76-1.23-5.89-1.19-5.99zm9.08 4.01c.36-.59.57-1.28.57-2.02 0-2.21-1.79-4-4-4s-4 1.79-4 4 1.79 4 4 4c.74 0 1.43-.22 2.02-.57L20.59 22 22 20.59l-2.57-2.57zM16 18c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}, \"1\")], 'PersonSearch');"],"names":["LocationFilterAutocomplete","location","setLocation","t","useTranslation","database","useContext","DatabaseContext","characterSheets","usePromise","CharacterSheet","toText","useCallback","key","chars","LocationToCharacterKey","slice","toImg","BusinessCenter","PersonSearch","ThumbSide","src","thumbImgSide","sx","pr","isFavorite","travelerKeys","states","getWithInit","initCharMeta","favorite","values","useMemo","label","locationCharacterKeys","v","sort","a","b","localeCompare","Suspense","fallback","Skeleton","variant","width","GeneralAutocomplete","size","options","valueKey","onChange","clearKey","exclusionValues","lockedValues","rarityHandler","handleMultiSelect","allArtifactRarities","slotHandler","allSlotKeys","exclusionHandler","lockedHandler","ArtifactFilterDisplay","filterOption","filterOptionDispatch","disableSlotFilter","artSetKeys","mainStatKeys","rarity","slotKeys","levelLow","levelHigh","substats","exclusion","locked","Grid","container","spacing","item","xs","md","display","flexDirection","gap","SolidToggleButtonGroup","fullWidth","value","star","ToggleButton","onClick","stars","disabled","slotKey","artifactSlotIcon","Box","map","i","icon","faChartLine","faBan","Trans","i18nKey","LockOpen","Lock","ArtifactLevelSlider","showLevelText","setLow","setHigh","setBoth","flexGrow","setArtSetKeys","setMainStatKeys","substatKeys","setSubstatKeys","createSvgIcon","_jsx","cx","cy","r","d"],"sourceRoot":""}