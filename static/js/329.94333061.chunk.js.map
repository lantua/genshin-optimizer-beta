{"version":3,"file":"static/js/329.94333061.chunk.js","mappings":"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","sources":["DataContext.tsx","PageWeapon/WeaponDisplayCard.tsx","../node_modules/@mui/icons-material/esm/SwapHoriz.js"],"sourcesContent":["import { createContext } from \"react\"\r\nimport CharacterSheet from \"./Data/Characters/CharacterSheet\"\r\nimport { UIData } from \"./Formula/uiData\"\r\nimport { ICachedCharacter } from \"./Types/character\"\r\nimport { CharacterKey } from \"./Types/consts\"\r\nimport { ICachedWeapon } from \"./Types/weapon\"\r\nimport WeaponSheet from \"./Data/Weapons/WeaponSheet\"\r\nexport type TeamData = Partial<Record<CharacterKey, {\r\n  target: UIData\r\n  buffs: Dict<CharacterKey, UIData>\r\n  character: ICachedCharacter\r\n  weapon: ICachedWeapon\r\n  characterSheet: CharacterSheet\r\n  weaponSheet: WeaponSheet,\r\n}>>\r\nexport type dataContextObj = {\r\n  character: ICachedCharacter\r\n  characterSheet: CharacterSheet\r\n  data: UIData\r\n  oldData?: UIData\r\n  mainStatAssumptionLevel: number\r\n  teamData: TeamData\r\n  characterDispatch: (_: any) => void\r\n}\r\n\r\n// If using this context without a Provider, then stuff will crash...\r\n// In theory, none of the components that uses this context should work without a provider...\r\nexport const DataContext = createContext({} as dataContextObj)\r\n","import { Lock, LockOpen, SwapHoriz } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardContent, CardHeader, Divider, Grid, ListItem, MenuItem, Typography } from \"@mui/material\"\r\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport CharacterDropdownButton from \"../Components/Character/CharacterDropdownButton\"\r\nimport CloseButton from \"../Components/CloseButton\"\r\nimport ColorText from \"../Components/ColoredText\"\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../Components/CustomNumberInput\"\r\nimport DocumentDisplay from \"../Components/DocumentDisplay\"\r\nimport DropdownButton from \"../Components/DropdownMenu/DropdownButton\"\r\nimport { FieldDisplayList, NodeFieldDisplay } from \"../Components/FieldDisplay\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport ModalWrapper from \"../Components/ModalWrapper\"\r\nimport SqBadge from \"../Components/SqBadge\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport WeaponSelectionModal from \"../Components/Weapon/WeaponSelectionModal\"\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\r\nimport { ascensionMaxLevel, lowRarityMilestoneLevels } from \"../Data/LevelData\"\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport { DataContext } from \"../DataContext\"\r\nimport { uiInput as input } from \"../Formula\"\r\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport useWeapon from \"../ReactHooks/useWeapon\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport { clamp } from \"../Util/Util\"\r\nimport WeaponCard from \"./WeaponCard\"\r\n\r\ntype WeaponStatsEditorCardProps = {\r\n  weaponId: string\r\n  footer?: boolean\r\n  onClose?: () => void\r\n}\r\nexport default function WeaponDisplayCard({\r\n  weaponId: propWeaponId,\r\n  footer = false,\r\n  onClose\r\n}: WeaponStatsEditorCardProps) {\r\n  const { data } = useContext(DataContext)\r\n\r\n  const { database } = useContext(DatabaseContext)\r\n  const weapon = useWeapon(propWeaponId)\r\n  const { key = \"\", level = 0, refinement = 0, ascension = 0, lock, location = \"\", id } = weapon ?? {}\r\n  const weaponSheet = usePromise(WeaponSheet.get(key), [key])\r\n  const weaponTypeKey = weaponSheet?.weaponType\r\n\r\n  const weaponDispatch = useCallback((newWeapon: Partial<ICachedWeapon>) => {\r\n    database.updateWeapon(newWeapon, propWeaponId)\r\n  }, [propWeaponId, database])\r\n\r\n  const setLevel = useCallback(level => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    weaponDispatch({ level, ascension })\r\n  }, [weaponDispatch])\r\n\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) weaponDispatch({ ascension: ascension + 1 })\r\n    else weaponDispatch({ ascension: lowerAscension })\r\n  }, [weaponDispatch, ascension, level])\r\n\r\n  const characterSheet = usePromise(location ? CharacterSheet.get(location) : undefined, [location])\r\n  const weaponFilter = characterSheet ? (ws) => ws.weaponType === characterSheet.weaponTypeKey : undefined\r\n  const initialWeaponFilter = characterSheet && characterSheet.weaponTypeKey\r\n\r\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => id && database.setWeaponLocation(id, charKey), [database, id])\r\n  const filter = useCallback(\r\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\r\n    [weaponSheet],\r\n  )\r\n\r\n  const [showModal, setshowModal] = useState(false)\r\n  const img = ascension < 2 ? weaponSheet?.img : weaponSheet?.imgAwaken\r\n\r\n  //check the levels when switching from a 5* to a 1*, for example.\r\n  useEffect(() => {\r\n    if (!weaponSheet || !weaponDispatch || weaponSheet.key !== weapon?.key) return\r\n    if (weaponSheet.rarity <= 2 && (level > 70 || ascension > 4)) {\r\n      const [level, ascension] = lowRarityMilestoneLevels[0]\r\n      weaponDispatch({ level, ascension })\r\n    }\r\n  }, [weaponSheet, weapon, weaponDispatch, level, ascension])\r\n\r\n\r\n  const weaponUIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  return <CardLight>\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Grid container spacing={1}>\r\n        <Grid item flexGrow={1}>\r\n          <Grid container spacing={1}>\r\n            <Grid item >\r\n              <WeaponSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={k => weaponDispatch({ key: k })} filter={weaponFilter} weaponFilter={initialWeaponFilter} />\r\n              <ButtonGroup>\r\n                <Button onClick={() => setshowModal(true)} >{weaponSheet?.name ?? \"Select a Weapon\"}</Button>\r\n                {weaponSheet?.hasRefinement && <DropdownButton title={`Refinement ${refinement}`}>\r\n                  <MenuItem>Select Weapon Refinement</MenuItem>\r\n                  <Divider />\r\n                  {[...Array(5).keys()].map(key =>\r\n                    <MenuItem key={key} onClick={() => weaponDispatch({ refinement: key + 1 })} selected={refinement === (key + 1)} disabled={refinement === (key + 1)}>\r\n                      {`Refinement ${key + 1}`}\r\n                    </MenuItem>)}\r\n                </DropdownButton>}\r\n              </ButtonGroup>\r\n            </Grid>\r\n            <Grid item >\r\n              <ButtonGroup sx={{ bgcolor: t => t.palette.contentLight.main }} >\r\n                <CustomNumberInputButtonGroupWrapper >\r\n                  <CustomNumberInput onChange={setLevel} value={level}\r\n                    startAdornment=\"Lvl. \"\r\n                    inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\r\n                    sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\r\n                  />\r\n                </CustomNumberInputButtonGroupWrapper>\r\n                {weaponSheet && <Button sx={{ pl: 1 }} disabled={!weaponSheet.ambiguousLevel(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>}\r\n                {weaponSheet && <DropdownButton title={\"Select Level\"} >\r\n                  {weaponSheet.milestoneLevels.map(([lv, as]) => {\r\n                    const sameLevel = lv === ascensionMaxLevel[as]\r\n                    const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n                    const selected = lv === level && as === ascension\r\n                    return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => weaponDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\r\n                  })}\r\n                </DropdownButton>}\r\n              </ButtonGroup>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button color=\"error\" onClick={() => id && database.updateWeapon({ lock: !lock }, id)} startIcon={lock ? <Lock /> : <LockOpen />}>\r\n                {lock ? \"Locked\" : \"Unlocked\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {!!onClose && <Grid item  >\r\n          <CloseButton onClick={onClose} />\r\n        </Grid>}\r\n        <Grid item >\r\n          <SwapBtn weaponTypeKey={weaponTypeKey} onChangeId={id => database.setWeaponLocation(id, data.get(input.charKey).value as CharacterKey)} />\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent >\r\n      {weaponSheet && weaponUIData && <Box display=\"flex\" gap={{ xs: 1, md: 1.5, lg: 2 }} >\r\n        <Box sx={{ maxWidth: 256 }} flexShrink={1} minWidth=\"25%\">\r\n          <Box component=\"img\" src={img} className={`grad-${weaponSheet.rarity}star`} sx={{ maxWidth: 256, width: \"100%\", height: \"auto\", borderRadius: 1 }} />\r\n          <Typography><small>{weaponSheet.description}</small></Typography>\r\n        </Box>\r\n        <Box sx={{ mb: -1 }} flexGrow={1} >\r\n          <Typography variant=\"h6\" >{process.env.NODE_ENV === \"development\" && <ColorText color=\"warning\">{id || `\"\"`} </ColorText>}{weaponSheet.name} Lv. {weapon && WeaponSheet.getLevelString(weapon)} {weaponSheet.rarity > 2 && <SqBadge color=\"info\">Refinement {refinement}</SqBadge>}</Typography>\r\n          <Typography><Stars stars={weaponSheet.rarity} /></Typography>\r\n          <Typography variant=\"subtitle1\">{weaponSheet.passiveName}</Typography>\r\n          <Typography gutterBottom>{weaponSheet.passiveName && weaponSheet.passiveDescription(weaponUIData.get(input.weapon.refineIndex).value)}</Typography>\r\n          <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n            <CardDark >\r\n              <CardHeader title={\"Main Stats\"} titleTypographyProps={{ variant: \"subtitle2\" }}/>\r\n              <Divider />\r\n              <FieldDisplayList>\r\n                {[input.weapon.main, input.weapon.sub, input.weapon.sub2].map((node, i) => {\r\n                  const n = weaponUIData.get(node)\r\n                  if (n.isEmpty || !n.value) return null\r\n                  return <NodeFieldDisplay key={n.key} node={n} component={ListItem} />\r\n                })}\r\n              </FieldDisplayList>\r\n            </CardDark>\r\n            {data && weaponSheet.document && <DocumentDisplay sections={weaponSheet.document} />}\r\n          </Box>\r\n        </Box>\r\n      </Box>}\r\n    </CardContent>\r\n    {footer && id && <CardContent sx={{ py: 1 }}>\r\n      <Grid container>\r\n        <Grid item flexGrow={1}>\r\n          <CharacterDropdownButton noUnselect inventory value={location} onChange={equipOnChar} filter={filter} />\r\n        </Grid>\r\n        {!!onClose && <Grid item><CloseButton large onClick={onClose} /></Grid>}\r\n      </Grid>\r\n    </CardContent>}\r\n  </CardLight>\r\n}\r\nfunction SwapBtn({ onChangeId, weaponTypeKey }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [show, setShow] = useState(false)\r\n  const open = () => setShow(true)\r\n  const close = () => setShow(false)\r\n\r\n  const clickHandler = (id) => {\r\n    onChangeId(id)\r\n    close()\r\n  }\r\n\r\n  const weaponSheets = usePromise(WeaponSheet.getAll, [])\r\n\r\n  const weaponIdList = database.weapons.keys.filter(wKey => {\r\n    const dbWeapon = database._getWeapon(wKey)\r\n    if (!dbWeapon) return false\r\n    if (weaponTypeKey && weaponTypeKey !== weaponSheets?.[dbWeapon.key]?.weaponType) return false\r\n    return true\r\n  })\r\n\r\n\r\n  return <>\r\n    <Button color=\"info\" onClick={open} startIcon={<SwapHoriz />} >SWAP WEAPON</Button>\r\n    <ModalWrapper open={show} onClose={close} >\r\n      <CardDark>\r\n        <CardContent sx={{ py: 1 }}>\r\n          <Grid container>\r\n            <Grid item flexGrow={1}>\r\n              <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} Swap Weapon</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <CloseButton onClick={close} />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid container spacing={1}>\r\n            {weaponIdList.map(weaponId =>\r\n              <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\r\n                <WeaponCard\r\n                  weaponId={weaponId}\r\n                  onClick={clickHandler}\r\n                />\r\n              </Grid>)}\r\n          </Grid>\r\n        </CardContent>\r\n      </CardDark>\r\n    </ModalWrapper>\r\n  </>\r\n}\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6.99 11 3 15l3.99 4v-3H14v-2H6.99v-3zM21 9l-3.99-4v3H10v2h7.01v3L21 9z\"\n}), 'SwapHoriz');"],"names":["DataContext","createContext","WeaponDisplayCard","propWeaponId","weaponId","footer","onClose","data","useContext","database","DatabaseContext","weapon","useWeapon","key","level","refinement","ascension","lock","location","id","weaponSheet","usePromise","WeaponSheet","weaponTypeKey","weaponType","weaponDispatch","useCallback","newWeapon","updateWeapon","setLevel","clamp","ascensionMaxLevel","ascenML","setAscension","lowerAscension","characterSheet","CharacterSheet","undefined","weaponFilter","ws","initialWeaponFilter","equipOnChar","charKey","setWeaponLocation","filter","cs","useState","showModal","setshowModal","img","imgAwaken","useEffect","rarity","lowRarityMilestoneLevels","weaponUIData","useMemo","computeUIData","dataObjForWeapon","sx","py","container","spacing","item","flexGrow","show","onHide","onSelect","k","onClick","name","hasRefinement","title","Array","keys","map","selected","disabled","bgcolor","t","palette","contentLight","main","onChange","value","startAdornment","inputProps","min","max","textAlign","width","height","pl","ambiguousLevel","milestoneLevels","lv","as","lvlstr","color","startIcon","SwapBtn","onChangeId","get","input","display","gap","xs","md","lg","maxWidth","flexShrink","minWidth","component","src","className","borderRadius","description","mb","variant","process","stars","passiveName","gutterBottom","passiveDescription","flexDirection","titleTypographyProps","node","i","n","isEmpty","ListItem","document","sections","noUnselect","inventory","large","setShow","close","clickHandler","weaponSheets","weaponIdList","weapons","wKey","dbWeapon","_getWeapon","open","Assets","sm","createSvgIcon","_jsx","d"],"sourceRoot":""}