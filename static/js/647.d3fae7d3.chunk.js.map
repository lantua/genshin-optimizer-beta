{"version":3,"file":"static/js/647.d3fae7d3.chunk.js","mappings":"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","sources":["Components/Artifact/ArtifactSetTooltip.tsx","Components/Artifact/SubstatToggle.tsx","Components/Character/LocationAutocomplete.tsx","Components/Character/LocationName.tsx","Components/Character/ThumbSide.tsx","Components/GeneralAutocomplete.tsx","Components/InfoTooltip.tsx","Components/PercentBadge.tsx","Components/SolidColoredTextfield.tsx","PageArtifact/ArtifactCard.tsx","PageArtifact/ArtifactSort.ts","PageArtifact/RollProbability.ts","ReactHooks/useArtifact.tsx"],"sourcesContent":["import { Box, Skeleton, Stack, Typography } from \"@mui/material\"\r\nimport { Suspense } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\"\r\nimport BootstrapTooltip from \"../BootstrapTooltip\"\r\nimport SqBadge from \"../SqBadge\"\r\nimport { Translate } from \"../Translate\"\r\n\r\nexport default function ArtifactSetTooltip({ children, artifactSheet, numInSet = 5 }: { children: JSX.Element, artifactSheet: ArtifactSheet, numInSet?: number }) {\r\n  return <BootstrapTooltip placement=\"top\" title={<ArtifactSetTooltipContent artifactSheet={artifactSheet} numInSet={numInSet} />} disableInteractive >\r\n    {children}\r\n  </BootstrapTooltip>\r\n}\r\nexport function ArtifactSetTooltipContent({ artifactSheet, numInSet = 5 }: { artifactSheet: ArtifactSheet, numInSet?: number }) {\r\n  return <Suspense fallback={<Skeleton variant='rectangular' width={100} height={100} />}>\r\n    <SetToolTipTitle artifactSheet={artifactSheet} numInSet={numInSet} />\r\n  </Suspense>\r\n}\r\nfunction SetToolTipTitle({ artifactSheet, numInSet = 5 }: { artifactSheet: ArtifactSheet, numInSet?: number }) {\r\n  const { t } = useTranslation(\"sheet\")\r\n  return <Stack spacing={2} sx={{ p: 1 }}>\r\n    {Object.keys(artifactSheet.setEffects).map((setKey) => <Box key={setKey} sx={{ opacity: parseInt(setKey) <= numInSet ? 1 : 0.5 }}>\r\n      <Typography><SqBadge color=\"success\">{t(`${setKey}set`)}</SqBadge></Typography>\r\n      <Typography><Translate ns={`artifact_${artifactSheet.key}_gen`} key18={`setEffects.${setKey}`} /></Typography>\r\n    </Box>\r\n    )}\r\n  </Stack>\r\n}\r\n","import { Box, Grid, ToggleButton } from \"@mui/material\"\r\nimport KeyMap from \"../../KeyMap\"\r\nimport { allSubstatKeys } from \"../../Types/artifact\"\r\nimport SolidToggleButtonGroup from \"../SolidToggleButtonGroup\"\r\nimport StatIcon from \"../StatIcon\"\r\n\r\nexport default function SubstatToggle({ selectedKeys, onChange }) {\r\n  const keys1 = allSubstatKeys.slice(0, 6)\r\n  const keys2 = allSubstatKeys.slice(6)\r\n  const selKeys1 = selectedKeys.filter(k => keys1.includes(k))\r\n  const selKeys2 = selectedKeys.filter(k => keys2.includes(k))\r\n  return <Grid container spacing={1}>\r\n    <Grid item xs={12} md={6}>\r\n      <SolidToggleButtonGroup fullWidth value={selKeys1} onChange={(e, arr) => onChange([...selKeys2, ...arr])} sx={{ height: \"100%\" }}>\r\n        {keys1.map(key => <ToggleButton size=\"small\" key={key} value={key}>\r\n          <Box display=\"flex\" gap={1} alignItems=\"center\">\r\n            {StatIcon[key]}\r\n            {KeyMap.getArtStr(key)}\r\n          </Box>\r\n        </ToggleButton>)}\r\n      </SolidToggleButtonGroup>\r\n    </Grid>\r\n    <Grid item xs={12} md={6}>\r\n      <SolidToggleButtonGroup fullWidth value={selKeys2} onChange={(e, arr) => onChange([...selKeys1, ...arr])} sx={{ height: \"100%\" }}>\r\n        {keys2.map(key => <ToggleButton size=\"small\" key={key} value={key}>\r\n          <Box display=\"flex\" gap={1} alignItems=\"center\">\r\n            {StatIcon[key]}\r\n            {KeyMap.getArtStr(key)}\r\n          </Box>\r\n        </ToggleButton>)}\r\n      </SolidToggleButtonGroup>\r\n    </Grid>\r\n  </Grid>\r\n}\r\n","import { BusinessCenter } from \"@mui/icons-material\"\r\nimport { Skeleton } from \"@mui/material\"\r\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\"\r\nimport { initCharMeta } from \"../../Database/Data/StateData\"\r\nimport { DatabaseContext } from \"../../Database/Database\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { charKeyToLocCharKey, LocationCharacterKey, LocationKey, travelerKeys } from \"../../Types/consts\"\r\nimport GeneralAutocomplete, { GeneralAutocompleteOption } from \"../GeneralAutocomplete\"\r\nimport ThumbSide from \"./ThumbSide\"\r\n\r\nexport function LocationAutocomplete({ location, setLocation, filter = () => true }: { location: LocationKey, setLocation: (v: LocationKey) => void, filter?: (v: CharacterSheet) => void }) {\r\n  const { t } = useTranslation([\"ui\", \"artifact\", \"charNames_gen\"])\r\n  const { database } = useContext(DatabaseContext)\r\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\r\n  const toText = useCallback((key: LocationCharacterKey): string => t(`charNames_gen:${key === \"Traveler\" ? database.chars.LocationToCharacterKey(key).slice(0, 9) : key}`), [database, t])\r\n  const toImg = useCallback((key: LocationKey) => key === \"\" ? <BusinessCenter /> : characterSheets ? <ThumbSide src={characterSheets[database.chars.LocationToCharacterKey(key)]?.thumbImgSide} sx={{ pr: 1 }} /> : <></>, [database, characterSheets])\r\n  const isFavorite = useCallback((key: LocationCharacterKey) => key === \"Traveler\" ?\r\n    travelerKeys.some(key => database.states.getWithInit(`charMeta_${key}`, initCharMeta).favorite) :\r\n    key ? database.states.getWithInit(`charMeta_${key}`, initCharMeta).favorite : false, [database])\r\n  const values: GeneralAutocompleteOption<LocationKey>[] = useMemo(() => [{\r\n    key: \"\",\r\n    label: t`artifact:filterLocation.inventory`,\r\n  },\r\n  ...Array.from(new Set(database.chars.keys.filter(k => characterSheets?.[k] ? filter(characterSheets[k]) : true).map(k => charKeyToLocCharKey(k))))\r\n    .map(v => ({ key: v, label: toText(v), favorite: isFavorite(v) }))\r\n    .sort((a, b) => {\r\n      if (a.favorite && !b.favorite) return -1\r\n      if (!a.favorite && b.favorite) return 1\r\n      return a.label.localeCompare(b.label)\r\n    })\r\n  ], [t, toText, isFavorite, database, characterSheets, filter])\r\n  return <Suspense fallback={<Skeleton variant=\"text\" width={100} />}><GeneralAutocomplete size=\"small\" options={values} valueKey={location} onChange={setLocation} toImg={toImg} clearKey=\"\" /></Suspense>\r\n}\r\n","import { BusinessCenter } from \"@mui/icons-material\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { useContext } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\r\nimport { DatabaseContext } from \"../../Database/Database\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport { LocationKey } from \"../../Types/consts\";\r\n\r\nexport default function LocationName({ location }: { location: LocationKey }) {\r\n  const { t } = useTranslation(\"ui\");\r\n  const { database } = useContext(DatabaseContext)\r\n  const characterSheet = usePromise(() => CharacterSheet.get((location && database) ? database.chars.LocationToCharacterKey(location) : \"\"), [location])\r\n  return <Typography component=\"span\">\r\n    {characterSheet?.name ? characterSheet.nameWIthIcon : <span><BusinessCenter sx={{ verticalAlign: \"text-bottom\" }} /> {t<string>(\"inventory\")}</span>}\r\n  </Typography>\r\n\r\n}\r\n","import { styled } from \"@mui/system\";\r\n\r\nconst ThumbSide = styled(\"img\")(({ theme }) => ({\r\n  display: \"inline-block\",\r\n  width: \"auto\",\r\n  height: `2.3em`,\r\n  lineHeight: 1,\r\n  verticalAlign: \"text-bottom\",\r\n  marginTop: theme.spacing(-3),\r\n  marginLeft: theme.spacing(-1.25),\r\n  marginRight: theme.spacing(-1),\r\n  marginBottom: theme.spacing(-1),\r\n}))\r\n\r\nexport default ThumbSide","import { Favorite } from \"@mui/icons-material\"\r\nimport { Autocomplete, AutocompleteProps, ListItemIcon, ListItemText, MenuItem, Skeleton } from \"@mui/material\"\r\nimport { Suspense } from \"react\"\r\nimport SolidColoredTextField from \"./SolidColoredTextfield\"\r\n\r\nexport type GeneralAutocompleteOption<T extends string> = { key: T, label: string, favorite?: boolean }\r\nexport default function GeneralAutocomplete<T extends string>({ options, valueKey: key, label, onChange, disable = () => false, clearKey, toImg }:\r\n  { valueKey: T, label?: string, onChange: (v: T) => void, toImg: (v: T) => JSX.Element, disable?: (v: T) => boolean, clearKey?: T } & Omit<AutocompleteProps<GeneralAutocompleteOption<T>, false, true, false>, \"renderInput\" | \"onChange\">) {\r\n  const value = options.find(o => o.key === key)\r\n  return <Autocomplete\r\n    options={options}\r\n    value={value}\r\n    clearIcon={key !== clearKey ? undefined : null}\r\n    onChange={(event, newValue, reason) => {\r\n      if (reason === \"clear\" && clearKey !== undefined) return onChange(clearKey)\r\n      return newValue !== null && onChange(newValue.key)\r\n    }}\r\n    isOptionEqualToValue={(option, value) => option.key === value.key}\r\n    getOptionDisabled={option => disable(option.key)}\r\n    renderInput={props => <SolidColoredTextField\r\n      {...props}\r\n      label={label}\r\n      startAdornment={value !== undefined ? toImg(value.key) : undefined}\r\n      hasValue={!!value}\r\n    />}\r\n    renderOption={(props, option) => <MenuItem value={option.key} {...props}>\r\n      <ListItemIcon>{toImg(option.key)}</ListItemIcon>\r\n      <ListItemText>\r\n        <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n          {option.key === value?.key ? <strong>{option.label}</strong> : option.label}\r\n        </Suspense>\r\n      </ListItemText>\r\n      {!!option.favorite && <Favorite />}\r\n    </MenuItem>\r\n    }\r\n  />\r\n}\r\n","\r\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, TooltipProps } from \"@mui/material\";\r\nimport BootstrapTooltip from \"./BootstrapTooltip\";\r\n\r\ninterface ITooltipProps extends Omit<TooltipProps, \"children\"> {\r\n  className?: string,\r\n}\r\nconst InfoTooltip = ({ className, ...props }: ITooltipProps) =>\r\n  <BootstrapTooltip placement=\"top\" {...props} className={className}>\r\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faInfoCircle} /></Box>\r\n  </BootstrapTooltip>\r\n\r\nexport default InfoTooltip\r\n","import SqBadge from './SqBadge';\r\nimport { clamp } from '../Util/Util';\r\nimport { ButtonProps } from '@mui/material';\r\nimport { RollColorKey } from '../Types/consts';\r\n\r\nexport default function PercentBadge({ value, max = 1, valid }: {\r\n  valid?: boolean,\r\n  value: number | string,\r\n  max?: number\r\n}) {\r\n  let [badgeColor, text]: [color: ButtonProps['color'], text: string] = typeof value === 'number' ?\r\n    [`roll${clamp(Math.floor((value / max) * 10) - 4, 1, 6)}` as RollColorKey, value.toFixed() + \"%\"] : [\"secondary\", value]\r\n  if (value > max) valid = false\r\n  if (!valid) badgeColor = \"error\"\r\n  return <SqBadge color={badgeColor} >{text}</SqBadge>\r\n}\r\n","import { TextField, TextFieldProps, useTheme } from \"@mui/material\";\r\n\r\ntype SolidColoredTextFieldProps = Omit<TextFieldProps, \"multiline\" | \"variant\" | \"color\" | \"hiddenLabel\" | \"type\" | \"InputLabelProps\"> & {\r\n  hasValue: boolean\r\n  startAdornment?: Displayable\r\n}\r\nexport default function SolidColoredTextField({ hasValue, startAdornment, InputProps, sx, ...props }: SolidColoredTextFieldProps) {\r\n  const theme = useTheme()\r\n  return <TextField\r\n    {...props}\r\n    variant=\"filled\"\r\n    color={hasValue ? \"success\" : \"primary\"}\r\n    hiddenLabel={props.label ? false : true}\r\n    type=\"search\"\r\n    InputProps={{\r\n      ...InputProps,\r\n      startAdornment,\r\n    }}\r\n    InputLabelProps={{ style: { color: theme.palette.text.primary } }}\r\n    sx={{\r\n      ...sx,\r\n      // Fill in the background without using the `focused` prop\r\n      \"& .MuiFilledInput-root\": { backgroundColor: hasValue ? theme.palette.success.main : theme.palette.primary.main, paddingTop: props.label ? undefined : 0, paddingBottom: 0, flexWrap: \"nowrap\", },\r\n      \"& .MuiFilledInput-root.Mui-focused\": { backgroundColor: hasValue ? theme.palette.success.light : theme.palette.primary.light },\r\n      \"& .MuiFilledInput-root:hover\": { backgroundColor: hasValue ? theme.palette.success.dark : theme.palette.primary.dark },\r\n      // Remove the colored bar at the bottom of the input\r\n      \"& .MuiFilledInput-root:before\": { border: \"none\" },\r\n      \"& .MuiFilledInput-root.Mui-disabled:before\": { border: \"none\" },\r\n      \"& .MuiFilledInput-root:after\": { border: \"none\" },\r\n      \"& .MuiFilledInput-root:hover:not(.Mui-disabled):before\": { border: \"none\" },\r\n      // Remove the x at the end of search input for IE\r\n      \"& input[type=search]::-ms-clear\": { display: \"none\", width: 0, height: 0 },\r\n      \"& input[type=search]::-ms-reveal\": { display: \"none\", width: 0, height: 0 },\r\n      // Remove the x at the end of search input for Chrome\r\n      \"& input[type=search]::-webkit-search-decoration\": { display: \"none\" },\r\n      \"& input[type=search]::-webkit-search-cancel-button\": { display: \"none\" },\r\n      \"& input[type=search]::-webkit-search-results-button\": { display: \"none\" },\r\n      \"& input[type=search]::-webkit-search-results-decoration\": { display: \"none\" },\r\n    }}\r\n  />\r\n}\r\n","import { faBan, faChartLine, faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Lock, LockOpen } from '@mui/icons-material';\r\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, Chip, IconButton, Skeleton, Tooltip, Typography } from '@mui/material';\r\nimport { lazy, Suspense, useCallback, useContext, useMemo, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ArtifactSetTooltipContent } from '../Components/Artifact/ArtifactSetTooltip';\r\nimport SlotNameWithIcon from '../Components/Artifact/SlotNameWIthIcon';\r\nimport CardLight from '../Components/Card/CardLight';\r\nimport { LocationAutocomplete } from '../Components/Character/LocationAutocomplete';\r\nimport LocationName from '../Components/Character/LocationName';\r\nimport ColorText from '../Components/ColoredText';\r\nimport ConditionalWrapper from '../Components/ConditionalWrapper';\r\nimport InfoTooltip from '../Components/InfoTooltip';\r\nimport PercentBadge from '../Components/PercentBadge';\r\nimport { StarsDisplay } from '../Components/StarDisplay';\r\nimport StatIcon from '../Components/StatIcon';\r\nimport Artifact from '../Data/Artifacts/Artifact';\r\nimport { ArtifactSheet } from '../Data/Artifacts/ArtifactSheet';\r\nimport { DatabaseContext } from '../Database/Database';\r\nimport KeyMap, { cacheValueString } from '../KeyMap';\r\nimport useArtifact from '../ReactHooks/useArtifact';\r\nimport usePromise from '../ReactHooks/usePromise';\r\nimport { allSubstatKeys, ICachedArtifact, ICachedSubstat, SubstatKey } from '../Types/artifact';\r\nimport { allElementsWithPhy, LocationKey, Rarity } from '../Types/consts';\r\nimport { clamp, clamp01 } from '../Util/Util';\r\n\r\nconst ArtifactEditor = lazy(() => import('./ArtifactEditor'))\r\n\r\ntype Data = {\r\n  artifactId?: string,\r\n  artifactObj?: ICachedArtifact,\r\n  onClick?: (id: string) => void,\r\n  onDelete?: (id: string) => void,\r\n  mainStatAssumptionLevel?: number,\r\n  effFilter?: Set<SubstatKey>,\r\n  editor?: boolean,\r\n  canExclude?: boolean\r\n  canEquip?: boolean,\r\n  extraButtons?: JSX.Element\r\n}\r\nconst allSubstatFilter = new Set(allSubstatKeys)\r\n\r\nexport default function ArtifactCard({ artifactId, artifactObj, onClick, onDelete, mainStatAssumptionLevel = 0, effFilter = allSubstatFilter, editor = false, canExclude = false, canEquip = false, extraButtons }: Data): JSX.Element | null {\r\n  const { t } = useTranslation([\"artifact\", \"ui\"]);\r\n  const { database } = useContext(DatabaseContext)\r\n  const databaseArtifact = useArtifact(artifactId)\r\n  const sheet = usePromise(() => ArtifactSheet.get((artifactObj ?? databaseArtifact)?.setKey), [artifactObj, databaseArtifact])\r\n  const setLocation = useCallback((k: LocationKey) => artifactId && database.arts.set(artifactId, { location: k }), [database, artifactId])\r\n\r\n  const editable = !artifactObj\r\n  const [showEditor, setshowEditor] = useState(false)\r\n  const onHideEditor = useCallback(() => setshowEditor(false), [setshowEditor])\r\n  const onShowEditor = useCallback(() => editable && setshowEditor(true), [editable, setshowEditor])\r\n\r\n  const wrapperFunc = useCallback(children => <CardActionArea onClick={() => artifactId && onClick?.(artifactId)} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }} >{children}</CardActionArea>, [onClick, artifactId],)\r\n  const falseWrapperFunc = useCallback(children => <Box sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }} >{children}</Box>, [])\r\n\r\n  const art = artifactObj ?? databaseArtifact\r\n\r\n  const { currentEfficiency, maxEfficiency, currentEfficiency_, maxEfficiency_ } = useMemo(() => {\r\n    if (!art) return { currentEfficiency: 0, maxEfficiency: 0, currentEfficiency_: 0, maxEfficiency_: 0 }\r\n    const { currentEfficiency, maxEfficiency } = Artifact.getArtifactEfficiency(art, effFilter)\r\n    const { currentEfficiency: currentEfficiency_, maxEfficiency: maxEfficiency_ } = Artifact.getArtifactEfficiency(art, new Set(allSubstatKeys))\r\n    return { currentEfficiency, maxEfficiency, currentEfficiency_, maxEfficiency_ }\r\n  }, [art, effFilter])\r\n\r\n\r\n  if (!art) return null\r\n\r\n  const { id, lock, slotKey, rarity, level, mainStatKey, substats, exclude, location = \"\" } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\r\n  const mainStatUnit = KeyMap.unit(mainStatKey)\r\n\r\n  const artifactValid = maxEfficiency !== 0\r\n  const slotName = sheet?.getSlotName(slotKey)\r\n  const slotDesc = sheet?.getSlotDesc(slotKey)\r\n  const slotDescTooltip = slotDesc && <InfoTooltip title={<Box>\r\n    <Suspense fallback={<Skeleton variant=\"text\" width={100} />}><Typography variant='h6'>{slotName}</Typography></Suspense>\r\n    <Typography>{slotDesc}</Typography>\r\n  </Box>} />\r\n  const ele = allElementsWithPhy.find(e => mainStatKey.startsWith(e))\r\n  const mainIcon = ele ? <ColorText color={ele}>{StatIcon[mainStatKey]}</ColorText> : StatIcon[mainStatKey]\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 350 }} />}>\r\n    {editor && <Suspense fallback={false}>\r\n      <ArtifactEditor\r\n        artifactIdToEdit={showEditor ? artifactId : \"\"}\r\n        cancelEdit={onHideEditor}\r\n      />\r\n    </Suspense>}\r\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n      <ConditionalWrapper condition={!!onClick} wrapper={wrapperFunc} falseWrapper={falseWrapperFunc}>\r\n        <Box className={`grad-${rarity}star`} sx={{ position: \"relative\", width: \"100%\" }}>\r\n          {!onClick && <IconButton color=\"primary\" disabled={!editable} onClick={() => database.arts.set(id, { lock: !lock })} sx={{ position: \"absolute\", right: 0, bottom: 0, zIndex: 2 }}>\r\n            {lock ? <Lock /> : <LockOpen />}\r\n          </IconButton>}\r\n          <Box sx={{ pt: 2, px: 2, position: \"relative\", zIndex: 1 }}>\r\n            {/* header */}\r\n            <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\", gap: 1, mb: 1 }}>\r\n              <Chip size=\"small\" label={<strong>{` +${level}`}</strong>} color={Artifact.levelVariant(level)} />\r\n              {!slotName && <Skeleton variant=\"text\" width={100} />}\r\n              {slotName && <Typography noWrap sx={{ textAlign: \"center\", backgroundColor: \"rgba(100,100,100,0.35)\", borderRadius: \"1em\", px: 1 }}><strong>{slotName}</strong></Typography>}\r\n              {!slotDescTooltip && <Skeleton width={10} />}\r\n              {slotDescTooltip}\r\n            </Box>\r\n            <Typography color=\"text.secondary\" variant=\"body2\">\r\n              <SlotNameWithIcon slotKey={slotKey} />\r\n            </Typography>\r\n            <Typography variant=\"h6\" sx={{ display: \"flex\", alignItems: \"center\", gap: 1 }}>\r\n              {mainIcon}\r\n              <span>{KeyMap.get(mainStatKey)}</span>\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <strong>\r\n                <ColorText color={mainStatLevel !== level ? \"warning\" : undefined}>{cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</ColorText>\r\n              </strong>\r\n            </Typography>\r\n            <StarsDisplay stars={rarity} colored />\r\n            {/* {process.env.NODE_ENV === \"development\" && <Typography color=\"common.black\">{id || `\"\"`} </Typography>} */}\r\n          </Box>\r\n          <Box sx={{ height: \"100%\", position: \"absolute\", right: 0, top: 0 }}>\r\n            <Box\r\n              component=\"img\"\r\n              src={sheet?.slotIcons[slotKey] ?? \"\"}\r\n              width=\"auto\"\r\n              height=\"100%\"\r\n              sx={{ float: \"right\" }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <CardContent sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\", pt: 1, pb: 0, width: \"100%\" }}>\r\n          {substats.map((stat: ICachedSubstat) => !!stat.value && <SubstatDisplay key={stat.key} stat={stat} effFilter={effFilter} rarity={rarity} />)}\r\n          <Typography variant=\"caption\" sx={{ display: \"flex\", gap: 1, my: 1 }}>\r\n            <ColorText color=\"secondary\" sx={{ flexGrow: 1 }}>{t`artifact:editor.curSubEff`}</ColorText>\r\n            <PercentBadge value={currentEfficiency} max={900} valid={artifactValid} />\r\n            {currentEfficiency !== currentEfficiency_ && <span>/</span>}\r\n            {currentEfficiency !== currentEfficiency_ && <PercentBadge value={currentEfficiency_} max={900} valid={artifactValid} />}\r\n          </Typography>\r\n          {currentEfficiency !== maxEfficiency && <Typography variant=\"caption\" sx={{ display: \"flex\", gap: 1 }}>\r\n            <ColorText color=\"secondary\" sx={{ flexGrow: 1 }}>{t`artifact:editor.maxSubEff`}</ColorText>\r\n            <PercentBadge value={maxEfficiency} max={900} valid={artifactValid} />\r\n            {maxEfficiency !== maxEfficiency_ && <span>/</span>}\r\n            {maxEfficiency !== maxEfficiency_ && <PercentBadge value={maxEfficiency_} max={900} valid={artifactValid} />}\r\n          </Typography>}\r\n          <Box flexGrow={1} />\r\n          {art.probability !== undefined && art.probability >= 0 && <strong>Probability: {(art.probability * 100).toFixed(2)}%</strong>}\r\n          <Typography color=\"success.main\">{sheet?.name ?? \"Artifact Set\"} {sheet && <InfoTooltip title={<ArtifactSetTooltipContent artifactSheet={sheet} />} />}</Typography>\r\n        </CardContent>\r\n      </ConditionalWrapper>\r\n      <Box sx={{ p: 1, display: \"flex\", gap: 1, justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          {editable && canEquip\r\n            ? <LocationAutocomplete location={location} setLocation={setLocation} />\r\n            : <LocationName location={location} />}\r\n        </Box>\r\n        {editable && <ButtonGroup sx={{ height: \"100%\" }}>\r\n          {editor && <Tooltip title={<Typography>{t`artifact:edit`}</Typography>} placement=\"top\" arrow>\r\n            <Button color=\"info\" size=\"small\" onClick={onShowEditor} >\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>\r\n          </Tooltip>}\r\n          {canExclude && <Tooltip title={<Box>\r\n            <Typography>{t`artifact:excludeArtifactTip`}</Typography>\r\n            <Typography><ColorText color={exclude ? \"error\" : \"success\"}>{t(`artifact:${exclude ? \"excluded\" : \"included\"}`)}</ColorText></Typography>\r\n          </Box>} placement=\"top\" arrow>\r\n            <Button onClick={() => database.arts.set(id, { exclude: !exclude })} color={exclude ? \"error\" : \"success\"} size=\"small\" >\r\n              <FontAwesomeIcon icon={exclude ? faBan : faChartLine} className=\"fa-fw\" />\r\n            </Button>\r\n          </Tooltip>}\r\n          {!!onDelete && <Button color=\"error\" size=\"small\" onClick={() => onDelete(id)} disabled={lock}>\r\n            <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n          </Button>}\r\n          {extraButtons}\r\n        </ButtonGroup>}\r\n      </Box>\r\n    </CardLight >\r\n  </Suspense>\r\n}\r\nfunction SubstatDisplay({ stat, effFilter, rarity }: { stat: ICachedSubstat, effFilter: Set<SubstatKey>, rarity: Rarity }) {\r\n  const numRolls = stat.rolls?.length ?? 0\r\n  const maxRoll = stat.key ? Artifact.substatValue(stat.key) : 0\r\n  const rollData = useMemo(() => stat.key ? Artifact.getSubstatRollData(stat.key, rarity) : [], [stat.key, rarity])\r\n  const rollOffset = 7 - rollData.length\r\n  const rollColor = `roll${clamp(numRolls, 1, 6)}`\r\n  const efficiency = stat.efficiency ?? 0\r\n  const inFilter = stat.key && effFilter.has(stat.key)\r\n  const effOpacity = clamp01(0.5 + (efficiency / (100 * 5)) * 0.5) //divide by 6 because an substat can have max 6 rolls\r\n  const statName = KeyMap.getStr(stat.key)\r\n  const unit = KeyMap.unit(stat.key)\r\n  const progresses = useMemo(() => <Box display=\"flex\" gap={0.25} height=\"1.3em\" sx={{ opacity: inFilter ? 1 : 0.3 }}>\r\n    {[...stat.rolls].sort().map((v, i) => <SmolProgress key={`${i}${v}`} value={100 * v / maxRoll} color={`roll${clamp(rollOffset + rollData.indexOf(v), 1, 6)}.main`} />)}\r\n  </Box>, [inFilter, stat.rolls, maxRoll, rollData, rollOffset])\r\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\r\n    <Typography sx={{ flexGrow: 1 }} color={(numRolls ? `${rollColor}.main` : \"error.main\") as any} component=\"span\">{StatIcon[stat.key]} {statName}{`+${cacheValueString(stat.value, KeyMap.unit(stat.key))}${unit}`}</Typography>\r\n    {progresses}\r\n    <Typography sx={{ opacity: effOpacity, minWidth: 40, textAlign: \"right\" }}>{efficiency.toFixed()}%</Typography>\r\n  </Box>)\r\n}\r\nexport function SmolProgress({ color = \"red\", value = 50 }) {\r\n  return <Box sx={{ width: 7, height: \"100%\", bgcolor: color, overflow: \"hidden\", borderRadius: 1, display: \"inline-block\" }}>\r\n    <Box sx={{ width: 10, height: `${100 - clamp(value, 0, 100)}%`, bgcolor: \"gray\" }} />\r\n  </Box>\r\n}\r\n","import Artifact from \"../Data/Artifacts/Artifact\";\r\nimport { ICachedArtifact, MainStatKey, SubstatKey } from \"../Types/artifact\";\r\nimport { allArtifactRarities, allSlotKeys, ArtifactRarity, ArtifactSetKey, LocationKey, SlotKey } from \"../Types/consts\";\r\nimport { FilterConfigs, SortConfigs } from \"../Util/SortByFilters\";\r\nimport { probability } from \"./RollProbability\";\r\nexport const artifactSortKeys = [\"rarity\", \"level\", \"artsetkey\", \"efficiency\", \"mefficiency\", \"probability\"] as const\r\nexport type ArtifactSortKey = typeof artifactSortKeys[number]\r\n\r\nexport type FilterLocationKey = LocationKey | \"Equipped\" | \"Inventory\"\r\n\r\nexport type FilterOption = {\r\n  artSetKeys: ArtifactSetKey[],\r\n  rarity: ArtifactRarity[],\r\n  levelLow: number,\r\n  levelHigh: number,\r\n  slotKeys: SlotKey[],\r\n  mainStatKeys: MainStatKey[],\r\n  substats: SubstatKey[]\r\n  location: FilterLocationKey\r\n  exclusion: Array<\"excluded\" | \"included\">,\r\n  locked: Array<\"locked\" | \"unlocked\">,\r\n}\r\n\r\ntype ArtifactSortFilter = {\r\n  filterOption: FilterOption\r\n  ascending: boolean\r\n  sortType: ArtifactSortKey\r\n}\r\nexport function initialFilterOption(): FilterOption {\r\n  return {\r\n    artSetKeys: [],\r\n    rarity: [...allArtifactRarities],\r\n    levelLow: 0,\r\n    levelHigh: 20,\r\n    slotKeys: [...allSlotKeys],\r\n    mainStatKeys: [],\r\n    substats: [],\r\n    location: \"\",\r\n    exclusion: [\"excluded\", \"included\"],\r\n    locked: [\"locked\", \"unlocked\"],\r\n  }\r\n}\r\nexport const initialArtifactSortFilter = (): ArtifactSortFilter => ({\r\n  filterOption: initialFilterOption(),\r\n  ascending: false,\r\n  sortType: artifactSortKeys[0],\r\n})\r\n\r\nexport function artifactSortConfigs(effFilterSet: Set<SubstatKey>, probabilityFilter): SortConfigs<ArtifactSortKey, ICachedArtifact> {\r\n  return {\r\n    rarity: {\r\n      getValue: art => art.rarity ?? 0,\r\n      tieBreaker: \"level\"\r\n    },\r\n    level: {\r\n      getValue: art => art.level ?? 0,\r\n      tieBreaker: \"artsetkey\"\r\n    },\r\n    artsetkey: {\r\n      getValue: art => art.setKey ?? \"\",\r\n      tieBreaker: \"level\"\r\n    },\r\n    efficiency: {\r\n      getValue: art => Artifact.getArtifactEfficiency(art, effFilterSet).currentEfficiency\r\n    },\r\n    mefficiency: {\r\n      getValue: art => Artifact.getArtifactEfficiency(art, effFilterSet).maxEfficiency\r\n    },\r\n    probability: {\r\n      getValue: art => {\r\n        if (!Object.keys(probabilityFilter).length) return 0\r\n        const prob = (art as any).probability\r\n        if (prob === undefined) return probability(art, probabilityFilter);\r\n        return prob\r\n      }\r\n    }\r\n  }\r\n}\r\nexport function artifactFilterConfigs(): FilterConfigs<keyof FilterOption, ICachedArtifact> {\r\n  return {\r\n    exclusion: (art, filter) => {\r\n      if (!filter.includes(\"included\") && !art.exclude) return false\r\n      if (!filter.includes(\"excluded\") && art.exclude) return false\r\n      return true\r\n    },\r\n    locked: (art, filter) => {\r\n      if (!filter.includes(\"locked\") && art.lock) return false\r\n      if (!filter.includes(\"unlocked\") && !art.lock) return false\r\n      return true\r\n    },\r\n    location: (art, filter) => {\r\n      if (!filter) return true\r\n      if (filter === \"Inventory\" && !art.location) return true\r\n      if (filter === \"Equipped\" && art.location) return true\r\n      if (filter === art.location) return true\r\n      return false\r\n    },\r\n    artSetKeys: (art, filter) => filter.length ? filter.includes(art.setKey) : true,\r\n    slotKeys: (art, filter) => filter.includes(art.slotKey),\r\n    mainStatKeys: (art, filter) => filter.length ? filter.includes(art.mainStatKey) : true,\r\n    levelLow: (art, filter) => filter <= art.level,\r\n    levelHigh: (art, filter) => filter >= art.level,\r\n    rarity: (art, filter) => filter.includes(art.rarity),\r\n    substats: (art, filter) => {\r\n      for (const filterKey of filter)\r\n        if (filterKey && !art.substats.some(substat => substat.key === filterKey)) return false;\r\n      return true\r\n    }\r\n  }\r\n}\r\n","import { IArtifact, ISubstat, MainStatKey, SubstatKey } from '../Types/artifact'\r\nimport { crawlObject, layeredAssignment } from '../Util/Util'\r\nimport Artifact from '../Data/Artifacts/Artifact'\r\nimport ArtifactMainStatsData from '../Data/Artifacts/artifact_main_gen.json'\r\n\r\n// We separate rolls into \"filler rolls\" that occurs when there are less than 4 substats,\r\n// and \"upgrade rolls\" that occurs when all 4 substats are added. They have different\r\n// probability distribution and require separate consideration.\r\n\r\n// Notations for the remainder of this file.\r\n//\r\n// i, j, k := substat\r\n// E(i) := Extra substat that rolls into substat i\r\n// T(i) := Targetted (extra) substat for substat i\r\n// Nf(i) := # of filler roll into substat i (0 <= Nfi <= 1)\r\n// Nu(i) := # of upgrade rolls into substat i\r\n//\r\n// E := { E1, E2, ... }\r\n// T := { T1, T2, ... }\r\n// N(i) := Nf(i) + Nu(i)\r\n// Nf := Nf(1) + Nf(2) + ...\r\n// Nu := Nu(1) + Nu(2) + ...\r\n//\r\n// For example, if the artifact has 14 atk, and the target atk is 30,\r\n// in a scenario where we roll 2 rolls of 16 and 18 into atk, then\r\n//\r\n// i = atk, E(atk) = 16 + 18, T(atk) = 30 - 14, Nf(atk) = 0 roll, Nu(atk) = 2 rolls\r\n\r\nconst allWeights = [3, 4, 6] as const\r\ntype Weight = typeof allWeights[number]\r\n\r\n/**\r\n * Weight used when rolling a filler roll. Each roll will choose from available\r\n * substats (excluding main stat and existing substats) with these weights.\r\n */\r\nconst fWeight: StrictDict<SubstatKey, Weight> = {\r\n  hp: 6, atk: 6, def: 6,\r\n  hp_: 4, atk_: 4, def_: 4, eleMas: 4, enerRech_: 4,\r\n  critRate_: 3, critDMG_: 3\r\n}\r\n\r\n/**\r\n * Probability of observing a filler sequence with particular weights\r\n *\r\n * pFillerSeq[w0][w1][w2][...] = Pr [ fWeight[main stat] = w0, fWeight[substat1] = w1, fWeight[substat2] = w2, ... ]\r\n */\r\nconst pFillerSeq: Dict<0 | Weight, Dict<Weight, Dict<Weight, Dict<Weight, Dict<Weight, number>>>>> = {}\r\nfunction populatePFillerSeq(prefix: (0 | Weight)[], prob: { [key in Weight]: number }, sumProb: number, current: number) {\r\n  if (prefix.length === 5) {\r\n    layeredAssignment(pFillerSeq, prefix as any, current)\r\n    return\r\n  }\r\n\r\n  for (const i of allWeights)\r\n    if (prob[i] > 0)\r\n      populatePFillerSeq([...prefix, i], { ...prob, [i]: prob[i] - i }, sumProb - i, current * prob[i] / sumProb)\r\n}\r\npopulatePFillerSeq([0], { 3: 6, 4: 20, 6: 18 }, 44, 1)\r\n\r\npopulatePFillerSeq([3], { 3: 3, 4: 20, 6: 18 }, 41, 1)\r\npopulatePFillerSeq([4], { 3: 6, 4: 16, 6: 18 }, 40, 1)\r\npopulatePFillerSeq([6], { 3: 6, 4: 20, 6: 12 }, 38, 1)\r\n\r\n/**\r\n * cnr[n][r] = C(n, r) = n! / (r!(n-r)!)\r\n *\r\n * 0 <= n <= 5; 0 <= r <= n\r\n */\r\nconst cnr = Array(6).fill(0).map((_, n) => {\r\n  const result = [1]\r\n  let r = 0, value = 1\r\n  while (++r <= n) {\r\n    value *= n - r + 1\r\n    value /= r\r\n    result.push(value)\r\n  }\r\n\r\n  return result\r\n})\r\n\r\n/**\r\n * pNExtra[n][i] = Pr[ E(k) >= (i - 7n) * alpha(i) | N(k) = n ]\r\n *               = Pr[ (E(k) / alpha(k)) - 7n >= i | N(k) = n ]\r\n *\r\n * 0 <= n <= 5; 0 <= i < 3*n + 1\r\n */\r\nconst pNExtra = [[1]]\r\nwhile (pNExtra.length < 6) {\r\n  const last = pNExtra[pNExtra.length - 1]\r\n  const next = Array(last.length + 3).fill(0)\r\n  last.forEach((value, i) => {\r\n    for (const j of [0, 1, 2, 3]) {\r\n      next[i + j] += value\r\n    }\r\n  })\r\n\r\n  pNExtra.push(next.map(x => x / 4))\r\n}\r\nfor (const array of pNExtra) {\r\n  let accu = array.reduce((a, b) => a + b)\r\n  array.forEach((x, i, array) => {\r\n    array[i] = accu\r\n    accu -= x\r\n  })\r\n}\r\n\r\n/** Probability that `artifact` will have at least `target` stats at max level */\r\nfunction probability(artifact: IArtifact, _target: { [key in SubstatKey]?: number }): number {\r\n  if (artifact.rarity <= 2) return NaN // Doesn't work with 1* and 2* should we decide to add them\r\n\r\n  const { rarity, level, substats } = artifact\r\n\r\n  // `target = target - mainstat - substat` to find the extra substats we need\r\n  // Also count filler rolls (4 - # of substats) while we're at it\r\n  const target = { ..._target }, required = new Set(Object.keys(target))\r\n  let numFillerSlots = 0\r\n  {\r\n    const key = artifact.mainStatKey\r\n    if (key in target) {\r\n      const maxLevel = rarity * 4 // Note: this formula doesn't work with 1* and 2* artifacts\r\n      const maxLevelMainStat = ArtifactMainStatsData[rarity][key][maxLevel]\r\n      if (maxLevelMainStat < target[key]!) return 0 // Main stat won't meet the target\r\n\r\n      delete target[key]\r\n      required.delete(key as SubstatKey)\r\n    }\r\n  }\r\n  for (const { key, value } of substats) {\r\n    if (key) {\r\n      if (required.has(key)) {\r\n        required.delete(key)\r\n        if (target[key]! > value)\r\n          target[key]! -= value\r\n        else delete target[key] // Requirement already met\r\n      }\r\n    } else numFillerSlots += 1\r\n  }\r\n  numFillerSlots += 4 - substats.length\r\n\r\n  if (required.size > numFillerSlots || Object.keys(target).length > 4) return 0 // Not enough filler rolls\r\n\r\n  const numUpgradeRolls = Artifact.rollsRemaining(level, rarity) - numFillerSlots\r\n\r\n  // normalize `target`\r\n  for (const [key, value] of Object.entries(target))\r\n    target[key] = Math.max(Math.ceil(10 * value / Artifact.substatValue(key, rarity)), 1)\r\n\r\n  let minTotalUpgrades = 0\r\n  const targetEntries = Object.entries(target).map(([key, target]) => {\r\n    const filler = required.has(key) ? 1 : 0 // Nf(i)\r\n    const minUpgrade = Math.ceil(target / 10) - filler // Minimum # of upgrade rolls to ensure E(i) > T(i)\r\n    minTotalUpgrades += minUpgrade\r\n    return { target, filler, minUpgrade }\r\n  }).reverse()\r\n\r\n  if (minTotalUpgrades > numUpgradeRolls) return 0 // Not enough upgrade rolls\r\n\r\n  /**\r\n   * The optimization trick here is to write Pr[ E > T | N ] using a recursive relation. Let\r\n   *\r\n   *  f(n, t) = Pr[ E(i) >= t | N(i) = n ]\r\n   *  g(k, n) = Pr[ E(1) >= T(1), E(2) >= T(2), ..., E(k) >= T(k) | Nu - Nu(1) - Nu(2) - ... - Nu(k) = n ]\r\n   *  h(n, m, M) = Pr[ Nu(k) = m | 0 <= Nu(k) <= n, |K| = M ]\r\n   *\r\n   * Then\r\n   *\r\n   *  Pr [ E > T | N ] = Pr[ Nf(k) = I(k requires filler) for all k | N ] sum{0 <= n <= Nu} g(|K|, n)\r\n   *\r\n   * where I(X) is the indicator function, and |K| is the number of substat constraints, and\r\n   *\r\n   *  f(n, e * alpha(i)) = pNExtra[n][ e - 7n ]\r\n   *  h(n, m, M) = C(n, m) (M-1)^(n - m) M^(-n) = pRollInto(n, m, M)\r\n   *  g(0, N) = 1\r\n   *  g(0, n) = 0 for n != N\r\n   *\r\n   *  g(k + 1, n) = sum{0 <= m <= n} g(k, n + m) f(m + Nf(k), T(k)) h(n + m, m, |K| - k)\r\n   */\r\n\r\n  // At this point,\r\n  //  `target` = ceil(T / alpha)\r\n  //  `numUpgradeRolls` = Nu\r\n\r\n  let result = { [numUpgradeRolls]: 1 }, additionalUpgradeRolls = numUpgradeRolls - minTotalUpgrades\r\n\r\n  // Keep applying `target` from first to last.\r\n  // At each step i in the loop, `result[n]` = g(i, n)\r\n  targetEntries.forEach(({ target, filler, minUpgrade }, targetIndex) => {\r\n    const next: typeof result = {}\r\n\r\n    for (let rolls = minUpgrade; rolls <= minUpgrade + additionalUpgradeRolls; rolls++) {\r\n      // rolls = m; extra = T(i) / alpha - 7n\r\n\r\n      // Extra substat (mutiple of alpha) required from upgrade & filler rolls\r\n      const extra = target - 7 * (rolls + filler)\r\n      // pExtra = Pr[ Has at least `extra` * alpha from `rolls` upgrade or filler rolls into `key` ]\r\n      //        = f(m + Nf(i), T(i))\r\n      const pExtra = (extra > 0 ? pNExtra[rolls + filler][extra] : 1)\r\n\r\n      for (const [_remaining, probability] of Object.entries(result)) {\r\n        const remaining = parseInt(_remaining)\r\n        if (remaining < rolls) continue\r\n\r\n        // n := remaining - m\r\n        // remaining = n + m\r\n        // probability = g(i, n + m)\r\n\r\n        // `pRolls` = Pr[ Has `rolls` rolls into `key` from `remaining` upgrade rolls ]\r\n        //          = h(n + m, m, |K| - i)\r\n        const pRolls = pRollInto(remaining, rolls, 4 - targetIndex)\r\n        const index = remaining - rolls // n\r\n\r\n        // g(i + 1, n) += g(i, n + m) f(m + Nf(i), T(i)) h(n + m, m, |K| - i)\r\n        next[index] = (next[index] ?? 0) + probability * pExtra * pRolls\r\n      }\r\n    }\r\n    result = next\r\n  })\r\n\r\n  // At this point, `result[i]` = g(|K|, i)\r\n\r\n  return calculatePFillerRolls(artifact.mainStatKey, substats, required) * Object.values(result).reduce((a, b) => a + b)\r\n}\r\n\r\n/**\r\n * Pr[ N(k) = n | N = m, |K| = M ]\r\n *\r\n * 0 <= n <= N <= 5; 0 <= M <= 4\r\n */\r\nfunction pRollInto(m: number, n: number, M: number) {\r\n  return cnr[m][n] * Math.pow(M - 1, m - n) / Math.pow(M, m)\r\n}\r\n\r\n// Given a list of substat (in that order), calculate the probability that filler rolls will have all `required` substats in any order\r\nfunction calculatePFillerRolls(mainStat: MainStatKey, substats: ISubstat[], required: Set<SubstatKey>) {\r\n  // Instead of picking substats in a particular order [critDMG_, atk_, ...],\r\n  // We pick substat weights first [3, 4, 3, ...], then assign proper substats\r\n  // that corresponds to that weight: 3 => critDMG_ | critRate_ ; 4 => atk_, etc.\r\n  // This reduces the search space significantly (5040 substat sequences => 71 weight sequences).\r\n\r\n  const mainStatRatio = fWeight[mainStat] ?? 0\r\n  let pFillerRolls = 0 // Pr[ filler rolls include all `required` substats, Substats are in the same order as `substats` ]\r\n\r\n  const numUnusedSubstats = { 3: 2, 4: 5, 6: 3 } // # of substat not used by main stat or substats\r\n  let pSuffixFillerSeq: any = pFillerSeq[mainStatRatio] // Suffix of `pFillerSeq` that excludes the `substats` portion\r\n  for (const { key } of substats) {\r\n    if (key) {\r\n      const ratio = fWeight[key]\r\n      pSuffixFillerSeq = pSuffixFillerSeq[ratio]\r\n      numUnusedSubstats[ratio] -= 1\r\n    }\r\n  }\r\n  if (mainStatRatio) numUnusedSubstats[mainStatRatio] -= 1\r\n\r\n  const requiredCount = { 3: 0, 4: 0, 6: 0 }\r\n  for (const key of required) requiredCount[fWeight[key]] += 1\r\n\r\n  let total = 0\r\n  crawlObject(pSuffixFillerSeq, [], obj => typeof obj === \"number\", (prob: number, path: string[]) => {\r\n    total += prob\r\n    const currentCount = { 3: 0, 4: 0, 6: 0 }\r\n    for (const key of path) currentCount[key] += 1\r\n\r\n    let sum = prob\r\n    for (const i of allWeights) {\r\n      const current = currentCount[i], required = requiredCount[i]\r\n      if (current < required) return\r\n      sum *= cnr[current][required]\r\n    }\r\n\r\n    pFillerRolls += sum\r\n  })\r\n\r\n  for (const i of allWeights)\r\n    pFillerRolls /= cnr[numUnusedSubstats[i]][requiredCount[i]]\r\n  return pFillerRolls / total\r\n}\r\n\r\nexport { probability }\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\n\r\nexport default function useArtifact(artifactID: string | undefined = \"\") {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [artifact, setArtifact] = useState(database.arts.get(artifactID))\r\n  useEffect(() => setArtifact(database.arts.get(artifactID)), [database, artifactID])\r\n  useEffect(() =>\r\n    artifactID ? database.arts.follow(artifactID, (k, r, v) => r === \"update\" && setArtifact(v)) : undefined,\r\n    [artifactID, setArtifact, database])\r\n  return artifact\r\n}\r\n"],"names":["ArtifactSetTooltip","children","artifactSheet","numInSet","placement","title","ArtifactSetTooltipContent","disableInteractive","Suspense","fallback","variant","width","height","SetToolTipTitle","t","useTranslation","spacing","sx","p","Object","keys","setEffects","map","setKey","opacity","parseInt","color","ns","key","key18","SubstatToggle","selectedKeys","onChange","keys1","allSubstatKeys","keys2","selKeys1","filter","k","includes","selKeys2","container","item","xs","md","fullWidth","value","e","arr","size","display","gap","alignItems","StatIcon","KeyMap","LocationAutocomplete","location","setLocation","database","useContext","DatabaseContext","characterSheets","usePromise","CharacterSheet","toText","useCallback","chars","LocationToCharacterKey","slice","toImg","src","thumbImgSide","pr","isFavorite","travelerKeys","states","getWithInit","initCharMeta","favorite","values","useMemo","label","Array","from","Set","charKeyToLocCharKey","v","sort","a","b","localeCompare","options","valueKey","clearKey","LocationName","characterSheet","component","name","nameWIthIcon","verticalAlign","ThumbSide","styled","theme","lineHeight","marginTop","marginLeft","marginRight","marginBottom","GeneralAutocomplete","disable","find","o","clearIcon","undefined","event","newValue","reason","isOptionEqualToValue","option","getOptionDisabled","renderInput","props","startAdornment","hasValue","renderOption","className","cursor","icon","faInfoCircle","PercentBadge","max","valid","clamp","Math","floor","toFixed","badgeColor","text","SolidColoredTextField","InputProps","useTheme","hiddenLabel","type","InputLabelProps","style","palette","primary","backgroundColor","success","main","paddingTop","paddingBottom","flexWrap","light","dark","border","ArtifactEditor","lazy","allSubstatFilter","ArtifactCard","artifactId","artifactObj","onClick","onDelete","mainStatAssumptionLevel","effFilter","editor","canExclude","canEquip","extraButtons","databaseArtifact","useArtifact","sheet","ArtifactSheet","arts","set","editable","useState","showEditor","setshowEditor","onHideEditor","onShowEditor","wrapperFunc","flexGrow","flexDirection","falseWrapperFunc","art","currentEfficiency","maxEfficiency","currentEfficiency_","maxEfficiency_","Artifact","id","lock","slotKey","rarity","level","mainStatKey","substats","exclude","mainStatLevel","min","mainStatUnit","artifactValid","slotName","getSlotName","slotDesc","getSlotDesc","slotDescTooltip","ele","allElementsWithPhy","startsWith","mainIcon","minHeight","artifactIdToEdit","cancelEdit","condition","wrapper","falseWrapper","position","disabled","right","bottom","zIndex","pt","px","mb","noWrap","textAlign","borderRadius","cacheValueString","stars","colored","top","slotIcons","float","pb","stat","SubstatDisplay","my","probability","A","justifyContent","arrow","faEdit","faBan","faChartLine","faTrashAlt","numRolls","rolls","length","maxRoll","rollData","rollOffset","rollColor","efficiency","inFilter","has","effOpacity","clamp01","statName","unit","progresses","i","SmolProgress","indexOf","alignContent","minWidth","bgcolor","overflow","artifactSortKeys","initialFilterOption","artSetKeys","allArtifactRarities","levelLow","levelHigh","slotKeys","allSlotKeys","mainStatKeys","exclusion","locked","initialArtifactSortFilter","filterOption","ascending","sortType","artifactSortConfigs","effFilterSet","probabilityFilter","getValue","tieBreaker","artsetkey","mefficiency","prob","artifactFilterConfigs","filterKey","some","substat","allWeights","fWeight","hp","atk","def","hp_","atk_","def_","eleMas","enerRech_","critRate_","critDMG_","pFillerSeq","populatePFillerSeq","prefix","sumProb","current","layeredAssignment","cnr","fill","_","n","result","r","push","pNExtra","last","next","forEach","x","array","accu","reduce","artifact","_target","NaN","target","required","numFillerSlots","maxLevel","ArtifactMainStatsData","delete","numUpgradeRolls","entries","ceil","minTotalUpgrades","targetEntries","filler","minUpgrade","reverse","additionalUpgradeRolls","targetIndex","m","M","extra","pExtra","_remaining","remaining","pRolls","pow","index","mainStat","mainStatRatio","pFillerRolls","numUnusedSubstats","pSuffixFillerSeq","ratio","requiredCount","total","crawlObject","obj","path","currentCount","sum","calculatePFillerRolls","artifactID","get","setArtifact","useEffect","follow"],"sourceRoot":""}