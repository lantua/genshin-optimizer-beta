{"version":3,"file":"static/js/377.2fa88a18.chunk.js","mappings":"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","sources":["PageCharacter/index.tsx","../node_modules/@mui/icons-material/esm/FactCheck.js","../node_modules/@mui/icons-material/esm/FavoriteBorder.js","../node_modules/@mui/icons-material/esm/Science.js","../node_modules/@mui/icons-material/esm/TrendingUp.js"],"sourcesContent":["import { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { DeleteForever, FactCheck, Groups, Science, TrendingUp } from '@mui/icons-material';\r\nimport { Box, Button, CardContent, Divider, Grid, IconButton, Pagination, Skeleton, TextField, Typography } from '@mui/material';\r\nimport { ChangeEvent, Suspense, useCallback, useContext, useDeferredValue, useEffect, useMemo, useRef, useState } from 'react';\r\nimport ReactGA from 'react-ga4';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport BootstrapTooltip from '../Components/BootstrapTooltip';\r\nimport CardDark from '../Components/Card/CardDark';\r\nimport CharacterCard from '../Components/Character/CharacterCard';\r\nimport SortByButton from '../Components/SortByButton';\r\nimport ElementToggle from '../Components/ToggleButton/ElementToggle';\r\nimport WeaponToggle from '../Components/ToggleButton/WeaponToggle';\r\nimport CharacterSheet from '../Data/Characters/CharacterSheet';\r\nimport { DatabaseContext } from '../Database/Database';\r\nimport useCharSelectionCallback from '../ReactHooks/useCharSelectionCallback';\r\nimport useDBState from '../ReactHooks/useDBState';\r\nimport useForceUpdate from '../ReactHooks/useForceUpdate';\r\nimport useGender from '../ReactHooks/useGender';\r\nimport useMediaQueryUp from '../ReactHooks/useMediaQueryUp';\r\nimport usePromise from '../ReactHooks/usePromise';\r\nimport { CharacterKey } from '../Types/consts';\r\nimport { characterFilterConfigs, characterSortConfigs, characterSortKeys } from '../Util/CharacterSort';\r\nimport { filterFunction, sortFunction } from '../Util/SortByFilters';\r\nimport { clamp } from '../Util/Util';\r\nimport { initialCharacterDisplayState } from './CharacterDisplayState';\r\nimport { CharacterSelectionModal } from './CharacterSelectionModal';\r\n\r\nconst columns = { xs: 1, sm: 2, md: 3, lg: 4, xl: 4 }\r\nconst numToShowMap = { xs: 6 - 1, sm: 8 - 1, md: 12 - 1, lg: 16 - 1, xl: 16 - 1 }\r\n\r\nexport default function PageCharacter() {\r\n  const { t } = useTranslation([\"page_character\", \"charNames_gen\"])\r\n  const { database } = useContext(DatabaseContext)\r\n  const [state, stateDispatch] = useDBState(\"CharacterDisplay\", initialCharacterDisplayState)\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const deferredSearchTerm = useDeferredValue(searchTerm)\r\n  const invScrollRef = useRef<HTMLDivElement>(null)\r\n  const setPage = useCallback(\r\n    (_: ChangeEvent<unknown>, value: number) => {\r\n      invScrollRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n      stateDispatch({ pageIndex: value - 1 });\r\n    },\r\n    [stateDispatch, invScrollRef]\r\n  )\r\n\r\n  const brPt = useMediaQueryUp()\r\n  const maxNumToDisplay = numToShowMap[brPt]\r\n\r\n  const [newCharacter, setnewCharacter] = useState(false)\r\n  const [dbDirty, forceUpdate] = useForceUpdate()\r\n  // Set follow, should run only once\r\n  useEffect(() => {\r\n    ReactGA.send({ hitType: \"pageview\", page: '/characters' })\r\n    return database.chars.followAny((k, r) => (r === \"new\" || r === \"remove\") && forceUpdate())\r\n  }, [forceUpdate, database])\r\n\r\n  useEffect(() => {\r\n    // character favorite updater\r\n    return database.states.followAny(s => s.includes(\"charMeta_\") && forceUpdate())\r\n  }, [forceUpdate, database])\r\n\r\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\r\n  const gender = useGender(database)\r\n  const deleteCharacter = useCallback(async (cKey: CharacterKey) => {\r\n    const chararcterSheet = await CharacterSheet.get(cKey, gender)\r\n    let name = chararcterSheet?.name\r\n    // Use translated string\r\n    if (typeof name === \"object\")\r\n      name = t(`charNames_gen:${cKey}`)\r\n\r\n    if (!window.confirm(t(\"removeCharacter\", { value: name }))) return\r\n    database.chars.remove(cKey)\r\n  }, [database, gender, t])\r\n\r\n  const editCharacter = useCharSelectionCallback()\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const sortConfigs = useMemo(() => characterSheets && characterSortConfigs(database, characterSheets), [database, characterSheets])\r\n  const filterConfigs = useMemo(() => characterSheets && characterFilterConfigs(database, characterSheets), [database, characterSheets])\r\n  const deferredState = useDeferredValue(state)\r\n  const deferredDbDirty = useDeferredValue(dbDirty)\r\n  const { charKeyList, totalCharNum } = useMemo(() => {\r\n    const chars = database.chars.keys\r\n    const totalCharNum = chars.length\r\n    if (!sortConfigs || !filterConfigs) return { charKeyList: [], totalCharNum }\r\n    const { element, weaponType, sortType, ascending } = deferredState\r\n    const charKeyList = database.chars.keys\r\n      .filter(filterFunction({ element, weaponType, favorite: \"yes\", name: deferredSearchTerm }, filterConfigs))\r\n      .sort(sortFunction(sortType, ascending, sortConfigs))\r\n      .concat(\r\n        database.chars.keys\r\n          .filter(filterFunction({ element, weaponType, favorite: \"no\", name: deferredSearchTerm }, filterConfigs))\r\n          .sort(sortFunction(sortType, ascending, sortConfigs)))\r\n    return deferredDbDirty && { charKeyList, totalCharNum }\r\n  },\r\n    [deferredDbDirty, database, sortConfigs, filterConfigs, deferredState, deferredSearchTerm])\r\n\r\n  const { weaponType, element, sortType, ascending, pageIndex = 0 } = state\r\n\r\n  const { charKeyListToShow, numPages, currentPageIndex } = useMemo(() => {\r\n    const numPages = Math.ceil(charKeyList.length / maxNumToDisplay)\r\n    const currentPageIndex = clamp(pageIndex, 0, numPages - 1)\r\n    return { charKeyListToShow: charKeyList.slice(currentPageIndex * maxNumToDisplay, (currentPageIndex + 1) * maxNumToDisplay), numPages, currentPageIndex }\r\n  }, [charKeyList, pageIndex, maxNumToDisplay])\r\n\r\n  const totalShowing = charKeyList.length !== totalCharNum ? `${charKeyList.length}/${totalCharNum}` : `${totalCharNum}`\r\n\r\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n    <CardDark ref={invScrollRef} ><CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n      <Grid container spacing={1}>\r\n        <Grid item>\r\n          <WeaponToggle sx={{ height: \"100%\" }} onChange={weaponType => stateDispatch({ weaponType })} value={weaponType} size=\"small\" />\r\n        </Grid>\r\n        <Grid item>\r\n          <ElementToggle sx={{ height: \"100%\" }} onChange={element => stateDispatch({ element })} value={element} size=\"small\" />\r\n        </Grid>\r\n        <Grid item flexGrow={1}>\r\n          <TextField\r\n            autoFocus\r\n            value={searchTerm}\r\n            onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\r\n            label={t(\"characterName\")}\r\n            size=\"small\"\r\n            sx={{ height: \"100%\" }}\r\n            InputProps={{\r\n              sx: { height: \"100%\" }\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item >\r\n          <SortByButton sx={{ height: \"100%\" }}\r\n            sortKeys={characterSortKeys.slice(1)} value={sortType} onChange={sortType => stateDispatch({ sortType })}\r\n            ascending={ascending} onChangeAsc={ascending => stateDispatch({ ascending })} />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container alignItems=\"flex-end\">\r\n        <Grid item flexGrow={1}>\r\n          <Pagination count={numPages} page={currentPageIndex + 1} onChange={setPage} />\r\n        </Grid>\r\n        <Grid item>\r\n          <ShowingCharacter numShowing={charKeyListToShow.length} total={totalShowing} t={t} />\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent></CardDark>\r\n    <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 5000 }} />}>\r\n      <Grid container spacing={1} columns={columns}>\r\n        <Grid item xs={1} >\r\n          <CardDark sx={{ height: \"100%\", minHeight: 400, width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n            <CardContent>\r\n              <Typography sx={{ textAlign: \"center\" }}><Trans t={t} i18nKey=\"addNew\" /></Typography>\r\n            </CardContent>\r\n            <CharacterSelectionModal newFirst show={newCharacter} onHide={() => setnewCharacter(false)} onSelect={editCharacter} />\r\n            <Box sx={{\r\n              flexGrow: 1,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\"\r\n            }}\r\n            >\r\n              <Button onClick={() => setnewCharacter(true)} color=\"info\" sx={{ borderRadius: \"1em\" }}>\r\n                <Typography variant=\"h1\"><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></Typography>\r\n              </Button>\r\n            </Box>\r\n          </CardDark>\r\n        </Grid>\r\n        {charKeyListToShow.map(charKey =>\r\n          <Grid item key={charKey} xs={1} >\r\n            <CharacterCard\r\n              characterKey={charKey}\r\n              onClick={() => navigate(`${charKey}`)}\r\n              footer={<><Divider /><Box sx={{ py: 1, px: 2, display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\r\n                <BootstrapTooltip placement=\"top\" title={<Typography>{t(\"tabs.talent\")}</Typography>}>\r\n                  <IconButton onClick={() => navigate(`${charKey}/talent`)}>\r\n                    <FactCheck />\r\n                  </IconButton>\r\n                </BootstrapTooltip>\r\n                <BootstrapTooltip placement=\"top\" title={<Typography>{t(\"tabs.teambuffs\")}</Typography>}>\r\n                  <IconButton onClick={() => navigate(`${charKey}/teambuffs`)} >\r\n                    <Groups />\r\n                  </IconButton>\r\n                </BootstrapTooltip>\r\n                <BootstrapTooltip placement=\"top\" title={<Typography>{t(\"tabs.optimize\")}</Typography>}>\r\n                  <IconButton onClick={() => navigate(`${charKey}/optimize`)} >\r\n                    <TrendingUp />\r\n                  </IconButton>\r\n                </BootstrapTooltip>\r\n                <BootstrapTooltip placement=\"top\" title={<Typography>{t(\"tabs.theorycraft\")}</Typography>}>\r\n                  <IconButton onClick={() => navigate(`${charKey}/theorycraft`)} >\r\n                    <Science />\r\n                  </IconButton>\r\n                </BootstrapTooltip>\r\n                <Divider orientation=\"vertical\" />\r\n                <BootstrapTooltip placement=\"top\" title={<Typography>{t(\"delete\")}</Typography>}>\r\n                  <IconButton color=\"error\" onClick={() => deleteCharacter(charKey)}>\r\n                    <DeleteForever />\r\n                  </IconButton>\r\n                </BootstrapTooltip>\r\n              </Box></>}\r\n            />\r\n          </Grid>)}\r\n      </Grid>\r\n    </Suspense>\r\n    {numPages > 1 && <CardDark ><CardContent>\r\n      <Grid container alignItems=\"flex-end\">\r\n        <Grid item flexGrow={1}>\r\n          <Pagination count={numPages} page={currentPageIndex + 1} onChange={setPage} />\r\n        </Grid>\r\n        <Grid item>\r\n          <ShowingCharacter numShowing={charKeyListToShow.length} total={totalShowing} t={t} />\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent></CardDark>}\r\n  </Box>\r\n}\r\nfunction ShowingCharacter({ numShowing, total, t }) {\r\n  return <Typography color=\"text.secondary\">\r\n    <Trans t={t} i18nKey=\"showingNum\" count={numShowing} value={total} >\r\n      Showing <b>{{ count: numShowing }}</b> out of {{ value: total }} Characters\r\n    </Trans>\r\n  </Typography>\r\n}\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M20 3H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM10 17H5v-2h5v2zm0-4H5v-2h5v2zm0-4H5V7h5v2zm4.82 6L12 12.16l1.41-1.41 1.41 1.42L17.99 9l1.42 1.42L14.82 15z\"\n}), 'FactCheck');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\"\n}), 'FavoriteBorder');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.8 18.4 14 10.67V6.5l1.35-1.69c.26-.33.03-.81-.39-.81H9.04c-.42 0-.65.48-.39.81L10 6.5v4.17L4.2 18.4c-.49.66-.02 1.6.8 1.6h14c.82 0 1.29-.94.8-1.6z\"\n}), 'Science');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m16 6 2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z\"\n}), 'TrendingUp');"],"names":["columns","xs","sm","md","lg","xl","numToShowMap","PageCharacter","t","useTranslation","database","useContext","DatabaseContext","useDBState","initialCharacterDisplayState","state","stateDispatch","useState","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","invScrollRef","useRef","setPage","useCallback","_","value","current","scrollIntoView","behavior","pageIndex","brPt","useMediaQueryUp","maxNumToDisplay","newCharacter","setnewCharacter","useForceUpdate","dbDirty","forceUpdate","useEffect","ReactGA","hitType","page","chars","followAny","k","r","states","s","includes","characterSheets","usePromise","CharacterSheet","gender","useGender","deleteCharacter","cKey","chararcterSheet","name","window","confirm","remove","editCharacter","useCharSelectionCallback","navigate","useNavigate","sortConfigs","useMemo","characterSortConfigs","filterConfigs","characterFilterConfigs","deferredState","deferredDbDirty","totalCharNum","keys","length","charKeyList","element","weaponType","sortType","ascending","filter","filterFunction","favorite","sort","sortFunction","concat","numPages","Math","ceil","currentPageIndex","clamp","charKeyListToShow","slice","totalShowing","my","display","flexDirection","gap","ref","sx","container","spacing","item","height","onChange","size","flexGrow","autoFocus","e","target","label","InputProps","sortKeys","characterSortKeys","onChangeAsc","alignItems","count","ShowingCharacter","numShowing","total","Suspense","fallback","variant","width","minHeight","textAlign","i18nKey","newFirst","show","onHide","onSelect","justifyContent","onClick","color","borderRadius","icon","faPlus","className","map","charKey","characterKey","footer","py","px","placement","title","orientation","createSvgIcon","_jsx","fillRule","d"],"sourceRoot":""}