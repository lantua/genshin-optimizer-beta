{"version":3,"file":"static/js/11.33f8c154.chunk.js","mappings":"4OAMe,SAASA,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAC7BC,GAAMC,EAAAA,EAAAA,GAAe,MAArBD,EACFE,GAAiBC,EAAAA,EAAAA,GAAWC,EAAAA,GAAAA,IAAA,OAAmBL,QAAnB,IAAmBA,EAAAA,EAAY,IAAK,CAACA,IACvE,OAAO,SAAC,IAAD,CAAYM,UAAU,OAAtB,SACU,OAAdH,QAAc,IAAdA,GAAAA,EAAgBI,KAAOJ,EAAeK,cAAe,6BAAM,SAAC,IAAD,CAAgBC,GAAI,CAAEC,cAAe,iBAA3C,IAAgET,EAAhE,sC,8RCY3C,SAASU,EAAT,GAA2I,IAA3GC,EAA0G,EAA1GA,KAAMC,EAAoG,EAApGA,OAAQC,EAA4F,EAA5FA,SAA4F,IAAlFC,OAAAA,OAAkF,MAAzE,kBAAM,GAAmE,EAA/CC,EAA+C,EAA7DC,aACpFC,GAAed,EAAAA,EAAAA,GAAWe,EAAAA,GAAAA,OAAoB,IACpD,GAAwCC,EAAAA,EAAAA,UAAQ,OAAqBJ,QAArB,IAAqBA,EAAAA,EAAoB,IAAzF,eAAOC,EAAP,KAAqBI,EAArB,MAEAC,EAAAA,EAAAA,YAAU,kBAAMN,GAAoBK,EAAgBL,KAAmB,CAACA,IAExE,IAAMO,EAAgBL,GAAoB,OAAI,IAAIM,IAAIC,EAAAA,KAAgBV,QAAO,SAAAW,GAAI,OAAIX,EAAOG,EAAaQ,OACtGX,QAAO,SAAAW,GAAS,IAAD,EACd,OAAIT,GAAgBA,KAAY,OAAKC,QAAL,IAAKA,GAAL,UAAKA,EAAeQ,UAApB,aAAK,EAAsBC,eAG5DC,MAAK,SAACC,EAAGC,GAAJ,mBAAU,iBAACZ,QAAD,IAACA,GAAD,UAACA,EAAeY,UAAhB,aAAC,EAAmBC,cAApB,QAA8B,IAA9B,iBAAoCb,QAApC,IAAoCA,GAApC,UAAoCA,EAAeW,UAAnD,aAAoC,EAAmBE,cAAvD,QAAiE,MAL9C,GAOrC,OAAKb,GAEE,SAAC,IAAD,CAAcc,KAAMpB,EAAMqB,QAASpB,EAAnC,UACL,UAAC,IAAD,YACE,SAAC,IAAD,CAAaJ,GAAI,CAAEyB,GAAI,GAAvB,UACE,UAAC,KAAD,CAAMC,WAAS,EAAf,WACE,SAAC,KAAD,CAAMC,MAAI,EAACC,SAAU,EAArB,UACE,SAAC,IAAD,CAAcC,MAAOrB,EAAcsB,SAAUlB,EAAiBmB,WAAYxB,EAAkByB,KAAK,aAEnG,SAAC,KAAD,CAAML,MAAI,EAAV,UACE,SAAC,IAAD,CAAaM,QAAS7B,YAI5B,SAAC,IAAD,KACA,SAAC,IAAD,WAAa,SAAC,KAAD,CAAMsB,WAAS,EAACQ,QAAS,EAAzB,SACVpB,EAAaqB,KAAI,SAAAC,GAAc,IAAD,EACvBC,EAAc5B,EAAa2B,GACjC,OAAO,SAAC,KAAD,CAAMT,MAAI,EAAiBW,GAAI,EAAGC,GAAI,EAAtC,UACL,SAAC,IAAD,CAAWvC,GAAI,CAAEwC,OAAQ,QAAzB,UACE,UAAC,IAAD,CAAgBP,QAAS,WAAQ7B,IAAUC,EAAS+B,IAAcpC,GAAI,CAAEyC,QAAS,QAAjF,WACE,SAAC,IAAD,CAAK5C,UAAU,MAAM6C,IAAKL,EAAYM,IAAK3C,GAAI,CAAE4C,MAAO,IAAKJ,OAAQ,QAAUK,UAAS,gBAAWR,EAAYf,OAAvB,WACxF,UAAC,IAAD,CAAKtB,GAAI,CAAE4B,SAAU,EAAGkB,GAAI,GAA5B,WACE,SAAC,IAAD,CAAYC,QAAQ,YAApB,SAAiCV,EAAYvC,QAC7C,UAAC,IAAD,YAAY,SAAC,IAAD,CAAS4C,IAAG,UAAEM,EAAAA,EAAAA,mBAAF,aAAE,EAAqBX,EAAYnB,cAA3D,KAA2E,SAAC,IAAD,CAAO+B,MAAOZ,EAAYf,OAAQ4B,SAAO,gBANrGd,WAa3B,SAAC,IAAD,KACA,SAAC,IAAD,CAAapC,GAAI,CAAEyB,GAAI,GAAvB,UACE,SAAC,IAAD,CAAa0B,OAAK,EAAClB,QAAS7B,WAjCR,O,0JChCPgD,EAAAA,EAAAA,IAEnB,aACE,IADa,eACTC,gBAAgBD,EAClB,MAAME,MAAM,6CAETC,UAAY,SAACC,EAASC,GAAV,OAAoC,yBCGlD,IAAMC,EAAK,SAACC,GAAD,OAAoB,SAACC,EAAA,EAAD,CAAWC,GAAG,QAAQC,MAAOH,KAItDI,EAAM,SAACJ,GAAD,OAAoB,SAACC,EAAA,EAAD,CAAWC,GAAG,YAAYC,MAAOH,M,oeCkBlEK,EAAmB,IAAIjD,IAAIkD,EAAAA,GAElB,SAASC,EAAT,GAA8K,IAAD,QAArJC,EAAqJ,EAArJA,WAAYC,EAAyI,EAAzIA,YAAaC,EAA4H,EAA5HA,OAAQC,EAAoH,EAApHA,SAAoH,IAA1GC,wBAAAA,OAA0G,MAAhF,EAAgF,MAA7EC,UAAAA,OAA6E,MAAjER,EAAiE,EAA/CS,GAA+C,EAA/CA,kBACnIjF,IAAMC,EAAAA,EAAAA,GAAe,CAAC,aAAtBD,EACFkF,IAAWC,EAAAA,EAAAA,YAAWC,EAAAA,IACtBC,GCpCO,WAA2D,IAAtCC,EAAqC,uDAAJ,GAC7DJ,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,IAC5B,GAAgCjE,EAAAA,EAAAA,UAAS+D,EAASK,QAAQD,IAA1D,eAAOE,EAAP,KAAiBC,EAAjB,KAKA,OAJApE,EAAAA,EAAAA,YAAU,kBAAMoE,EAAYP,EAASK,QAAQD,MAAc,CAACJ,EAAUI,KACtEjE,EAAAA,EAAAA,YAAU,kBACRiE,EAAaJ,EAASQ,UAAUJ,EAAYG,QAAeE,IAC3D,CAACL,EAAYG,EAAaP,IACrBM,ED6BkBI,CAAYjB,GAC/BkB,IAAQ1F,EAAAA,EAAAA,GAAW2F,EAAAA,EAAAA,IAAA,iBAAmBlB,QAAnB,IAAmBA,EAAAA,EAAeS,UAAlC,aAAkB,EAAmCU,QAAS,CAACnB,EAAaS,KAG/FW,IAAYpB,GAAeM,KAAae,EAAAA,GACxCC,GAAG,OAAGtB,QAAH,IAAGA,EAAAA,EAAeS,GAC3B,IAAKa,GAAK,OAAO,KAEjB,IAAQC,GAAoFD,GAApFC,GAAIC,GAAgFF,GAAhFE,KAAMC,GAA0EH,GAA1EG,QAASvE,GAAiEoE,GAAjEpE,OAAQwE,GAAyDJ,GAAzDI,MAAOC,GAAkDL,GAAlDK,YAAaC,GAAqCN,GAArCM,SAAUC,GAA2BP,GAA3BO,QAAjE,GAA4FP,GAAlBnG,SAAAA,QAA1E,OAAqF,GAArF,GACM2G,GAAgBC,KAAKC,IAAID,KAAKE,IAAI9B,EAAkC,EAATjD,IAAawE,IACxEQ,GAAe,QAAUH,KAAKI,MAAMJ,KAAKC,IAAIN,GAAO,GAAK,GAAK,GAC9DU,IAAc,SAAC,IAAD,CAAWC,MAAOP,KAAkBJ,GAAQ,eAAYX,EAAxD,UAAoEuB,EAAAA,EAAAA,IAAgB,UAACC,EAAAA,EAAAA,cAAuBZ,GAAazE,GAAQ4E,WAA7C,QAA+D,EAAGU,EAAAA,GAAAA,KAAYb,OACtL,GAA6CY,EAAAA,EAAAA,sBAA+BjB,GAAKlB,GAAzEqC,GAAR,GAAQA,kBAAmBC,GAA3B,GAA2BA,cACrBC,GAAkC,IAAlBD,GAChBE,IAAgB,OAAL3B,SAAK,IAALA,QAAA,EAAAA,GAAO4B,YAAYpB,MAAY,qBAC1CqB,GAAQ,OAAG7B,SAAH,IAAGA,QAAH,EAAGA,GAAO8B,YAAYtB,IAC9BuB,GAAkBF,KAAY,SAACG,EAAA,EAAD,CAAkBC,UAAU,MAAMC,OAAO,SAACC,EAAA,EAAD,UAAaN,KAAtD,UAClC,2BAAM,SAAC,IAAD,CAAiBO,KAAMC,EAAAA,UAEzBC,GAAU,OAAGtC,SAAH,IAAGA,QAAH,EAAGA,GAAOsC,WACpBC,GAAiBvC,IAASsC,KAAc,SAACN,EAAA,EAAD,CAAkBC,UAAU,MAAMC,OAC9E,0BACGM,OAAOC,KAAKH,IAAYxF,KAAI,SAAA4F,GAAS,OAAI,6BACxC,SAACP,EAAA,EAAD,CAAYzE,QAAQ,KAApB,UAAyB,SAACiF,EAAA,EAAD,CAASvB,MAAM,UAAf,SAA0BjH,GAAE,eAAgB,CAAEyI,OAAQF,SAC/E,SAACP,EAAA,EAAD,UAAanC,GAAM6C,cAAcH,OAFkBA,QAFX,UAQ5C,2BAAM,SAAC,IAAD,CAAiBN,KAAMC,EAAAA,UAG/B,OAAO,SAAC,EAAAS,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,CAAUtF,QAAQ,cAAc/C,GAAI,CAAE4C,MAAO,OAAQJ,OAAQ,OAAQ8F,UAAW,OAApG,UACL,UAACC,EAAA,EAAD,CAAWvI,GAAI,CAAEwC,OAAQ,OAAQC,QAAS,OAAQ+F,cAAe,UAAjE,WACE,UAACC,EAAA,EAAD,CAAa5F,UAAS,eAAUvB,GAAV,QAAwBtB,GAAI,CAAE0I,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAtE,WACE,UAACC,EAAA,EAAD,CAAKhJ,UAAU,MAAMG,GAAI,CAAEyC,QAAS,OAAQqG,WAAY,SAAUF,GAAI,GAAtE,WACE,SAACG,EAAA,EAAD,CAAM/G,KAAK,QAAQgH,OAAO,wCAAclD,MAAmBW,MAAOH,MAClE,UAACkB,EAAA,EAAD,CAAYxH,GAAI,CAAEiJ,GAAI,EAAGrH,SAAU,GAAnC,UAAyCoF,GAAzC,IAAoDI,OACpD,SAAC8B,EAAA,EAAD,CAAYzC,MAAM,UAAU1E,UAAWyD,GAAUvD,QAAS,kBAAMyC,GAASyE,UAAU,CAAEvD,MAAOA,IAAQD,KAApG,SACGC,IAAO,SAACwD,EAAA,EAAD,KAAW,SAACC,EAAA,EAAD,UAGvB,UAACC,EAAA,GAAD,CAAM5H,WAAS,EAAC1B,GAAI,CAAEuJ,SAAU,UAAhC,WACE,UAACD,EAAA,GAAD,CAAM3H,MAAI,EAACC,SAAU,EAArB,WACE,SAAC4F,EAAA,EAAD,CAAYf,MAAM,iBAAiB1D,QAAQ,QAA3C,UACE,SAAC,KAAD,CAAkB8C,QAASA,QAE7B,SAAC2B,EAAA,EAAD,CAAYzE,QAAQ,KAApB,SACG6D,EAAAA,GAAAA,IAAWb,OAEd,SAACyB,EAAA,EAAD,CAAYzE,QAAQ,KAApB,UACE,4BAASyD,QAEX,SAAC,IAAD,CAAOvD,MAAO3B,GAAQ4B,SAAO,QAG/B,SAACoG,EAAA,GAAD,CAAM3H,MAAI,EAAC6H,SAAS,MAAMxJ,GAAI,CAAEyJ,IAAK,EAAGC,IAAK,EAAGT,IAAK,GAAKU,UAAU,WAApE,UACE,SAACC,EAAA,EAAD,CACE/J,UAAU,MACVgK,MAAK,iBAAExE,SAAF,IAAEA,QAAF,EAAEA,GAAOyE,UAAUjE,WAAnB,QAA+B,GACpCjD,MAAM,OACNJ,OAAO,kBAKf,UAACiG,EAAA,EAAD,CAAazI,GAAI,CAAE4B,SAAU,EAAGa,QAAS,OAAQ+F,cAAe,SAAUE,GAAI,EAAGC,GAAI,GAArF,UACG3C,GAAS7D,KAAI,SAAC4H,EAAsBC,GAAO,IAAD,MACzC,IAAKD,EAAKlI,MAAO,OAAO,KACxB,IAAMoI,EAAQ,oBAAGF,EAAKG,aAAR,aAAG,EAAYC,cAAf,QAAyB,EACjCC,EAAS,eAAUC,EAAAA,EAAAA,IAAMJ,EAAU,EAAG,IACtCK,EAAU,UAAGP,EAAKO,kBAAR,QAAsB,EAChCC,GAAaC,EAAAA,EAAAA,IAAQ,GAAOF,EAAU,IAAgB,IACtDG,EAAW7D,EAAAA,GAAAA,IAAWmD,EAAKW,KACjC,OAAQ,UAAC7B,EAAA,EAAD,CAAa7I,GAAI,CAAEyC,QAAS,QAA5B,WACN,UAACoG,EAAA,EAAD,CAAK7I,GAAI,CAAE4B,SAAU,GAArB,WACE,SAACoG,EAAA,EAAD,CAASvB,MAAQwD,EAAWG,EAAY,QAAiBpK,GAAI,CAAE2K,GAAI,GAAnE,UAAwE,4BAASV,GAAsB,SACvG,UAACzC,EAAA,EAAD,CAAYf,MAAQwD,EAAQ,UAAMG,EAAN,SAAyB,aAAsBvK,UAAU,OAArF,UAA6F4K,EAA7F,YAA2G/D,EAAAA,EAAAA,IAAiBqD,EAAKlI,MAAO+E,EAAAA,GAAAA,KAAYmD,EAAKW,cAE3J,SAAClD,EAAA,EAAD,CAAYxH,GAAI,CAAE4K,QAASL,GAA3B,SAA0CR,EAAKW,KAAOlG,EAAUqG,IAAId,EAAKW,KAA/B,UAAyCJ,EAAWQ,UAApD,KAAmE,QAL7Fd,OAQpB,UAACnB,EAAA,EAAD,CAAK7I,GAAI,CAAEyC,QAAS,OAAQsI,GAAI,GAAhC,WACE,SAACvD,EAAA,EAAD,CAAYf,MAAM,iBAAiB5G,UAAU,OAAOkD,QAAQ,UAAU/C,GAAI,CAAE4B,SAAU,GAAtF,SAA4FpC,GAA5F,yCACA,SAACwL,EAAA,EAAD,CAAcnJ,MAAOgF,GAAmBT,IAAK,IAAK6E,MAAOlE,QAE1DF,KAAsBC,KAAiB,UAAC+B,EAAA,EAAD,CAAK7I,GAAI,CAAEyC,QAAS,OAAQiH,GAAI,GAAhC,WACtC,SAAClC,EAAA,EAAD,CAAYf,MAAM,iBAAiB5G,UAAU,OAAOkD,QAAQ,UAAU/C,GAAI,CAAE4B,SAAU,GAAtF,SAA4FpC,GAA5F,yCACA,SAACwL,EAAA,EAAD,CAAcnJ,MAAOiF,GAAeV,IAAK,IAAK6E,MAAOlE,SAEvD,SAAC8B,EAAA,EAAD,CAAKjH,SAAU,IACd6C,KAAqB,+CAA6D,KAAtCyG,EAAAA,EAAAA,GAAYxF,GAAKjB,KAA0BqG,QAAQ,GAA1E,QACtB,UAACtD,EAAA,EAAD,CAAYf,MAAM,eAAlB,2BAAkCpB,SAAlC,IAAkCA,QAAlC,EAAkCA,GAAOvF,YAAzC,QAAiD,eAAjD,IAAkE8H,UAEpE,SAACuD,EAAA,EAAD,WACE,UAAC7B,EAAA,GAAD,CAAM5H,WAAS,EAAC1B,GAAI,CAAEuJ,SAAU,UAAhC,WACE,SAACD,EAAA,GAAD,CAAM3H,MAAI,EAACyJ,GAAG,OAAOC,WAAY,EAAjC,SACG7F,IACC,SAAC8F,EAAA,EAAD,CAAyBtJ,KAAK,QAAQuJ,WAAS,EAAC1J,MAAOtC,GAAUuC,SA/FzD,SAAC0J,GAAD,OAAgC9G,GAAS+G,eAAetH,EAAaqH,OA+FgB,SAAClM,EAAA,EAAD,CAAcC,SAAUA,QAEzH,SAAC+J,EAAA,GAAD,CAAM3H,MAAI,EAACC,SAAU,EAAG5B,GAAI,CAAE2K,GAAI,KACjCnF,KAAY,SAAC8D,EAAA,GAAD,CAAM3H,MAAI,EAACyJ,GAAG,OAAd,UACX,UAACM,EAAA,EAAD,CAAa1L,GAAI,CAAEwC,OAAQ,QAA3B,YACK6B,IAAU,SAACsH,EAAA,EAAD,CAAQlF,MAAM,OAAOxE,QAAS,kBAAMoC,EAAOsB,KAAK3D,KAAK,QAArD,UACX,SAAC,IAAD,CAAiByF,KAAMmE,EAAAA,IAAQ/I,UAAU,aAE3C,SAACgJ,EAAA,EAAD,CAAStE,OAAO,SAACC,EAAA,EAAD,UAAahI,GAAb,0CAAkD8H,UAAU,MAAMwE,OAAK,EAAvF,UACE,SAACH,EAAA,EAAD,CAAQ1J,QAAS,kBAAMyC,GAASyE,UAAU,CAAElD,SAAUA,IAAWN,KAAKc,MAAOR,GAAU,QAAU,UAAWjE,KAAK,QAAjH,UACE,SAAC,IAAD,CAAiByF,KAAMxB,GAAU8F,EAAAA,IAAQC,EAAAA,IAAanJ,UAAU,gBAGjEyB,IAAY,SAACqH,EAAA,EAAD,CAAQlF,MAAM,QAAQzE,KAAK,QAAQC,QAAS,kBAAMqC,EAASqB,KAAK5D,SAAU6D,GAA1E,UACb,SAAC,IAAD,CAAiB6B,KAAMwE,EAAAA,IAAYpJ,UAAU,6B,sGEnJ9C,SAASmI,EAAT,GAIX,IAJmCnJ,EAIpC,EAJoCA,MAIpC,IAJ2CuE,IAAAA,OAI3C,MAJiD,EAIjD,EAJoD6E,EAIpD,EAJoDA,MAKrD,EAA0C,kBAAVpJ,EAC9B,CAAC,OAAD,QAAQwI,EAAAA,EAAAA,IAAMlE,KAAKI,MAAO1E,EAAQuE,EAAO,IAAM,EAAG,EAAG,IAAMvE,EAAMiJ,QAAQ,GAAK,KAAO,CAAC,YAAajJ,GADrG,eAAKqK,EAAL,KAAiBC,EAAjB,KAGA,OADKlB,IAAOiB,EAAa,UAClB,SAAC,IAAD,CAASzF,MAAOyF,EAAhB,SAA8BC,M,2eCIxB,SAASC,IACtB,OAAgCzL,EAAAA,EAAAA,WAAS,GAAzC,eAAO0L,EAAP,KAAiBC,EAAjB,KACMC,GAASC,EAAAA,EAAAA,cAAY,kBAAMF,GAAaD,KAAW,CAACC,EAAaD,IACvE,OAAO,UAAC9D,EAAA,EAAD,YACL,SAACE,EAAA,EAAD,WACE,UAACa,EAAA,GAAD,CAAM5H,WAAS,EAAf,WACE,UAAC4H,EAAA,GAAD,CAAM3H,MAAI,EAACC,SAAU,EAArB,WACE,UAAC4F,EAAA,EAAD,uBAAsB,IAAtB,oBACA,SAACA,EAAA,EAAD,CAAYzE,QAAQ,UAAU0D,MAAM,iBAApC,yEAEF,SAAC6C,EAAA,GAAD,CAAM3H,MAAI,EAAV,UACE,SAAC8K,EAAA,EAAD,CACEC,OAAQL,EACRpK,QAASsK,EACT,gBAAeF,EACf,aAAW,YAJb,UAME,SAACM,EAAA,EAAD,cAKR,SAACC,EAAA,EAAD,CAAUC,GAAIR,EAAUS,QAAQ,OAAOC,eAAa,EAApD,UACE,SAACtE,EAAA,EAAD,CAAazI,GAAI,CAAE0I,GAAI,GAAvB,UACE,SAACsE,EAAD,WAMR,SAASA,IACP,IAAQC,GAAStI,EAAAA,EAAAA,YAAWuI,EAAAA,GAApBD,KACFE,GAAWC,EAAAA,EAAAA,GAAmBH,GACpC,OAAO,SAAC,EAAA9E,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,CAAUtF,QAAQ,cAAcH,MAAM,OAAOJ,OAAQ,MAAzE,UACL,SAACqG,EAAA,EAAD,CAAK7I,GAAI,CAAE2K,IAAK,EAAGjB,IAAK,GAAxB,SACGyD,EAAShL,KAAI,+BAAEuI,EAAF,KAAO2C,EAAP,YACZ,SAACC,EAAD,CAAuBC,UAAWF,EAAOG,WAAY9C,GAAnCA,UAI1B,SAAS4C,EAAT,GAA6G,IAAtFE,EAAqF,EAArFA,WAAYD,EAAyE,EAAzEA,UACzBN,GAAStI,EAAAA,EAAAA,YAAWuI,EAAAA,GAApBD,KACFQ,GAAS9N,EAAAA,EAAAA,IAAW+N,EAAAA,EAAAA,GAAiBT,EAAMO,GAAa,CAACP,EAAMO,IACrE,IAAKC,EAAQ,OAAO,KACpB,IAAQlG,EAAwBkG,EAAxBlG,MAAOE,EAAiBgG,EAAjBhG,KAAMkG,EAAWF,EAAXE,OACrB,OAAO,UAACC,EAAA,EAAD,CAAU5N,GAAI,CAAE0J,GAAI,GAApB,WACL,SAACmE,EAAA,EAAD,CAAYC,OAAQrG,IAAQ,SAACsG,EAAA,EAAD,CAAS/L,KAAM,EAAGhC,GAAI,CAAEgO,GAAI,GAAKtL,IAAK+E,IAAUF,MAAOA,EAAOoG,OAAQA,EAAQM,qBAAsB,CAAElL,QAAS,gBAC3I,SAACmL,EAAA,EAAD,KACA,SAACzF,EAAA,EAAD,UACGZ,OAAOsG,QAAQZ,GAAWpL,KAAI,iCAAEuI,EAAF,KAAO0D,EAAP,YAC5BA,EAAKC,UAAW,UAACC,EAAA,EAAD,CAAWtO,GAAI,CAAEuO,QAAS,qBAA1B,WACf,SAACC,EAAA,EAAD,CAAkBC,YAAY,SAAC9B,EAAA,EAAD,IAA9B,UACE,UAACnF,EAAA,EAAD,YAAY,SAAC,IAAD,CAAWf,MAAO2H,EAAKrL,QAAvB,SAAiC6D,EAAAA,GAAAA,IAAA,UAAWwH,EAAK1D,WAAhB,QAAuB,MAApE,KAAqF,6BAASgE,EAAAA,EAAAA,IAAYN,EAAKvM,MAAOuM,EAAKO,cAE7H,SAACC,EAAA,EAAD,UACGR,EAAKS,SAAS1M,KAAI,SAAC2M,EAAS9E,GAAV,OAAgB,SAACxC,EAAA,EAAD,UAAqBsH,GAAJ9E,UALeU,W,qMCmB/E,OAnEA,YAA8E,IAAD,IAA5CqE,SAAAA,OAA4C,SAC3E,GAAqDpK,EAAAA,EAAAA,YAAWuI,EAAAA,GAAxDD,EAAR,EAAQA,KAAM+B,EAAd,EAAcA,UAAWzK,EAAzB,EAAyBA,wBAEnBG,GAAWC,EAAAA,EAAAA,YAAWC,GAAAA,IACtBqK,GAAUC,EAAAA,EAAAA,MACVC,GAAO3C,EAAAA,EAAAA,cACX,SAAA4C,GAAK,OAAIH,EAAQI,KAAK,CACpBC,SAAU,YACVC,YAAaH,MACJ,CAACH,IACRO,GAAiB7P,EAAAA,EAAAA,GAAW2F,GAAAA,EAAAA,OAAsB,IAGxD,GAAsBmK,EAAAA,GAAAA,KAAbtG,GAAT,gBACAtI,EAAAA,EAAAA,YAAU,kBAAM6D,EAASgL,aAAavG,MAEtC,IAAMwG,GAAYnD,EAAAA,EAAAA,cAAY,WAC5B,GAAKoD,OAAOC,QAAQ,+DAApB,CACA,IAAMd,EAAWlH,OAAOiI,YAAYC,GAAAA,GAAAA,KAAgB,SAAAC,GAAC,MAAI,CAACA,EAAG/C,EAAKgD,IAAIC,GAAAA,GAAAA,IAAUF,GAAGrK,IAAI9D,WACvF6C,EAASyL,eAAenB,EAAUtE,IAAKqE,MACtC,CAACC,EAAW/B,EAAMvI,IAEf0L,GAAc5D,EAAAA,EAAAA,cAAY,WACzBwC,GACAY,OAAOC,QAAQ,uEACpBnL,EAASyL,eAAenB,EAAUtE,KAAK2F,EAAAA,EAAAA,GAAaN,GAAAA,IAAa,SAAAO,GAAC,MAAI,SACrE,CAACtB,EAAWtK,IACT6L,EAASR,GAAAA,GAAAA,KAAgB,SAAAlK,GAAO,OAAIoH,EAAKgD,IAAIC,GAAAA,GAAAA,IAAUrK,GAASF,IAAI9D,SACpE8F,GAAa6I,EAAAA,EAAAA,UAAQ,kBAAMhB,GAAkBlK,GAAAA,EAAAA,WAAyBkK,EAAgBvC,KAAO,CAACuC,EAAgBvC,IACpH,OAAO,iCACL,UAAC1E,EAAA,EAAD,CAAWvI,GAAI,CAAE0J,GAAI,GAArB,WACE,SAACjB,EAAA,EAAD,WACE,SAACgI,GAAA,EAAD,OAEF,SAACvC,EAAA,EAAD,KACA,SAACzF,EAAA,EAAD,CAAazI,GAAI,CAAEyB,GAAI,GAAvB,UACE,UAAC6H,EAAA,GAAD,CAAM5H,WAAS,EAACQ,QAAS,EAAzB,WACE,SAACoH,EAAA,GAAD,CAAM3H,MAAI,EAAV,SACGoN,GAAW,SAACpD,EAAA,EAAD,CAAQ1J,QAAS0N,EAAW9M,UAAU,OAAtC,6BAAyE6B,IAAae,GAAAA,KAAiB,SAACkG,EAAA,EAAD,CAAQlF,MAAM,QAAQxE,QAASmO,EAA/B,sCAErH,SAAC9G,EAAA,GAAD,CAAM3H,MAAI,EAACC,SAAU,KACrB,SAAC0H,EAAA,GAAD,CAAM3H,MAAI,EAAV,WAAc4C,IAA2B,SAACmM,EAAA,EAAD,CAAM1Q,GAAI,CAAE2Q,EAAG,EAAGpC,QAAS,SAAA/O,GAAC,OAAIA,EAAEoR,QAAQC,QAAQC,OAAlD,UAA0D,SAACtJ,EAAA,EAAD,WAAY,6DAAqCjD,oBAI1J,UAAC+E,EAAA,GAAD,CAAM5H,WAAS,EAACQ,QAAS,EAAzB,WACE,SAACoH,EAAA,GAAD,CAAM3H,MAAI,EAACyJ,GAAI,GAAI2F,GAAI,EAAGxO,GAAI,EAAGE,QAAQ,OAAO+F,cAAc,SAASwI,IAAK,EAA5E,SACGxB,GAAkB7H,GAAcE,OAAOsG,QAAQxG,GAAYxF,KAAI,+BAAEoD,EAAF,KAAU0L,EAAV,YAC9D,UAAC1I,EAAA,EAAD,CAAwBvI,GAAI,CAAE4B,SAAU,GAAxC,WACE,SAACiM,EAAA,EAAD,CAAYC,QAAQ,SAACC,EAAA,EAAD,CAAS/L,KAAM,EAAGhC,GAAI,CAAEgO,GAAI,GAAKtL,IAAK8M,EAAejK,GAAQ2L,aAAgB3J,MAAOiI,EAAejK,GAAQzF,KAAMmO,qBAAsB,CAAElL,QAAS,gBACtK,SAACmL,EAAA,EAAD,KACA,SAACzF,EAAA,EAAD,WACE,SAACa,EAAA,GAAD,CAAM5H,WAAS,EAACQ,QAAS,EAAGsG,cAAc,SAAShG,OAAO,OAA1D,UACE,SAAC8G,EAAA,GAAD,CAAM3H,MAAI,EAACc,QAAQ,OAAO+F,cAAc,SAASwI,IAAK,EAAtD,SACGC,EAAa9O,KAAI,SAAA4F,GAAS,OAAI,SAACoJ,GAAA,EAAD,CAA2C5L,OAAQA,EAAQwC,UAAWA,GAA/CxC,EAASwC,cANvDxC,QAanBgL,EAAOpO,KAAI,SAAAwD,GAAE,QAAMA,IAAM,SAAC2D,EAAA,GAAD,CAAM3H,MAAI,EAACyJ,GAAI,EAAG7I,GAAI,EAAtB,UACxB,SAAC2B,GAAA,EAAD,CAAcC,WAAYwB,EAAIpB,wBAAyBA,EAAyBF,OAAQ,kBAAM8K,EAAKxJ,OAD7CA,a,oNC1D/C,SAASyL,KACtB,OAAO,UAAC,KAAD,CAAK3O,QAAQ,OAAO+F,cAAc,SAASwI,IAAK,EAAGlI,WAAW,UAA9D,WACL,SAACuI,GAAD,KAEA,SAAC/H,EAAA,GAAD,CAAM5H,WAAS,EAACQ,QAAS,EAAzB,UACGoP,EAAAA,EAAAA,IAAM,EAAG,GAAGnP,KAAI,SAAA6H,GAAC,OAAI,SAACV,EAAA,GAAD,CAAM3H,MAAI,EAACyJ,GAAI,GAAI7I,GAAI,EAAGD,GAAI,EAA9B,UACpB,SAACiP,GAAD,CAAiBC,MAAOxH,KADkCA,WAMlE,IAAMyH,GAAiB,CACrBrG,GAAI,GAAI2F,GAAI,EAAGxO,GAAI,EAAGD,GAAI,GAErB,SAAS+O,KAAmB,IAAD,MAChC,GAA0B1M,EAAAA,EAAAA,YAAWuI,EAAAA,GAA7BD,EAAR,EAAQA,KAAMyE,EAAd,EAAcA,QACRC,EAAY1E,EAAK2E,cACjBC,EAAgD,GAItD,OAHAhK,OAAOsG,QAAP,UAAewD,EAAUG,aAAzB,QAAkC,IAAIC,SAAQ,+BAAErH,EAAF,KAAO0D,EAAP,YAAiByD,EAAMxC,KAAK,CAAC,CAAC,QAAS3E,GAAM0D,OAC3FvG,OAAOsG,QAAP,UAAewD,EAAUK,cAAzB,QAAmC,IAAID,SAAQ,+BAAErH,EAAF,KAAO0D,EAAP,YAAiByD,EAAMxC,KAAK,CAAC,CAAC,SAAU3E,GAAM0D,OAC7FvG,OAAOsG,QAAP,UAAewD,EAAUM,aAAzB,QAAkC,IAAIF,SAAQ,+BAAErH,EAAF,KAAO0D,EAAP,YAAiByD,EAAMxC,KAAK,CAAC,CAAC,QAAS3E,GAAM0D,OACtFyD,EAAM1H,QACJ,UAAC5B,EAAA,EAAD,YACL,SAACE,EAAA,EAAD,0BAGA,SAACyF,EAAA,EAAD,KACA,SAACzF,EAAA,EAAD,WACE,SAACa,EAAA,GAAD,CAAM5H,WAAS,EAACwQ,cAAe,EAAGC,WAAY,EAA9C,SACGN,EAAM1P,KAAI,WAAY6H,GAAZ,qBAAEoI,EAAF,KAAQC,EAAR,YAAkBA,IAAMA,EAAEhE,UAAW,mBAAC/E,EAAA,IAAD,gBAAM3H,MAAI,GAAK8P,IAAf,IAA+B/G,IAAK2H,EAAE3H,OACpF,SAAC,MAAD,CAAkB0D,KAAMiE,EAAGC,SAAQ,WAAEC,EAAAA,EAAAA,IAAY,OAACb,QAAD,IAACA,OAAD,EAACA,EAASE,cAAeQ,UAAvC,aAAE,EAA4CvQ,mBAT/D,KA0C5B,SAAS0P,GAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,MACnBgB,GAAc7N,EAAAA,EAAAA,YAAWuI,EAAAA,GACZuF,EAAiED,EAA5ExD,UAAmB0D,EAAyDF,EAAzDE,SAA6BC,EAA4BH,EAA/CI,kBAC/BC,EAAqBJ,EAAO/H,IAC5BoI,EAAeL,EAAOM,KAAKvB,GAC3BoB,GAAoBI,EAAAA,EAAAA,GAAoBF,GAExCG,GAAiBC,EAAAA,EAAAA,KAEjBC,EAAaT,EAASI,GACtBM,EAAkDD,GAAcP,GAAqB,CACzF5D,UAAWmE,EAAWnE,UACtBtP,eAAgByT,EAAWzT,eAC3BuN,KAAMkG,EAAWE,OACjBX,SAAUA,EACVnO,wBAAyB,EACzBqO,kBAAAA,GAEF,OAAO,UAACrK,EAAA,EAAD,YACL,SAACE,EAAA,EAAD,WACE,SAAC6C,GAAA,EAAD,CAAyBgI,WAAS,EAACzR,MAAOiR,EACxChR,SAAU,SAAA0J,GAAO,OAAImH,EAAwB,CAAEY,KAAM,OAAQ/B,MAAAA,EAAOhG,QAAAA,KACpElL,OAAQ,SAACgQ,EAAGkD,GAAJ,OAAWA,IAAOX,IAAuBJ,EAAOM,KAAKU,SAASD,IAAKE,aAAY,mBAAclC,EAAQ,GAAKmC,cAAc,SAACC,GAAA,EAAD,QAEnIR,IAAuB,SAAClG,EAAA,WAAD,CAAsBrL,MAAOuR,EAA7B,UACtB,SAACS,GAAA,EAAD,CAAef,aAAcA,EAC3BgB,cAAeb,EACfc,kBAAkB,SAACC,GAAD,CAAyBxB,YAAaA,IACxDyB,gBAAgB,SAACC,GAAD,CAAuB1B,YAAaA,IACpD2B,mBAAmB,SAACC,GAAD,CAAuB5B,YAAaA,WAM/D,SAASwB,GAAT,GAAoF,IAAjDxB,EAAgD,EAAhDA,YACzBvF,GAAUtI,EAAAA,EAAAA,YAAWuI,EAAAA,GAArBD,KACFuC,GAAiB7P,EAAAA,EAAAA,GAAW2F,GAAAA,EAAAA,OAAsB,IAClD6H,GAAWqD,EAAAA,EAAAA,UAAQ,kBAAMhB,GAC7B3H,OAAOsG,QAAQ7I,GAAAA,EAAAA,WAAyBkK,EAAgBvC,IACrDoH,SAAQ,+BAAE9O,EAAF,iBACC8O,SAAQ,SAAAC,GAAE,OAAI9E,EAAejK,GAASgP,kBAAkBD,WAClE,CAAC9E,EAAgBvC,IACrB,OAAKE,GACE,SAACqH,GAAD,CAAyBrH,SAAUA,EAAUqF,YAAaA,IAD3C,KAGxB,SAAS0B,GAAT,GAAkF,IAAjD1B,EAAgD,EAAhDA,YAC/B,GAAkD7N,EAAAA,EAAAA,YAAWuI,EAAAA,GACvD7K,EADN,EAAQqQ,SAAR,EAAkB1D,UAAatE,KACQrI,YAEvC,OAAO,SAACmS,GAAD,CAAyBrH,SAAU9K,EAAYoS,SAAUjC,YAAaA,IAE/E,SAAS4B,GAAT,GAAkF,IAAjD5B,EAAgD,EAAhDA,YAC/B,GAAwD7N,EAAAA,EAAAA,YAAWuI,EAAAA,GAA3DD,EAAR,EAAQA,KAEFyH,EAFN,EAAchC,SAAd,EAAwB1D,UAAatE,KACKhL,eACZiV,UAAU1H,EAAKgD,IAAIC,GAAAA,GAAAA,SAAerO,OAC1DsL,EAAWtF,OAAO+M,OAAOF,EAAOG,QAAQR,SAAQ,SAAAS,GAAG,OAAIA,EAAI3H,YACjE,OAAO,SAACqH,GAAD,CAAyBrH,SAAUA,EAAUqF,YAAaA,IAGnE,SAASgC,GAAT,GAA2H,IAAxFrH,EAAuF,EAAvFA,SAAUqF,EAA6E,EAA7EA,YAC3C,OAAO,SAAC,KAAD,CAAK/P,QAAQ,OAAO+F,cAAc,SAASwI,IAAK,EAAGtI,GAAI,EAAvD,SACJyE,EAAShL,KAAI,SAAA4S,GAAO,aAAI,UAAAA,EAAQC,mBAAR,eAAqBC,YAAY,SAACC,GAAA,EAAD,CAAoBF,YAAaD,EAAQC,YAAaG,aAAc3C,SCzHnH,SAAS4C,KAAyB,IAAD,EAC9C,GAA8EzQ,EAAAA,EAAAA,YAAWuI,EAAAA,GAAjFD,EAAR,EAAQA,KAAMvN,EAAd,EAAcA,eAAgBsP,EAA9B,EAA8BA,UAA6B8D,EAA3D,EAAyC9D,UAAatE,IAChDkI,GAAoBI,EAAAA,EAAAA,GAAoBF,GACxCuC,EAAUpI,EAAKgD,IAAIC,GAAAA,GAAAA,SAAerO,MAClCyT,EAAgB5V,EAAe4V,cAC/BxP,EAAQmH,EAAKgD,IAAIC,GAAAA,GAAAA,KAAWrO,MAC5B0T,EAAYtI,EAAKgD,IAAIC,GAAAA,GAAAA,KAAWrO,MAChC2T,EAAgBvI,EAAKgD,IAAIC,GAAAA,GAAAA,eAAqBrO,MAC9C4T,EAAO,CACXC,KAAMzI,EAAKgD,IAAIC,GAAAA,GAAAA,MAAAA,MAAkBrO,MACjC8T,MAAO1I,EAAKgD,IAAIC,GAAAA,GAAAA,MAAAA,OAAmBrO,MACnC+T,MAAO3I,EAAKgD,IAAIC,GAAAA,GAAAA,MAAAA,OAAmBrO,OAE/BgU,EAAS,CACbH,KAAMzI,EAAKgD,IAAIC,GAAAA,GAAAA,MAAAA,MAAkBrO,MACjC8T,MAAO1I,EAAKgD,IAAIC,GAAAA,GAAAA,MAAAA,OAAmBrO,MACnC+T,MAAO3I,EAAKgD,IAAIC,GAAAA,GAAAA,MAAAA,OAAmBrO,OAErC,OAAO,UAACyH,EAAA,GAAD,CAAM5H,WAAS,EAACQ,QAAS,EAAzB,WACL,SAACoH,EAAA,GAAD,CAAM3H,MAAI,EAACyJ,GAAI,GAAI7I,GAAI,EAAvB,UAEE,UAACgG,EAAA,EAAD,YACE,SAACqB,GAAA,EAAD,CAAWlH,IAAKhD,EAAeoW,QAASjW,UAAU,MAAM+C,MAAM,OAAOJ,OAAO,UAC5E,UAACiG,EAAA,EAAD,YACE,UAACjB,EAAA,EAAD,CAAYzE,QAAQ,KAApB,UAA2BrD,EAAeI,KAA1C,KAAgD,SAACiO,EAAA,EAAD,CAASrL,IAAG,UAAEM,GAAAA,EAAAA,mBAAF,aAAE,EAAqBsS,KAAnF,IAAuGS,GAAAA,EAASV,GAAhH,QACA,SAAC7N,EAAA,EAAD,CAAYzE,QAAQ,KAApB,UAAyB,SAAC,KAAD,CAAOE,MAAOvD,EAAe4B,OAAQ4B,SAAO,OACrE,UAACsE,EAAA,EAAD,CAAYzE,QAAQ,KAApB,kBAA+BnD,GAAAA,GAAAA,eAA8BkG,EAAOyP,OACpE,SAACjM,EAAA,GAAD,CAAM5H,WAAS,EAACQ,QAAS,EAAGuH,GAAI,EAAhC,SACI,CAAC,OAAQ,QAAS,SAAqCtH,KAAI,SAAA6T,GAAI,aAC/D,SAAC1M,EAAA,GAAD,CAAM3H,MAAI,EAACyJ,GAAI,EAAf,UACE,SAAC6K,GAAA,EAAD,CAAOC,aAAcT,EAAKO,GAAOvP,MAAOoP,EAAOG,GAAQ,OAAS,YAC9DG,QAAQ,WACRC,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdtW,GAAI,CACF4C,MAAO,OACPJ,OAAQ,OACR,sBAAuB,CACrB+T,SAAU,SACVC,QAAS,aACTC,aAAc,OACdC,WAAY,EACZlU,OAAQ,WAdd,UAiBE,SAACqG,EAAA,EAAD,CAAKhJ,UAAU,MAAM6C,IAAG,UAAEhD,EAAeiX,eAAeX,EAAMX,UAAtC,aAAE,EAA8C1S,IAAKC,MAAM,OAAOJ,OAAO,YAlB9EwT,SAsB3B,SAACxO,EAAA,EAAD,CAAYxH,GAAI,CAAE4W,UAAW,SAAUnN,GAAI,GAAK1G,QAAQ,KAAxD,SAA8DrD,EAAemX,qBAC7E,SAACvN,EAAA,GAAD,CAAM5H,WAAS,EAACQ,QAAS,EAAzB,UACGoP,EAAAA,EAAAA,IAAM,EAAG,GAAGnP,KAAI,SAAA6H,GAAC,aAChB,SAACV,EAAA,GAAD,CAAM3H,MAAI,EAACyJ,GAAI,EAAf,UACE,SAACvC,EAAA,EAAD,CAAKhJ,UAAU,MAAM6C,IAAG,UAAEhD,EAAeiX,eAAf,uBAA8C3M,GAA8BqL,UAA9E,aAAE,EAAsF1S,IAC9G3C,IAAE,QACA8W,OAAQ,WACJtB,GAAiBxL,EAAI,GAAK,CAAE1J,OAAQ,oBAE1CsC,MAAM,OAAOJ,OAAO,OACpBP,QAAS,kBAAM2Q,EAAkB,CAAE4C,cAAexL,IAAMwL,EAAgBxL,EAAI,EAAIA,QAP7DA,iBAajC,UAACV,EAAA,GAAD,CAAM3H,MAAI,EAACyJ,GAAI,GAAI7I,GAAI,EAAGvC,GAAI,CAC5B,yBAA0B,CAAE0J,GAAI,IADlC,WAGE,SAACqN,GAAA,QAAD,CAAmBC,SAAUhI,EAAUiI,kBACvC,SAACC,GAAD,UAIN,IAIMC,GAAc,CAAC,SAAU,YAAa,WAAY,YAAa,SAC/DC,GAAgB,UAFD,CAAC,MAAO,KAAM,OAEQD,IAAahV,KAAI,SAAAkV,GAAC,OAAInH,GAAAA,GAAAA,MAAYmH,MACvEC,GAAY,CAAI,OAAQ,MAAO,MAAO,KAAM,OAAQ,OAAxC,OAAkDH,IAE9DI,GAAkB,mBACnBC,GAAAA,GAAAA,KAAuB,SAAAC,GAAG,OAAIvH,GAAAA,GAAAA,MAAA,UAAeuH,EAAf,eADX,QAEnBD,GAAAA,GAAAA,KAAuB,SAAAC,GAAG,OAAIvH,GAAAA,GAAAA,MAAA,UAAeuH,EAAf,eAFX,QAGlB,CAAC,UAAW,WAAY,UAAW,UAAoBtV,KAAI,SAAAuV,GAAC,OAAIxH,GAAAA,GAAAA,MAAYwH,QAE5EC,GAAgBJ,GAAmBpV,KAAI,SAAAuV,GAAC,OAAIA,EAAEE,KAAMlN,OAEpDmN,GAAiB,CACrB3H,GAAAA,GAAAA,MAAAA,UADqB,gBAElBsH,GAAAA,GAAAA,KAAuB,SAAAE,GAAC,OAAIxH,GAAAA,GAAAA,MAAA,UAAewH,EAAf,mBAFV,CAGrBxH,GAAAA,GAAAA,MAAAA,YAAyBA,GAAAA,GAAAA,MAAAA,iBACzBA,GAAAA,GAAAA,MAAAA,aAA0BA,GAAAA,GAAAA,MAAAA,kBAC1BA,GAAAA,GAAAA,MAAAA,cAA2BA,GAAAA,GAAAA,MAAAA,mBAC3BA,GAAAA,GAAAA,MAAAA,WAAwBA,GAAAA,GAAAA,MAAAA,gBACxBA,GAAAA,GAAAA,MAAAA,WAAwBA,GAAAA,GAAAA,MAAAA,kBAPH,QAQlBrI,OAAOC,KAAKgQ,GAAAA,IAAyB3V,KAAI,SAAAuV,GAAC,OAAIxH,GAAAA,GAAAA,MAAA,UAAewH,EAAf,eAR5B,QASlB7P,OAAOC,KAAKiQ,GAAAA,IAAqB5V,KAAI,SAAAuV,GAAC,OAAIxH,GAAAA,GAAAA,MAAA,UAAewH,EAAf,eATxB,QAUjB,CAAC,WAAY,UAAW,gBAA0BvV,KAAI,SAAAuV,GAAC,OAAIxH,GAAAA,GAAAA,MAAYwH,OAVtD,CAWrBxH,GAAAA,GAAAA,MAAAA,UAEI8H,GAAeH,GAAkB1V,KAAI,SAAAuV,GAAC,OAAIA,EAAEE,KAAMlN,OAElD+G,GAAiB,CACrBrG,GAAI,GAAI2F,GAAI,EAAGxO,GAAI,EAAGD,GAAI,GAG5B,SAAS2V,GAAT,GAA2I,IAA7GpG,EAA4G,EAA5GA,MAAOJ,EAAqG,EAArGA,eAAgByG,EAAqF,EAArFA,MACnD,GAA0BvT,EAAAA,EAAAA,YAAWuI,EAAAA,GAA7BD,EAAR,EAAQA,KAAMyE,EAAd,EAAcA,QACd,OAAO,UAACpI,EAAA,GAAD,CAAM5H,WAAS,EAACwQ,cAAe,CAAE9G,GAAI,EAAG9I,GAAI,GAAK6P,WAAY,EAA7D,UACJN,EAAM1P,KAAI,SAAAgW,GAAE,eAAI,SAAC7O,EAAA,IAAD,gBAAM3H,MAAI,GAAwB8P,GAAlC,cACd,SAAC,MAAD,CAAkBrD,KAAMnB,EAAKgD,IAAIkI,GAAK7F,SAAQ,OAAEZ,QAAF,IAAEA,GAAF,UAAEA,EAASzB,IAAIkI,UAAf,aAAE,EAAkBtW,UADpD,UAAgBsW,EAAGP,YAAnB,aAAgB,EAASlN,QAGzCwN,KAIL,SAAShB,KACP,OAA8DvS,EAAAA,EAAAA,YAAWuI,EAAAA,GAAjED,EAAR,EAAQA,KAAM+B,EAAd,EAAcA,UAA6B8D,EAA3C,EAAyB9D,UAAatE,IAChCkI,GAAoBI,EAAAA,EAAAA,GAAoBF,GACxCsF,EAAcnL,EAAKgD,IAAIC,GAAAA,GAAAA,SAE7B,OAAO,iCACL,SAACmB,GAAD,KACA,SAACgH,GAAD,CACE9Q,MAAM,aACN+Q,SAAS,SAACL,GAAD,CAAoBxG,eAAgBA,GAAgBI,MAAOuF,GAClEc,MAAOE,IAAe,UAAC9O,EAAA,IAAD,gBAAM3H,MAAI,GAAK8P,IAAf,IAA+BhP,QAAQ,OAAO+F,cAAc,MAAM+P,eAAe,gBAAjF,WACpB,6BAAM,oCAAN,KAAsB,UAAC,IAAD,CAAW9R,MAAO2R,EAAYrV,QAA9B,UAAwCqV,EAAY1N,KAAOqL,GAAAA,EAASqC,EAAY1N,KAAhF,IAAuF0N,EAAY1N,KAAO9D,EAAAA,GAAAA,IAAWwR,EAAY1N,YACvJ,2BAAQgE,EAAAA,EAAAA,IAAY0J,EAAYvW,MAAOuW,EAAYzJ,cAGvD6J,aAAa,SAAClP,EAAA,GAAD,CAAM5H,WAAS,EAACwQ,cAAe,EAAGC,WAAY,EAA9C,SACVmF,GAAanV,KAAI,SAAAqB,GAAY,IAAD,EACrBiH,EAAW7D,EAAAA,GAAAA,IAAWpD,GAC5B,OAAO,SAAC8F,EAAA,GAAD,CAAM3H,MAAI,EAACyJ,GAAI,GAAI9I,GAAI,EAAvB,UACL,SAACmW,GAAA,EAAD,CACE3Y,MAAM,4BAAOiW,GAAAA,EAASvS,GAAhB,IAA2BiH,KACjCiO,YAAa9R,EAAAA,GAAAA,OAAcpD,GAC3B3B,MAAK,UAAEmN,EAAU2J,WAAWnV,UAAvB,QAAmC,EACxCoV,QAAkC,MAAzBhS,EAAAA,GAAAA,KAAYpD,GACrBqV,cAAe,SAAAhX,GAAK,OAAI+Q,EAAkB,CAAEW,KAAM,YAAa/P,QAAAA,EAAS3B,MAAAA,QANtC2B,WAY5C,SAAC6U,GAAD,CACE9Q,MAAM,cACN+Q,SAAS,SAACL,GAAD,CAAoBxG,eAAgBA,GAAgBI,MAAO0F,KACpEiB,aAAa,SAAClP,EAAA,GAAD,CAAM5H,WAAS,EAACwQ,cAAe,EAAGC,WAAY,EAA9C,SACVwF,GAAcxV,KAAI,SAAAqB,GAAY,IAAD,EACtBiH,EAAW7D,EAAAA,GAAAA,IAAWpD,GAC5B,OAAO,SAAC8F,EAAA,GAAD,CAAM3H,MAAI,EAACyJ,GAAI,GAAI9I,GAAI,EAAvB,UACL,SAACmW,GAAA,EAAD,CACE3Y,MAAM,4BAAOiW,GAAAA,EAASvS,GAAhB,IAA2BiH,KACjCiO,YAAa9R,EAAAA,GAAAA,OAAcpD,GAC3B3B,MAAK,UAAEmN,EAAU2J,WAAWnV,UAAvB,QAAmC,EACxCoV,QAAkC,MAAzBhS,EAAAA,GAAAA,KAAYpD,GACrBsV,kBAAc3T,EACd0T,cAAe,SAAAhX,GAAK,OAAI+Q,EAAkB,CAAEW,KAAM,YAAa/P,QAAAA,EAAS3B,MAAAA,QAPtC2B,WAa5C,SAAC6U,GAAD,CACE9Q,MAAM,aACN+Q,SAAS,SAACL,GAAD,CAAoBxG,eAAgB,CAC3CrG,GAAI,GAAI2F,GAAI,EAAGxO,GAAI,GAClBsP,MAAOgG,KACVW,aAAa,SAAClP,EAAA,GAAD,CAAM5H,WAAS,EAACwQ,cAAe,EAAGC,WAAY,EAA9C,SACV6F,GAAa7V,KAAI,SAAAqB,GAAY,IAAD,EACrBiH,EAAW7D,EAAAA,GAAAA,IAAWpD,GAC5B,OAAO,SAAC8F,EAAA,GAAD,CAAM3H,MAAI,EAACyJ,GAAI,GAAI9I,GAAI,EAAvB,UACL,SAACmW,GAAA,EAAD,CACE3Y,MAAM,4BAAOiW,GAAAA,EAASvS,GAAhB,IAA2BiH,KACjCiO,YAAa9R,EAAAA,GAAAA,OAAcpD,GAC3B3B,MAAK,UAAEmN,EAAU2J,WAAWnV,UAAvB,QAAmC,EACxCoV,QAAkC,MAAzBhS,EAAAA,GAAAA,KAAYpD,GACrBqV,cAAe,SAAAhX,GAAK,OAAI+Q,EAAkB,CAAEW,KAAM,YAAa/P,QAAAA,EAAS3B,MAAAA,QANtC2B,aAchD,SAAS6U,GAAT,GAA2D,IAAhC9Q,EAA+B,EAA/BA,MAAO+Q,EAAwB,EAAxBA,QAASE,EAAe,EAAfA,YACzC,GAAwB7X,EAAAA,EAAAA,WAAS,GAAjC,eAAOwO,EAAP,KAAa4J,EAAb,KACA,OAAO,UAACxQ,EAAA,EAAD,YACL,SAACE,EAAA,EAAD,CAAazI,GAAI,CAAEyB,GAAI,GAAvB,UACE,UAACoH,EAAA,EAAD,CAAKpG,QAAQ,OAAO8V,eAAe,gBAAnC,WACE,SAAC/Q,EAAA,EAAD,CAAYzE,QAAQ,YAApB,SAAiCwE,KACjC,SAACoE,EAAA,EAAD,CAAQ3J,KAAK,QAAQyE,MAAO0I,EAAO,QAAU,OAAQlN,QAAS,kBAAM8W,GAAS5J,IAA7E,UACE,6BAAM,SAAC,KAAD,CAAiB1H,KAAM0H,EAAO6J,GAAAA,IAASpN,GAAAA,MAA7C,IAAyDuD,EAzHtD,OADA,wBA8HT,SAACjB,EAAA,EAAD,KACA,SAACzF,EAAA,EAAD,UACG0G,EAAOqJ,EAAcF,O,oDC9Mb,SAASW,KACtB,OAA4CtU,EAAAA,EAAAA,YAAWuI,EAAAA,GAA/CD,EAAR,EAAQA,KAAM+B,EAAd,EAAcA,UAAWtP,EAAzB,EAAyBA,eACnBkT,GAAoBI,EAAAA,EAAAA,GAAoBhE,EAAUtE,KAGlD2K,EAAUpI,EAAKgD,IAAIC,GAAAA,GAAAA,SAAerO,MAClC0T,EAAYtI,EAAKgD,IAAIC,GAAAA,GAAAA,KAAWrO,MAChC2T,EAAgBvI,EAAKgD,IAAIC,GAAAA,GAAAA,eAAqBrO,MACpD,OAAO,iCACL,SAACqX,GAAD,KACA,UAAC5P,EAAA,GAAD,CAAM5H,WAAS,EAACQ,QAAS,EAAGlC,GAAI,CAAE0J,GAAI,GAAtC,UAPqB,CAAC,CAAC,OAAQ,yBAA0B,CAAC,QAAS,mBAAoB,CAAC,QAAS,oBAS/EvH,KAAI,+BAAE6T,EAAF,KAAQmD,EAAR,YAClB,SAAC7P,EAAA,GAAD,CAAM3H,MAAI,EAAYyJ,GAAI,GAAI7I,GAAI,EAAGD,GAAI,EAAzC,UACE,SAAC8W,GAAD,CACEC,UAAWrD,EACXsD,SAAUH,KAHEnD,QAMftW,EAAeiX,eAAe,SAAUtB,KAAY,SAAC/L,EAAA,GAAD,CAAM3H,MAAI,EAACyJ,GAAI,GAAI7I,GAAI,EAAGD,GAAI,EAA9B,UACrD,SAAC8W,GAAD,CACEC,UAAU,SACVC,SAAS,2BAGV5Z,EAAeiX,eAAe,UAAWtB,KAAY,SAAC/L,EAAA,GAAD,CAAM3H,MAAI,EAACyJ,GAAI,GAAI7I,GAAI,EAAGD,GAAI,EAA9B,UACtD,SAAC8W,GAAD,CACEC,UAAU,UACVC,SAAS,kBAIf,SAAChQ,EAAA,GAAD,CAAM5H,WAAS,EAACQ,QAAS,EAAzB,SA5BgF,CAAC,CAAC,WAAY,0BAA2B,GAAI,CAAC,WAAY,0BAA2B,GAAI,CAAC,WAAY,sBAAuB,IA8B7LC,KAAI,YAAyB,IAAD,eAAtB6T,EAAsB,KAAhBmD,EAAgB,KAATI,EAAS,KACpCC,EAAUjE,GAAagE,EAC3B,OAAK7Z,EAAeiX,eAAeX,EAAMX,IAClC,SAAC/L,EAAA,GAAD,CAAM3H,MAAI,EAAY8X,MAAO,CAAE7O,QAAS4O,EAAU,EAAI,IAAOpO,GAAI,GAAI7I,GAAI,EAAzE,UACL,SAAC6W,GAAD,CACEC,UAAWrD,EACXsD,SAAUH,KAHSnD,GADmC,WAS9D,UAACxO,EAAA,EAAD,CAAYzE,QAAQ,KAAK/C,GAAI,CAAE4W,UAAW,UAA1C,+BAAyEpB,MACzE,SAAClM,EAAA,GAAD,CAAM5H,WAAS,EAACQ,QAAS,EAAzB,UAEGoP,EAAAA,EAAAA,IAAM,EAAG,GAAGnP,KAAI,SAAA6H,GACf,IAAIgM,EAAI,uBAAmBhM,GAC3B,OAAO,SAACV,EAAA,GAAD,CAAM3H,MAAI,EAASyJ,GAAI,GAAI7I,GAAI,EACpCvC,GAAI,CAAE4K,QAAS4K,GAAiBxL,EAAI,EAAI,IADnC,UAEL,SAACoP,GAAD,CACEC,UAAWrD,EACXsD,SAAQ,2BAAsBtP,GAC9B0P,aAAc,kBAAM9G,EAAkB,CAAE4C,cAAexL,IAAMwL,EAAgBxL,EAAI,EAAIA,QALlEA,WAY/B,IAAM2P,GAAqB,CACzBC,aAsBF,YAA4D,IAAhCxL,EAA+B,EAA/BA,KAC1B,OAAO,SAACR,EAAA,EAAD,WAAU,SAACnF,EAAA,EAAD,CAAazI,GAAI,CAAE2Q,EAAG,GAAtB,UACf,UAACnJ,EAAA,EAAD,CAAYf,MAAM,oBAAlB,UAAuCG,EAAAA,GAAAA,IAAWwH,EAAK1D,KAAvD,IAA+DqL,GAAAA,EAAAA,QAA/D,IAAkFA,GAAAA,EAAAA,KAAlF,KAAiG,6BAASrH,EAAAA,EAAAA,IAAYN,EAAKvM,MAAOuM,EAAKO,gBAvBzIkL,eA0BF,YAA8D,IAAhCzL,EAA+B,EAA/BA,KAC5B,OAAO,SAACR,EAAA,EAAD,WAAU,SAACnF,EAAA,EAAD,CAAazI,GAAI,CAAE2Q,EAAG,GAAtB,UACf,UAACnJ,EAAA,EAAD,CAAYf,MAAM,sBAAlB,UAAyCG,EAAAA,GAAAA,IAAWwH,EAAK1D,KAAzD,IAAiEqL,GAAAA,EAAAA,QAAjE,IAAoFA,GAAAA,EAAAA,MAApF,KAAoG,6BAASrH,EAAAA,EAAAA,IAAYN,EAAKvM,MAAOuM,EAAKO,gBA3B5ImL,WA8BF,YAA0D,IAAhC1L,EAA+B,EAA/BA,KACxB,OAAO,SAACR,EAAA,EAAD,WAAU,SAACnF,EAAA,EAAD,CAAazI,GAAI,CAAE2Q,EAAG,GAAtB,UACf,UAACnJ,EAAA,EAAD,CAAYf,MAAM,kBAAlB,UAAsCG,EAAAA,GAAAA,IAAWwH,EAAK1D,KAAtD,IAA8DqL,GAAAA,EAAAA,QAA9D,IAAiFA,GAAAA,EAAAA,KAAjF,KAAgG,6BAASrH,EAAAA,EAAAA,IAAYN,EAAKvM,MAAOuM,EAAKO,gBA/BxIoL,UA0CF,WACE,OAAsBpZ,EAAAA,EAAAA,UAASkH,OAAOC,KAAKkS,IAAmB,IAA9D,eAAOvC,EAAP,KAAYwC,EAAZ,KAEM7L,GADWzJ,EAAAA,EAAAA,YAAWuI,EAAAA,GAApBD,KACUiN,aAAaC,SAAlB,UAA+B1C,EAA/B,UACb,OAAO,UAAC7J,EAAA,EAAD,CAAU5N,GAAI,CAAEyC,QAAS,QAAzB,WACL,SAAC2X,EAAA,EAAD,CAAgBpY,KAAK,QAAQuF,MAAOyS,GAAkBvC,GAAMhR,MAAM,UAAlE,SACGoB,OAAOsG,QAAQ6L,IAAmB7X,KAAI,+BAAEuI,EAAF,KAAO2P,EAAP,YAAoB,SAACC,EAAA,EAAD,CAAoBC,SAAU9C,IAAQ/M,EAAK3I,SAAU0V,IAAQ/M,EAAKzI,QAAS,kBAAMgY,EAAOvP,IAAxF,SAA+F2P,GAAhF3P,SAE5E,SAAC7B,EAAA,EAAD,CAAK7I,GAAI,CAAEyG,MAAM,GAAD,OAAKgR,EAAL,SAAiB9G,EAAG,GAApC,UAAyC,6BAASjC,EAAAA,EAAAA,IAAYN,EAAKvM,MAAOuM,EAAKO,cAjDjF6L,UAqDF,YAAyD,IAAhCpM,EAA+B,EAA/BA,KACjBqM,GAAc,SAACpT,GAAA,EAAD,CAAkBC,UAAU,MAAMC,OAAO,UAACC,EAAA,EAAD,+CAA4C,SAAC,IAAD,CAAWf,MAAM,MAAjB,wBAArF,UAClB,SAACoC,EAAA,EAAD,CAAKhJ,UAAU,OAAOG,GAAI,CAAE8W,OAAQ,QAApC,UAA8C,SAAC,KAAD,CAAiBrP,KAAMiT,GAAAA,UAGvE,OAAO,SAAC9M,EAAA,EAAD,WAAU,SAACnF,EAAA,EAAD,CAAazI,GAAI,CAAE2Q,EAAG,GAAtB,UACf,UAAC,IAAD,CAAWlK,MAAM,YAAjB,UAA8BG,EAAAA,GAAAA,IAAWwH,EAAK1D,KAA9C,IAAsDqL,GAAAA,EAAAA,MAAtD,IAAuEA,GAAAA,EAAAA,KAAvE,MAAuF,SAAC,IAAD,CAAWtP,MAAM,WAAjB,UAA4B,4CAAoBgU,EAApB,SAAnH,KAAyK,6BAAS/L,EAAAA,EAAAA,IAAYN,EAAKvM,MAAOuM,EAAKO,gBA1DjNgM,YAsEF,WACE,OAAsBha,EAAAA,EAAAA,UAASkH,OAAOC,KAAK8S,IAAyB,IAApE,eAAOnD,EAAP,KAAYwC,EAAZ,KACQhN,GAAStI,EAAAA,EAAAA,YAAWuI,EAAAA,GAApBD,KACFmB,EAAe,QAARqJ,EAAgBxK,EAAKiN,aAAaC,SAAUQ,YAAe1N,EAAKiN,aAAaC,SAAlB,UAA+B1C,EAA/B,gBACxE,OAAO,UAAC7J,EAAA,EAAD,CAAU5N,GAAI,CAAEyC,QAAS,QAAzB,WACL,SAAC2X,EAAA,EAAD,CAAgBpY,KAAK,QAAQuF,MAAOqT,GAAwBnD,GAAMhR,MAAM,UAAxE,SACGoB,OAAOsG,QAAQyM,IAAyBzY,KAAI,+BAAEuI,EAAF,KAAO2P,EAAP,YAAoB,SAACC,EAAA,EAAD,CAAoBC,SAAU9C,IAAQ/M,EAAK3I,SAAU0V,IAAQ/M,EAAKzI,QAAS,kBAAMgY,EAAOvP,IAAxF,SAA+F2P,GAAhF3P,SAElF,SAAC7B,EAAA,EAAD,CAAK7I,GAAI,CAAEyG,MAAM,GAAD,OAAKgR,EAAL,SAAiB9G,EAAG,GAApC,UAAyC,6BAASjC,EAAAA,EAAAA,IAAYN,EAAKvM,MAAOuM,EAAKO,eA5EnF,SAASuK,KACP,IACMiB,GADWxV,EAAAA,EAAAA,YAAWuI,EAAAA,GAApBD,KACciN,aAAaC,SACnC,OAAO,SAAC5R,EAAA,EAAD,CAAWvI,GAAI,CAAE0J,GAAI,GAArB,UACL,SAACjB,EAAA,EAAD,WACE,SAACa,EAAA,GAAD,CAAM5H,WAAS,EAACQ,QAAS,EAAzB,SACG2F,OAAOsG,QAAQgM,GAAUhY,KAAI,YAAkB,IAAD,eAAfuI,EAAe,KAAV0D,EAAU,KACvCyM,EAAMlB,GAAmBjP,GAC/B,OAAKmQ,GACE,SAACvR,EAAA,GAAD,CAAM3H,MAAI,EAAV,UAAqB,SAACkZ,EAAD,CAAKzM,KAAMA,KAAhB1D,GADN,cAuB3B,IAAMsP,GAAoB,CACxB,MAAQ,6BAAM,SAAC,IAAD,CAAWvT,MAAM,OAAjB,SAAyBG,EAAAA,GAAAA,IAAW,oBAA1C,IAA0EmP,GAAAA,EAAAA,KAA1E,MAA4FA,GAAAA,EAAAA,SACpG,SAAW,6BAAM,SAAC,IAAD,CAAWtP,MAAM,UAAjB,SAA4BG,EAAAA,GAAAA,IAAW,uBAA7C,IAAgFmP,GAAAA,EAAAA,QAAhF,IAAmGA,GAAAA,EAAAA,SAC9G,MAAQ,6BAAM,SAAC,IAAD,CAAWtP,MAAM,OAAjB,SAAyBG,EAAAA,GAAAA,IAAW,oBAA1C,IAA0EmP,GAAAA,EAAAA,KAA1E,MAA4FA,GAAAA,EAAAA,SACpG,OAAS,6BAAM,SAAC,IAAD,CAAWtP,MAAM,QAAjB,SAA0BG,EAAAA,GAAAA,IAAW,qBAA3C,IAA4EmP,GAAAA,EAAAA,MAA5E,MAA+FA,GAAAA,EAAAA,UAyB1G,IAAM6E,GAA0B,CAC9B,KAAO,UAAC,IAAD,CAAWnU,MAAM,cAAjB,UAAgCG,EAAAA,GAAAA,IAAW,eAA3C,IAA4DmP,GAAAA,EAAAA,QAA5D,IAA+EA,GAAAA,EAAAA,MAA/E,IAAgGA,GAAAA,EAAAA,KAAhG,IAAgHA,GAAAA,EAAAA,KAAhH,IAAgIA,GAAAA,EAAAA,OACvI,MAAQ,6BAAM,SAAC,IAAD,CAAWtP,MAAM,OAAjB,SAAyBG,EAAAA,GAAAA,IAAW,sBAA1C,IAA4EmP,GAAAA,EAAAA,KAA5E,IAA4FA,GAAAA,EAAAA,OACpG,SAAW,6BAAM,SAAC,IAAD,CAAWtP,MAAM,UAAjB,SAA4BG,EAAAA,GAAAA,IAAW,yBAA7C,IAAkFmP,GAAAA,EAAAA,QAAlF,IAAqGA,GAAAA,EAAAA,OAChH,MAAQ,6BAAM,SAAC,IAAD,CAAWtP,MAAM,OAAjB,SAAyBG,EAAAA,GAAAA,IAAW,sBAA1C,IAA4EmP,GAAAA,EAAAA,KAA5E,IAA4FA,GAAAA,EAAAA,OACpG,OAAS,6BAAM,SAAC,IAAD,CAAWtP,MAAM,QAAjB,SAA0BG,EAAAA,GAAAA,IAAW,uBAA3C,IAA8EmP,GAAAA,EAAAA,MAA9E,IAA+FA,GAAAA,EAAAA,QAe1G,IAAM+E,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAMxC,SAAS1B,GAAT,GAAyF,IAA7DC,EAA4D,EAA5DA,UAAWC,EAAiD,EAAjDA,SAAUI,EAAuC,EAAvCA,aAC/C,GAA2E/U,EAAAA,EAAAA,YAAWuI,EAAAA,GAA9ED,EAAR,EAAQA,KAAmByH,EAA3B,EAAc1F,UAAa0F,OAAUhV,EAArC,EAAqCA,eAAgBkT,EAArD,EAAqDA,kBAE/CmI,GAAoBvO,EAAAA,EAAAA,cACxB,SAAAwO,GAAQ,OAAI,SAACC,GAAA,EAAD,CAAgBhZ,QAASyX,EAAzB,SAAwCsB,MACpD,CAACtB,IAGCjM,EAA6B,KAEjC,GAAI4L,KAAa3E,EAAQ,CACvB,IAAMwG,EAAajO,EAAKgD,IAAIC,GAAAA,GAAAA,MAAYmJ,IAAuBxX,MACzDiE,EAAQmH,EAAKgD,IAAIC,GAAAA,GAAAA,MAAYmJ,IAAYxX,MACzC0X,EAAMtM,EAAKgD,IAAIC,GAAAA,GAAAA,KAAWrO,MAKhC4L,GAAS,iCACP,SAAChF,EAAA,EAAD,CAAazI,GAAI,CAAEyB,GAAI,GAAvB,UACE,SAAC2Y,EAAA,EAAD,CAAgB9G,WAAS,EAAC/L,MAAK,qBAAgBzB,GAASW,MAAOyU,EAAa,OAAS,UAArF,UACG5J,EAAAA,EAAAA,IAAM,EAAGwJ,GAAavB,IAAMpX,KAAI,SAAA6H,GAAC,OAChC,UAACsQ,EAAA,EAAD,CAAkBC,SAAU7F,EAAO2E,KAAgBrP,EAAIjI,SAAU2S,EAAO2E,KAAgBrP,EAAI/H,QAAS,kBAR/EkZ,EAQ+GnR,EAP3I0K,EAOgI2E,GAPjH8B,OACfvI,EAAkB,CAAE8B,OAAAA,IAFC,IAAOyG,GAQtB,wBAAqJnR,EAAIkR,IAA1IlR,WAGrB,SAACkE,EAAA,EAAD,OAGJ,IAAMkN,EAAc1b,EAAeiX,eAAe0C,EAAWpM,EAAKgD,IAAIC,GAAAA,GAAAA,SAAerO,OAErF,OAAO,UAAC0G,EAAA,EAAD,CAAWvI,GAAI,CAAEwC,OAAQ,QAAzB,UACJiL,GACD,UAAChF,EAAA,EAAD,YACE,SAAC4S,GAAA,EAAD,CAAoBC,YAAa5B,EAAc6B,QAASR,EAAxD,UACE,UAACzR,EAAA,GAAD,CAAM5H,WAAS,EAAC1B,GAAI,CAAEuJ,SAAU,UAAhC,WACE,SAACD,EAAA,GAAD,CAAM3H,MAAI,EAAV,UACE,SAACkH,EAAA,EAAD,CAAKhJ,UAAU,MAAM6C,IAAG,OAAE0Y,QAAF,IAAEA,OAAF,EAAEA,EAAazY,IAAK3C,GAAI,CAAE4C,MAAO,GAAIJ,OAAQ,aAEvE,UAAC8G,EAAA,GAAD,CAAM3H,MAAI,EAACC,SAAU,EAAG5B,GAAI,CAAEiJ,GAAI,GAAlC,WACE,SAACzB,EAAA,EAAD,CAAYzE,QAAQ,KAApB,gBAA0BqY,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAatb,QACvC,SAAC0H,EAAA,EAAD,CAAYzE,QAAQ,YAApB,SAAiCuW,YAK3B,OAAX8B,QAAW,IAAXA,GAAAA,EAAajO,UAAW,SAACqO,GAAA,EAAD,CAAiBrO,SAAUiO,EAAYjO,WAAe,W,sCC7LrF,SAASsO,GAAT,GAA0E,IAAtDT,EAAqD,EAArDA,SAAUU,EAA2C,EAA3CA,QAAS7Z,EAAkC,EAAlCA,MAAU8Z,GAAwB,aACvE,OAAI9Z,IAAU6Z,EAAgB,MACvB,SAAC,EAAAvT,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,CAAUtF,QAAQ,cAAcH,MAAM,OAAOJ,OAAQ,MAAzE,UACL,gCACEoZ,KAAK,WACLC,OAAQha,IAAU6Z,EAClB/V,GAAE,0BAAqB9D,GACvB,uCAA+BA,IAC3B8Z,GALN,aAOGX,OAcQ,SAASc,GAAT,GAAwJ,IAAD,IAAvHhJ,EAAuH,EAAvHA,aAAciJ,EAAyG,EAAzGA,OAAQC,EAAiG,EAAjGA,YAAiG,IAApFzX,wBAAAA,OAAoF,MAA1D,EAA0D,EAAvD/C,EAAuD,EAAvDA,QAASya,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,OACzHxJ,GAAWyJ,EAAAA,EAAAA,GAAYrJ,EAAcvO,GAC3C,mBAA0DmO,QAA1D,IAA0DA,OAA1D,EAA0DA,EAAWI,UAArE,QAAsF,GAA9E9D,EAAR,EAAQA,UAAWtP,EAAnB,EAAmBA,eAAwB0c,EAA3C,EAAmC/I,OAGnC,GAAsB1S,EAAAA,EAAAA,UAA2Bsb,IAAqBD,EAAc,eAAiB,cAArG,eAAOK,EAAP,KAAYC,EAAZ,KACMC,GAAQ/P,EAAAA,EAAAA,cAAY,SAACgQ,EAAGC,GAAJ,OAAUH,EAAOG,KAAI,CAACH,IAE1C1J,GAAoBI,EAAAA,EAAAA,GAAmB,iBAAChE,QAAD,IAACA,OAAD,EAACA,EAAWtE,WAAZ,QAAmB,IAChE,IAAKgI,IAAa1D,IAActP,IAAmB0c,EAAY,OAAO,wBACtE,IAAQM,EAAgB1N,EAAhB0N,YAEFC,EAAmC,CACvC3N,UAAAA,EACAtP,eAAAA,EACA6E,wBAAAA,EACA0I,KAAO+O,EAAcA,EAAYlJ,GAAeO,OAAS+I,EACzD1J,SAAWsJ,GAA4BtJ,EACvChB,QAAUgL,GAAeV,EAAeI,OAAajX,EACrDyN,kBAAAA,GAEF,OAAO,SAAChF,EAAA,EAAD,WACL,UAACV,EAAA,WAAD,CAAsBrL,MAAO8a,EAA7B,WACE,UAAClU,EAAA,EAAD,CAAazI,GAAI,CACf,yBAA0B,CAAE0J,GAAI,IADlC,WAGE,UAACJ,EAAA,GAAD,CAAM5H,WAAS,EAACQ,QAAS,EAAzB,WACE,SAACoH,EAAA,GAAD,CAAM3H,MAAI,EAAV,UACE,SAACib,GAAD,OAEF,SAACtT,EAAA,GAAD,CAAM3H,MAAI,EAAV,WAEKqa,IAAe,UAACa,EAAA,EAAD,CAAwBC,WAAS,EAACjb,MAAO6a,EAAa5a,SAAU,SAAC0a,EAAGC,GAAJ,OAAU7J,EAAkB,CAAE8J,YAAaD,KAAMza,KAAK,QAAtH,WAChB,SAAC+a,EAAA,EAAD,CAAclb,OAAO,EAAOE,UAAW2a,EAAvC,UACE,0DAEF,SAACK,EAAA,EAAD,CAAclb,OAAO,EAAME,SAAU2a,EAArC,UACE,0EAIN,SAACpT,EAAA,GAAD,CAAM3H,MAAI,EAACC,SAAU,MAClB2C,IAA2B,SAAC+E,EAAA,GAAD,CAAM3H,MAAI,EAAV,UAAW,SAAC+O,EAAA,EAAD,CAAM1Q,GAAI,CAAE2Q,EAAG,EAAGpC,QAAS,SAAA/O,GAAC,OAAIA,EAAEoR,QAAQC,QAAQC,OAAlD,UAA0D,SAACtJ,EAAA,EAAD,WAAY,6DAAqCjD,aACjJ/C,IAAW,SAAC8H,EAAA,GAAD,CAAM3H,MAAI,EAAV,UACZ,SAACqb,EAAA,EAAD,CAAa/a,QAAST,UAG1B,SAAC+G,EAAA,EAAD,WACE,UAAC0U,EAAA,EAAD,CACEnb,SAAUya,EACV1a,MAAOwa,EACPtZ,QAAQ,YAHV,WAKE,SAACma,EAAA,EAAD,CAAKrb,MAAM,YAAYmH,MAAM,gBAC1BgT,IAAe,SAACkB,EAAA,EAAD,CAAKrb,MAAM,eAAemH,MAAM,mBAClD,SAACkU,EAAA,EAAD,CAAKrb,MAAM,YAAYmH,MAAOgT,EAAc,oBAAsB,eAChEE,IAAU,SAACgB,EAAA,EAAD,CAAKrb,MAAM,QAAQmH,MAAM,gBACrC,SAACkU,EAAA,EAAD,CAAKrb,MAAM,SAASmH,MAAM,kBAG9B,SAAC,KAAD,KACA,SAACoD,EAAD,KACA,SAAC,KAAD,KAGA,SAACqP,GAAD,CAAU5Z,MAAM,YAAY6Z,QAASW,EAArC,UAA0C,SAACjH,GAAD,OAE1C,SAAClI,EAAA,WAAD,CAAsBrL,OAAK,kBAAO8a,GAAP,IAAyB1P,KAAMmP,EAAY1K,aAASvM,IAA/E,UACE,SAACsW,GAAD,CAAU5Z,MAAM,YAAY6Z,QAASW,EAArC,UAA2C,SAAC,GAAD,SAG7C,SAACZ,GAAD,CAAU5Z,MAAM,eAAe6Z,QAASW,EAAxC,UAA8C,SAAC,GAAD,CAAuBtN,UAAQ,OAE7E,SAAC0M,GAAD,CAAU5Z,MAAM,QAAQ6Z,QAASW,EAAjC,UAAsC,SAACjL,GAAD,OAEtC,SAACqK,GAAD,CAAU5Z,MAAM,SAAS6Z,QAASW,EAAlC,UACE,SAACpD,GAAD,WAGD8C,IAAU,SAAC7N,EAAA,EAAD,IACZ6N,IAAU,SAACtT,EAAA,EAAD,UACRsT,SAOT,SAASa,KAAsB,IAAD,EAC5B,GAAyDjY,EAAAA,EAAAA,YAAWuI,EAAAA,GAA5D8B,EAAR,EAAQA,UAAWtP,EAAnB,EAAmBA,eAAgBkT,EAAnC,EAAmCA,kBACnC,GAAkCjS,EAAAA,EAAAA,WAAS,GAA3C,eAAOwc,EAAP,KAAkBC,EAAlB,KACMC,GAAenK,EAAAA,EAAAA,KACfoK,GAAW9Q,EAAAA,EAAAA,cAAY,SAAC1G,GAC5BA,GAAQuE,EAAAA,EAAAA,IAAMvE,EAAO,EAAG,IACxB,IAAMyP,EAAYgI,EAAAA,GAAAA,WAA4B,SAAAC,GAAO,OAAI1X,GAAS0X,KAClE5K,EAAkB,CAAE9M,MAAAA,EAAOyP,UAAAA,MAC1B,CAAC3C,IACE6K,GAAejR,EAAAA,EAAAA,cAAY,WAC/B,GAAKwC,EAAL,CACA,MAAqCA,EAA7BlJ,MAAAA,OAAR,MAAgB,EAAhB,IAAqCkJ,EAAlBuG,UAAAA,OAAnB,MAA+B,EAA/B,EACMmI,EAAiBH,EAAAA,GAAAA,WAA4B,SAAAC,GAAO,OAAc,KAAV1X,GAAgBA,IAAU0X,KACtD5K,EAA9B2C,IAAcmI,EAAkC,CAAEnI,UAAWA,EAAY,GACtD,CAAEA,UAAWmI,OACnC,CAAC9K,EAAmB5D,IACvB,EAA2DA,EAAnD2O,WAAAA,OAAR,MAAqB,QAArB,IAA2D3O,EAA7BlJ,MAAAA,OAA9B,MAAsC,EAAtC,IAA2DkJ,EAAlBuG,UAAAA,OAAzC,MAAqD,EAArD,EACA,OAAO,iCACL,SAACqI,EAAA,EAAD,CAAyBzd,KAAMgd,EAAW/c,OAAQ,kBAAMgd,GAAa,IAAQ/c,SAAUgd,KACvF,UAAC/T,EAAA,GAAD,CAAM5H,WAAS,EAACQ,QAAS,EAAzB,WACE,SAACoH,EAAA,GAAD,CAAM3H,MAAI,EAAV,UACE,SAACgK,EAAA,EAAD,CAAQ1J,QAAS,kBAAMmb,GAAa,IAAOS,WAAW,SAACC,EAAA,EAAD,CAAWpb,IAAG,OAAEhD,QAAF,IAAEA,OAAF,EAAEA,EAAgBqe,eAAtF,0BAA0Gre,QAA1G,IAA0GA,OAA1G,EAA0GA,EAAgBI,YAA1H,QAAkI,0BAEpI,SAACwJ,EAAA,GAAD,CAAM3H,MAAI,EAAV,UACE,UAAC+J,EAAA,EAAD,CAAa1L,GAAI,CAAEuO,QAAS,SAAA/O,GAAC,OAAIA,EAAEoR,QAAQoN,YAAYC,OAAvD,WACiB,OAAdve,QAAc,IAAdA,OAAA,EAAAA,EAAgB2F,QAAS,mBAAa3F,QAAb,IAAaA,OAAb,EAAaA,EAAgB2F,SAAS,SAAC+U,EAAA,EAAD,CAAgB7S,OAAO,6BAAQ,SAAC,IAAD,CAAWd,MAAOkX,EAAlB,UAA+B5Z,EAAAA,EAAAA,IAAI,WAAD,OAAY4Z,QAA7E,SAC7D9V,OAAOC,KAAKpI,EAAe2F,MAAM6Y,SAAS/b,KAAI,SAAAgc,GAAM,OACnD,SAAC7D,EAAA,EAAD,CAAuBC,SAAUoD,IAAeQ,EAAQpc,SAAU4b,IAAeQ,EAAQlc,QAAS,kBAAM2Q,EAAkB,CAAE+K,WAAYQ,KAAxI,UACE,6BAAQ,SAAC,IAAD,CAAW1X,MAAO0X,EAAlB,UAA2Bpa,EAAAA,EAAAA,IAAI,WAAD,OAAYoa,SADrCA,SAGnB,SAACC,EAAA,GAAD,WACE,SAACA,EAAA,GAAD,CAAmBtc,SAAUwb,EAAUzb,MAAOiE,EAC5CuY,eAAe,QACfC,WAAY,CAAEjY,IAAK,EAAGD,IAAK,GAAIpG,GAAI,CAAE4W,UAAW,WAChD5W,GAAI,CAAE4C,MAAO,OAAQJ,OAAQ,OAAQyG,GAAI,GACzClH,UAAWrC,OAEf,SAACiM,EAAA,EAAD,CAAQ3L,GAAI,CAAEiJ,GAAI,GAAKlH,WAAWwc,EAAAA,EAAAA,IAAezY,KAAWpG,EAAgBuC,QAASwb,EAArF,UAAmG,mCAAWF,EAAAA,GAAkBhI,SAChI,SAAC6E,EAAA,EAAD,CAAgB7S,MAAO,eAAgBxF,UAAWrC,EAAlD,SACG8e,EAAAA,GAAAA,KAAoB,YAAe,IAAD,eAAZC,EAAY,KAARC,EAAQ,KAE3BC,EADYF,IAAOlB,EAAAA,GAAkBmB,GACnB,cAAUD,GAAV,cAAwBA,EAAxB,YAA8BlB,EAAAA,GAAkBmB,IAClEnE,EAAWkE,IAAO3Y,GAAS4Y,IAAOnJ,EACxC,OAAO,SAAC+E,EAAA,EAAD,CAA8BC,SAAUA,EAAUxY,SAAUwY,EAAUtY,QAAS,kBAAM2Q,EAAkB,CAAE9M,MAAO2Y,EAAIlJ,UAAWmJ,KAA/H,SAAuIC,GAAvI,UAAkBF,EAAlB,YAAwBC,sB,ifCvK9B,SAASpT,EAAT,GAAuL,IAAD,EAAnJzJ,EAAmJ,EAAnJA,MAAOC,EAA4I,EAA5IA,SAAU4R,EAAkI,EAAlIA,aAAcC,EAAoH,EAApHA,aAAoH,IAAtGpI,UAAAA,OAAsG,aAAnFqT,WAAAA,OAAmF,aAA/Dte,OAAAA,OAA+D,MAAtD,kBAAM,GAAgD,EAAvCue,GAAuC,YAC3Lrf,GAAMC,EAAAA,EAAAA,GAAe,MAArBD,EACFkF,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,IACtBka,GAAkBnf,EAAAA,EAAAA,GAAWC,EAAAA,GAAAA,OAAuB,IACpDF,GAAiBC,EAAAA,EAAAA,GAAWC,EAAAA,GAAAA,IAAmBiC,GAAQ,CAACA,IACxDkd,EAAgBra,EAASsa,eAAe1e,QAAO,SAAAkT,GAAE,OAAmB,OAAfsL,QAAe,IAAfA,OAAA,EAAAA,EAAkBtL,KAAOlT,EAAOwe,EAAgBtL,GAAKA,MAAKrS,OACrH,OAAO,UAACiZ,EAAA,GAAD,kBACDyE,GADC,IAELtX,MAAK,iBAAE7H,QAAF,IAAEA,OAAF,EAAEA,EAAgBI,YAAlB,QAA2ByL,EAAY/L,EAAH,sCAAmBkU,QAAnB,IAAmBA,EAAAA,EAAgBlU,EAAnC,8BACzCiH,MAAO5E,EAAQ,UAAY,UAC3Bgc,UAAyB,OAAdne,QAAc,IAAdA,GAAAA,EAAgBuf,UAAW,SAACnB,EAAA,EAAD,CAAWpb,IAAKhD,EAAeqe,eAAoBxS,GAAY,SAAC2T,EAAA,EAAD,IAAH,OAAyBvL,QAAzB,IAAyBA,EAAAA,GAAgB,SAACwL,EAAA,EAAD,IAJtI,WAKHP,IAAerT,GAAY,UAAC+O,EAAA,EAAD,CAAUrY,QAAS,kBAAMH,EAAS,KAAKyY,SAAoB,KAAV1Y,EAAcE,SAAoB,KAAVF,EAAzE,WAC3B,SAACud,EAAA,EAAD,WACE,SAACF,EAAA,EAAD,OAEF,SAAC1X,EAAA,EAAD,CAAYzE,QAAQ,UAAUsc,QAAM,EAApC,SACG7f,EADH,qCAGY,UAAC8a,EAAA,EAAD,CAAUrY,QAAS,kBAAMH,EAAS,KAAKyY,SAAoB,KAAV1Y,EAAcE,SAAoB,KAAVF,EAAzE,WACZ,SAACud,EAAA,EAAD,WACE,SAACD,EAAA,EAAD,OAEF,SAAC3X,EAAA,EAAD,CAAYzE,QAAQ,UAAUsc,QAAM,EAApC,SACG7f,EADH,qCAIAof,IAAc,SAAC1Q,EAAA,EAAD,GAAa,SAC1B4Q,GAAmBQ,EAAuBR,EAAiBC,EAAejd,EAAUD,OAKpF,SAASyd,EAAuBR,EAA2DC,EAA+Bjd,GAAqF,IAA/Cyd,EAA8C,uDAAJ,GAC/M,OAAOR,EAAc5c,KAAI,SAAA2Q,GAAY,aACnC,UAACwH,EAAA,EAAD,CAAUrY,QAAS,kBAAMH,EAASgR,IAAkCyH,SAAUgF,IAAyBzM,EAAc/Q,SAAUwd,IAAyBzM,EAAxJ,WACE,SAACsM,EAAA,EAAD,WACE,SAACtB,EAAA,EAAD,CAAWpb,IAAKoc,EAAgBhM,GAAciL,kBAEhD,SAACvW,EAAA,EAAD,CAAYzE,QAAQ,UAAUsc,QAAM,EAApC,gBACGP,QADH,IACGA,GADH,UACGA,EAAkBhM,UADrB,aACG,EAAiChT,SALgBgT,M,4HC9B3C,SAAS0M,EAAT,GAAiG,IAAD,EAA1ExI,EAA0E,EAA1EA,SAAU/U,EAAgE,EAAhEA,QAASoC,EAAuD,EAAvDA,OAAQC,EAA+C,EAA/CA,SAA+C,IAArCmb,SAAAA,OAAqC,SACvG/a,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,IAEtB8a,GADiBC,EAAAA,EAAAA,GAAU3I,GAE3B3U,GAAc1C,EAAAA,EAAAA,GAAiB,OAAN+f,QAAM,IAANA,GAAAA,EAAQhV,IAAMhK,EAAAA,GAAAA,IAAgBgf,EAAOhV,UAAOvF,EAAW,QAACua,QAAD,IAACA,OAAD,EAACA,EAAQhV,MAEzFpK,GAASkM,EAAAA,EAAAA,cACb,SAACoT,GAAD,OAAwBA,EAAGtK,iBAAH,OAAqBjT,QAArB,IAAqBA,OAArB,EAAqBA,EAAanB,cAC1D,CAACmB,IAGGwd,GAAoBrT,EAAAA,EAAAA,cACxB,SAAAwO,GAAQ,OAAI,SAACC,EAAA,EAAD,CAAgBhZ,QAAS,yBAAMA,QAAN,IAAMA,OAAN,EAAMA,EAAU+U,IAAWhX,GAAI,CAAEwC,OAAQ,QAAlE,SAA6EwY,MACzF,CAAC/Y,EAAS+U,IAGN8I,GAActT,EAAAA,EAAAA,cAAY,SAAChB,GAAD,OAAgC9G,EAASqb,kBAAkB/I,EAAUxL,KAAU,CAAC9G,EAAUsS,IAEpHgJ,GAASxP,EAAAA,EAAAA,UAAQ,kBAAMnO,GAAeqd,IAAUO,EAAAA,EAAAA,IAAc,CAAC5d,EAAY4K,MAAMiT,EAAAA,EAAAA,IAAiBR,OAAW,CAACrd,EAAaqd,IAEjI,IAAKA,IAAWrd,IAAgB2d,EAAQ,OAAO,KAC/C,IAAQla,EAA0D4Z,EAA1D5Z,MAAOyP,EAAmDmK,EAAnDnK,UAAW4K,EAAwCT,EAAxCS,WAAYxa,EAA4B+Z,EAA5B/Z,GAAtC,EAAkE+Z,EAAxBngB,SAAAA,OAA1C,MAAqD,GAArD,EAAyDqG,EAAS8Z,EAAT9Z,KACnD0P,GAAgB0K,EAAO/P,IAAIC,EAAAA,GAAAA,OAAAA,MAAmBrO,MAC9C4B,GAAQ,CAACyM,EAAAA,GAAAA,OAAAA,KAAmBA,EAAAA,GAAAA,OAAAA,IAAkBA,EAAAA,GAAAA,OAAAA,MAAmB/N,KAAI,SAAAuV,GAAC,OAAIsI,EAAO/P,IAAIyH,MACrF/U,GAAM4S,EAAY,EAAZ,OAAgBlT,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAaM,IAA7B,OAAmCN,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAa+d,UAE5D,OAAO,SAAC,EAAAjY,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,CAAUtF,QAAQ,cAAc/C,GAAI,CAAE4C,MAAO,OAAQJ,OAAQ,OAAQ8F,UAAW,OAApG,UACL,SAAC+S,EAAA,EAAD,CAAoBC,YAAarZ,EAASsZ,QAASsE,EAAnD,UACE,UAACtX,EAAA,EAAD,CAAWvI,GAAI,CAAEwC,OAAQ,OAAQC,QAAS,OAAQ+F,cAAe,UAAjE,WACE,iBAAK3F,UAAS,eAAUR,EAAYf,OAAtB,QAAd,WACE,SAACuM,EAAA,EAAD,CAAYtG,MAAOlF,EAAYvC,KAAMgO,QAAQ,SAACC,EAAA,EAAD,CAAS/N,GAAI,CAAEuW,SAAU,OAAS7T,IAAG,UAAEM,EAAAA,EAAAA,mBAAF,aAAE,EAAqBsS,MAAoBrH,qBAAsB,CAAElL,QAAS,MAC5J4K,QAAS1L,IAAW,SAACiH,EAAA,EAAD,CAAYzC,MAAM,UAAUxE,QAAS,kBAAMyC,EAAS2b,aAAa,CAAEza,MAAOA,GAAQD,IAAlF,SACjBC,GAAO,SAACwD,EAAA,EAAD,KAAW,SAACC,EAAA,EAAD,SAEvB,UAACC,EAAA,GAAD,CAAM5H,WAAS,EAAC1B,GAAI,CAAEuJ,SAAU,SAAUN,GAAI,GAA9C,WACE,UAACK,EAAA,GAAD,CAAM3H,MAAI,EAACC,SAAU,EAArB,WACE,UAAC4F,EAAA,EAAD,CAAY3H,UAAU,OAAOkD,QAAQ,KAArC,iBAA+C+C,MAC/C,UAAC0B,EAAA,EAAD,CAAY3H,UAAU,OAAOkD,QAAQ,KAAK0D,MAAM,iBAAhD,cAAmE8W,EAAAA,GAAkBhI,OACrF,UAAC/N,EAAA,EAAD,CAAYzE,QAAQ,KAApB,yBAAoC,4BAASod,QAC7C,SAAC3Y,EAAA,EAAD,WAAY,SAAC,IAAD,CAAOvE,MAAOZ,EAAYf,OAAQ4B,SAAO,UAGvD,SAACoG,EAAA,GAAD,CAAM3H,MAAI,EAACD,WAAS,EAAC8H,SAAS,MAAM8W,aAAa,WAAWtgB,GAAI,CAAEyJ,IAAK,GAAvE,UACE,SAACZ,EAAA,EAAD,CAAKhJ,UAAU,MAAM6C,IAAKC,GAAKC,MAAM,OAAOJ,OAAO,kBAIzD,SAACiG,EAAA,EAAD,UACGhF,GAAMtB,KAAI,SAAAiM,GACT,IAAKA,EAAK1D,IAAK,OAAO,KACtB,IAAM6V,GAAa7R,EAAAA,EAAAA,IAAYN,EAAKvM,MAAOuM,EAAKO,KAAoB,SAAdP,EAAKO,KAAkB,OAAIxJ,GACjF,OAAO,UAAC0D,EAAA,EAAD,CAAoB7I,GAAI,CAAEyC,QAAS,QAAnC,WACL,UAAC+E,EAAA,EAAD,CAAY5F,SAAU,EAAtB,UAA0BmU,EAAAA,EAAS3H,EAAK1D,KAAxC,IAA+C9D,EAAAA,GAAAA,IAAWwH,EAAK1D,SAC/D,SAAClD,EAAA,EAAD,UAAa+Y,MAFEnS,EAAK1D,WAO1B,SAAC7B,EAAA,EAAD,CAAKjH,SAAU,KACf,SAAC6G,EAAA,EAAD,CAAazI,GAAI,CAAEyB,GAAI,GAAvB,UACE,UAAC6H,EAAA,GAAD,CAAM5H,WAAS,EAAC1B,GAAI,CAAEuJ,SAAU,UAAhC,WACE,SAACD,EAAA,GAAD,CAAM3H,MAAI,EAACyJ,GAAG,OAAOC,WAAY,EAAjC,SACGoU,GAAW,SAACnU,EAAD,CAAyBtJ,KAAK,QAAQ4c,YAAU,EAACrT,WAAS,EAAC1J,MAAOtC,EAAUuC,SAAUge,EAAaxf,OAAQA,KAAa,SAAChB,EAAA,EAAD,CAAcC,SAAUA,OAE9J,SAAC+J,EAAA,GAAD,CAAM3H,MAAI,EAACC,SAAU,EAAG5B,GAAI,CAAE2K,GAAI,MAClC,SAACrB,EAAA,GAAD,CAAM3H,MAAI,EAACyJ,GAAG,OAAd,UACE,UAACM,EAAA,EAAD,CAAa1L,GAAI,CAAEwC,OAAQ,QAA3B,YACK6B,IAAU,SAACsH,EAAA,EAAD,CAAQlF,MAAM,OAAOzE,KAAK,QAAQC,QAAS,kBAAMoC,EAAOsB,IAAxD,UACX,SAAC,IAAD,CAAiB8B,KAAMmE,EAAAA,IAAQ/I,UAAU,cAExCyB,IAAY,SAACqH,EAAA,EAAD,CAAQlF,MAAM,QAAQzE,KAAK,QAAQC,QAAS,kBAAMqC,EAASqB,IAAK5D,WAAYxC,GAAYqG,EAAxF,UACb,SAAC,IAAD,CAAiB6B,KAAMwE,EAAAA,IAAYpJ,UAAU,+B,4gBC3DhD,SAASkU,EAAT,GAIiB,IAAD,EAHnByJ,EAGmB,EAH7BxJ,SAG6B,IAF7B+E,OAAAA,OAE6B,SAD7Bva,EAC6B,EAD7BA,QAEQyL,GAAStI,EAAAA,EAAAA,YAAWuI,EAAAA,GAApBD,KAEFvI,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,IACtB8a,GAASC,EAAAA,EAAAA,GAAUa,GACzB,SAAoFd,QAApF,IAAoFA,EAAAA,EAAU,GAA9F,IAAQhV,IAAAA,OAAR,MAAc,GAAd,EAAkB5E,EAAlB,EAAkBA,MAAlB,IAAyBqa,WAAAA,OAAzB,MAAsC,EAAtC,MAAyC5K,UAAAA,OAAzC,MAAqD,EAArD,EAAwD3P,GAAxD,EAAwDA,KAAxD,KAA8DrG,SAAAA,QAA9D,OAAyE,GAAzE,GAA6EoG,GAA7E,EAA6EA,GACvEtD,IAAc1C,EAAAA,EAAAA,GAAWe,EAAAA,GAAAA,IAAgBgK,GAAM,CAACA,IAChD4K,GAAa,OAAGjT,SAAH,IAAGA,QAAH,EAAGA,GAAanB,WAE7Buf,IAAiBjU,EAAAA,EAAAA,cAAY,SAACkU,GAClChc,EAAS2b,aAAaK,EAAWF,KAChC,CAACA,EAAc9b,IAEZ4Y,IAAW9Q,EAAAA,EAAAA,cAAY,SAAA1G,GAC3BA,GAAQuE,EAAAA,EAAAA,IAAMvE,EAAO,EAAG,IACxB,IAAMyP,EAAYgI,EAAAA,GAAAA,WAA4B,SAAAC,GAAO,OAAI1X,GAAS0X,KAClEiD,GAAe,CAAE3a,MAAAA,EAAOyP,UAAAA,MACvB,CAACkL,KAEEhD,IAAejR,EAAAA,EAAAA,cAAY,WAC/B,IAAMkR,EAAiBH,EAAAA,GAAAA,WAA4B,SAAAC,GAAO,OAAc,KAAV1X,GAAgBA,IAAU0X,KACtDiD,GAA9BlL,IAAcmI,EAA+B,CAAEnI,UAAWA,EAAY,GACtD,CAAEA,UAAWmI,MAChC,CAAC+C,GAAgBlL,EAAWzP,IAEzBpG,IAAiBC,EAAAA,EAAAA,GAAWJ,GAAWK,EAAAA,GAAAA,IAAmBL,SAAY4F,EAAW,CAAC5F,KAClFiB,GAAed,GAAiB,SAACihB,GAAD,OAAQA,EAAGzf,aAAexB,GAAe4V,oBAAgBnQ,EACzFyb,GAAsBlhB,IAAkBA,GAAe4V,cAEvDwK,IAActT,EAAAA,EAAAA,cAAY,SAAChB,GAAD,OAAgC7F,IAAMjB,EAASqb,kBAAkBpa,GAAI6F,KAAU,CAAC9G,EAAUiB,KACpHrF,IAASkM,EAAAA,EAAAA,cACb,SAACoT,GAAD,OAAwBA,EAAGtK,iBAAH,OAAqBjT,SAArB,IAAqBA,QAArB,EAAqBA,GAAanB,cAC1D,CAACmB,KAEH,IAAkC1B,EAAAA,EAAAA,WAAS,GAA3C,iBAAOwc,GAAP,MAAkBC,GAAlB,MACMza,GAAM4S,EAAY,EAAZ,OAAgBlT,SAAhB,IAAgBA,QAAhB,EAAgBA,GAAaM,IAA7B,OAAmCN,SAAnC,IAAmCA,QAAnC,EAAmCA,GAAa+d,UAEtDS,IAAerQ,EAAAA,EAAAA,UAAQ,kBAAMnO,IAAeqd,IAAUO,EAAAA,EAAAA,IAAc,CAAC5d,GAAY4K,MAAMiT,EAAAA,EAAAA,IAAiBR,OAAW,CAACrd,GAAaqd,IACvI,OAAO,UAAC,IAAD,YACL,SAAC,IAAD,CAAa1f,GAAI,CAAEyB,GAAI,GAAvB,UACE,UAAC,KAAD,CAAMC,WAAS,EAACQ,QAAS,EAAzB,WACE,SAAC,KAAD,CAAMP,MAAI,EAACC,SAAU,EAArB,UACE,UAAC,KAAD,CAAMF,WAAS,EAACQ,QAAS,EAAzB,WACE,UAAC,KAAD,CAAMP,MAAI,EAAV,WACE,SAAC,IAAD,CAAsBxB,KAAMgd,GAAW/c,OAAQ,kBAAMgd,IAAa,IAAQ/c,SAAU,SAAAgX,GAAC,OAAIoJ,GAAe,CAAE/V,IAAK2M,KAAM/W,OAAQE,GAAcA,aAAcogB,MACzJ,UAAC,IAAD,YACE,SAAC,IAAD,CAAQ3e,QAAS,kBAAMmb,IAAa,IAApC,0BAA6C/a,SAA7C,IAA6CA,QAA7C,EAA6CA,GAAavC,YAA1D,QAAkE,qBAClE,UAAC,IAAD,CAAgByH,MAAK,qBAAgB4Y,GAArC,WACE,SAAC,IAAD,wCACA,SAAC,IAAD,KACC,OAAIW,MAAM,GAAGhZ,QAAQ3F,KAAI,SAAAuI,GAAG,OAC3B,SAAC,IAAD,CAAoBzI,QAAS,kBAAMwe,GAAe,CAAEN,WAAYzV,EAAM,KAAM6P,SAAU4F,IAAgBzV,EAAM,EAAI3I,SAAUoe,IAAgBzV,EAAM,EAAhJ,8BACiBA,EAAM,IADRA,gBAMvB,SAAC,KAAD,CAAM/I,MAAI,EAAV,UACE,UAAC,IAAD,CAAa3B,GAAI,CAAEuO,QAAS,SAAA/O,GAAC,OAAIA,EAAEoR,QAAQmQ,aAAa9C,OAAxD,WACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAmBnc,SAAUwb,GAAUzb,MAAOiE,EAC5CuY,eAAe,QACfC,WAAY,CAAEjY,IAAK,EAAGD,IAAK,GAAIpG,GAAI,CAAE4W,UAAW,WAChD5W,GAAI,CAAE4C,MAAO,OAAQJ,OAAQ,OAAQyG,GAAI,QAG7C,SAAC,IAAD,CAAQjJ,GAAI,CAAEiJ,GAAI,GAAKlH,WAAWwc,EAAAA,EAAAA,IAAezY,GAAQ7D,QAASwb,GAAlE,UAAgF,mCAAWF,EAAAA,GAAkBhI,SAC7G,SAAC,IAAD,CAAgBhO,MAAO,eAAvB,SACGiX,EAAAA,GAAAA,KAAoB,YAAe,IAAD,eAAZC,EAAY,KAARC,EAAQ,KAE3BC,EADYF,IAAOlB,EAAAA,GAAkBmB,GACnB,cAAUD,GAAV,cAAwBA,EAAxB,YAA8BlB,EAAAA,GAAkBmB,IAClEnE,EAAWkE,IAAO3Y,GAAS4Y,IAAOnJ,EACxC,OAAO,SAAC,IAAD,CAA8BgF,SAAUA,EAAUxY,SAAUwY,EAAUtY,QAAS,kBAAMwe,GAAe,CAAE3a,MAAO2Y,EAAIlJ,UAAWmJ,KAA5H,SAAoIC,GAApI,UAAkBF,EAAlB,YAAwBC,eAKvC,SAAC,KAAD,CAAM/c,MAAI,EAAV,UACE,SAAC,IAAD,CAAQ8E,MAAM,QAAQxE,QAAS,kBAAM0D,IAAMjB,EAAS2b,aAAa,CAAEza,MAAOA,IAAQD,KAAKkY,UAAWjY,IAAO,SAAC,IAAD,KAAW,SAAC,IAAD,IAApH,SACGA,GAAO,SAAW,sBAKxBpE,IAAW,SAAC,KAAD,CAAMG,MAAI,EAAV,UACZ,SAAC,IAAD,CAAaM,QAAST,MAEvBkD,IAAae,EAAAA,KAAiB,SAAC,KAAD,CAAM9D,MAAI,EAAV,UAC7B,SAACqf,EAAD,CAAS1L,cAAeA,GAAe2L,WAAY,SAAAtb,GAAE,OAAIjB,EAASqb,kBAAkBpa,EAAIsH,EAAKgD,IAAIC,EAAAA,GAAAA,SAAerO,kBAItH,SAAC,IAAD,KACA,SAAC,IAAD,UACGQ,IAAewe,KAAgB,UAAC,IAAD,CAAKpe,QAAQ,OAAOuO,IAAK,CAAE5F,GAAI,EAAG7I,GAAI,IAAKD,GAAI,GAA/C,WAC9B,UAAC,IAAD,CAAKtC,GAAI,CAAEwJ,SAAU,KAAO6B,WAAY,EAAG6V,SAAS,MAApD,WACE,SAAC,IAAD,CAAKrhB,UAAU,MAAM6C,IAAKC,GAAKE,UAAS,eAAUR,GAAYf,OAAtB,QAAoCtB,GAAI,CAAEwJ,SAAU,IAAK5G,MAAO,OAAQJ,OAAQ,OAAQiU,aAAc,MAC9I,SAAC,IAAD,WAAY,2BAAQpU,GAAY8e,oBAElC,UAAC,IAAD,CAAKnhB,GAAI,CAAE0J,IAAK,GAAK9H,SAAU,EAA/B,WACE,UAAC,IAAD,CAAYmB,QAAQ,KAApB,WAA2Bqe,EAAgG/e,GAAYvC,KAAvI,QAAkJ4f,GAAUhf,EAAAA,GAAAA,eAA2Bgf,GAAvL,IAAiMrd,GAAYf,OAAS,IAAK,UAAC,IAAD,CAASmF,MAAM,OAAf,wBAAkC0Z,SAC7P,SAAC,IAAD,WAAY,SAAC,IAAD,CAAOld,MAAOZ,GAAYf,YACtC,SAAC,IAAD,CAAYyB,QAAQ,YAApB,SAAiCV,GAAYgf,eAC7C,SAAC,IAAD,CAAYC,cAAY,EAAxB,SAA0Bjf,GAAYgf,aAAehf,GAAYkf,mBAAmBV,GAAa5Q,IAAIC,EAAAA,GAAAA,OAAAA,aAA0BrO,UAC/H,UAAC,IAAD,CAAKY,QAAQ,OAAO+F,cAAc,SAASwI,IAAK,EAAhD,WACE,UAAC,IAAD,YACE,SAAC,IAAD,WACE,SAAC,IAAD,4BAEF,SAAC,KAAD,UACG,CAACd,EAAAA,GAAAA,OAAAA,KAAmBA,EAAAA,GAAAA,OAAAA,IAAkBA,EAAAA,GAAAA,OAAAA,MAAmB/N,KAAI,SAACiM,EAAMpE,GACnE,IAAMqI,EAAIwO,GAAa5Q,IAAI7B,GAC3B,OAAIiE,EAAEhE,UAAYgE,EAAExQ,MAAc,MAC3B,SAAC,KAAD,CAA8BuM,KAAMiE,EAAGxS,UAAW2hB,EAAAA,IAA3BnP,EAAE3H,aAIrCuC,GAAQ5K,GAAYoS,WAAY,SAAC,IAAD,CAAiBtH,SAAU9K,GAAYoS,sBAK/EsH,GAAUpW,KAAM,SAAC,IAAD,CAAa3F,GAAI,CAAEyB,GAAI,GAAvB,UACf,UAAC,KAAD,CAAMC,WAAS,EAAf,WACE,SAAC,KAAD,CAAMC,MAAI,EAACC,SAAU,EAArB,UACE,SAAC,IAAD,CAAyBgd,YAAU,EAACrT,WAAS,EAAC1J,MAAOtC,GAAUuC,SAAUge,GAAaxf,OAAQA,SAE7FkB,IAAW,SAAC,KAAD,CAAMG,MAAI,EAAV,UAAW,SAAC,IAAD,CAAawB,OAAK,EAAClB,QAAST,cAK7D,SAASwf,EAAT,GAAiD,IAA9BC,EAA6B,EAA7BA,WAAY3L,EAAiB,EAAjBA,cACvB5Q,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,IAC5B,GAAwBjE,EAAAA,EAAAA,WAAS,GAAjC,eAAOR,EAAP,KAAashB,EAAb,KAEMC,EAAQ,kBAAMD,GAAQ,IAEtBE,EAAe,SAAChc,GACpBsb,EAAWtb,GACX+b,KAGIjhB,GAAed,EAAAA,EAAAA,GAAWe,EAAAA,GAAAA,OAAoB,IAE9CI,EAAe4D,EAASkd,QAAQ9Z,KAAKxH,QAAO,SAAAW,GAAS,IAAD,EAClD4gB,EAAWnd,EAASod,WAAW7gB,GACrC,QAAK4gB,KACDvM,GAAiBA,KAAa,OAAK7U,QAAL,IAAKA,GAAL,UAAKA,EAAeohB,EAASnX,YAA7B,aAAK,EAA8BxJ,gBAKvE,OAAO,iCACL,SAAC,IAAD,CAAQuF,MAAM,OAAOxE,QAnBV,kBAAMwf,GAAQ,IAmBW5D,WAAW,SAAC,IAAD,IAA/C,0BACA,SAAC,IAAD,CAActc,KAAMpB,EAAMqB,QAASkgB,EAAnC,UACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAa1hB,GAAI,CAAEyB,GAAI,GAAvB,UACE,UAAC,KAAD,CAAMC,WAAS,EAAf,WACE,SAAC,KAAD,CAAMC,MAAI,EAACC,SAAU,EAArB,UACE,UAAC,IAAD,CAAYmB,QAAQ,KAApB,UAA0BuS,GAAgB,SAAC,IAAD,CAAS5S,IAAKM,EAAAA,EAAAA,YAAmBsS,KAAqB,KAAhG,qBAEF,SAAC,KAAD,CAAM3T,MAAI,EAAV,UACE,SAAC,IAAD,CAAaM,QAASyf,YAI5B,SAAC,IAAD,KACA,SAAC,IAAD,WACE,SAAC,KAAD,CAAMhgB,WAAS,EAACQ,QAAS,EAAzB,SACGpB,EAAaqB,KAAI,SAAA6U,GAAQ,OACxB,SAAC,KAAD,CAAMrV,MAAI,EAAgByJ,GAAI,EAAG2F,GAAI,EAAGxO,GAAI,EAAGD,GAAI,EAAnD,UACE,SAAC,IAAD,CACE0U,SAAUA,EACV/U,QAAS0f,KAHG3K,oB,0FCjNf,SAAS2I,IAA8C,IAApCoC,EAAmC,uDAAJ,GACzDrd,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,IAC5B,GAA4BjE,EAAAA,EAAAA,UAAS+D,EAASod,WAAWC,IAAzD,eAAOrC,EAAP,KAAesC,EAAf,KAKA,OAJAnhB,EAAAA,EAAAA,YAAU,kBAAMmhB,EAAUtd,EAASod,WAAWC,MAAY,CAACrd,EAAUqd,KACrElhB,EAAAA,EAAAA,YAAU,kBACRkhB,EAAWrd,EAASud,aAAaF,EAAUC,QAAa7c,IACxD,CAAC4c,EAAUC,EAAWtd,IACjBgb","sources":["Components/Character/LocationName.tsx","Components/Weapon/WeaponSelectionModal.tsx","Stat.tsx","Data/Characters/SheetUtil.tsx","PageArtifact/ArtifactCard.tsx","ReactHooks/useArtifact.tsx","PageArtifact/PercentBadge.tsx","Components/FormulaCalcCard.tsx","PageCharacter/CharacterDisplay/CharacterArtifactPane.tsx","PageCharacter/CharacterDisplay/CharacterTeamBuffsPane.tsx","PageCharacter/CharacterDisplay/CharacterOverviewPane.tsx","PageCharacter/CharacterDisplay/CharacterTalentPane.tsx","PageCharacter/CharacterDisplayCard.tsx","Components/Character/CharacterDropdownButton_WR.tsx","PageWeapon/WeaponCard.tsx","PageWeapon/WeaponDisplayCard.tsx","ReactHooks/useWeapon.tsx"],"sourcesContent":["import { BusinessCenter } from \"@mui/icons-material\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\n\r\nexport default function LocationName({ location }) {\r\n  const { t } = useTranslation(\"ui\");\r\n  const characterSheet = usePromise(CharacterSheet.get(location ?? \"\"), [location])\r\n  return <Typography component=\"span\">\r\n    {characterSheet?.name ? characterSheet.nameWIthIcon : <span><BusinessCenter sx={{ verticalAlign: \"text-bottom\" }} /> {t`inventory`}</span>}\r\n  </Typography>\r\n\r\n}\r\n","import { Box, CardActionArea, CardContent, Divider, Grid, Typography } from \"@mui/material\"\r\nimport { useEffect, useState } from \"react\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { allWeaponKeys, WeaponKey, WeaponTypeKey } from \"../../Types/consts\"\r\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\"\r\nimport CardDark from \"../Card/CardDark\"\r\nimport CardLight from \"../Card/CardLight\"\r\nimport CloseButton from \"../CloseButton\"\r\nimport ImgIcon from \"../Image/ImgIcon\"\r\nimport ModalWrapper from \"../ModalWrapper\"\r\nimport { Stars } from \"../StarDisplay\"\r\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\"\r\n\r\ntype WeaponSelectionModalProps = {\r\n  show: boolean,\r\n  onHide: () => void,\r\n  onSelect: (wKey: WeaponKey) => void,\r\n  filter?: (sheet: WeaponSheet) => boolean,\r\n  weaponFilter?: WeaponTypeKey,\r\n}\r\n\r\nexport default function WeaponSelectionModal({ show, onHide, onSelect, filter = () => true, weaponFilter: propWeaponFilter }: WeaponSelectionModalProps) {\r\n  const weaponSheets = usePromise(WeaponSheet.getAll, [])\r\n  const [weaponFilter, setWeaponfilter] = useState<WeaponTypeKey | \"\">(propWeaponFilter ?? \"\")\r\n\r\n  useEffect(() => propWeaponFilter && setWeaponfilter(propWeaponFilter), [propWeaponFilter])\r\n\r\n  const weaponIdList = !weaponSheets ? [] : [...new Set(allWeaponKeys)].filter(wKey => filter(weaponSheets[wKey]))\r\n    .filter(wKey => {\r\n      if (weaponFilter && weaponFilter !== weaponSheets?.[wKey]?.weaponType) return false\r\n      return true\r\n    })\r\n    .sort((a, b) => (weaponSheets?.[b]?.rarity ?? 0) - (weaponSheets?.[a]?.rarity ?? 0))\r\n\r\n  if (!weaponSheets) return null\r\n\r\n  return <ModalWrapper open={show} onClose={onHide}>\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container>\r\n          <Grid item flexGrow={1}>\r\n            <WeaponToggle value={weaponFilter} onChange={setWeaponfilter} disabled={!!propWeaponFilter} size=\"small\" />\r\n          </Grid >\r\n          <Grid item>\r\n            <CloseButton onClick={onHide} />\r\n          </Grid >\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent><Grid container spacing={1}>\r\n        {weaponIdList.map(weaponKey => {\r\n          const weaponSheet = weaponSheets[weaponKey]\r\n          return <Grid item key={weaponKey} lg={3} md={4}>\r\n            <CardLight sx={{ height: \"100%\" }} >\r\n              <CardActionArea onClick={() => { onHide(); onSelect(weaponKey) }} sx={{ display: \"flex\" }}>\r\n                <Box component=\"img\" src={weaponSheet.img} sx={{ width: 100, height: \"auto\" }} className={` grad-${weaponSheet.rarity}star`} />\r\n                <Box sx={{ flexGrow: 1, px: 1 }}>\r\n                  <Typography variant=\"subtitle1\">{weaponSheet.name}</Typography>\r\n                  <Typography><ImgIcon src={Assets.weaponTypes?.[weaponSheet.weaponType]} /> <Stars stars={weaponSheet.rarity} colored /></Typography>\r\n                </Box>\r\n              </CardActionArea>\r\n            </CardLight>\r\n          </Grid>\r\n        })}\r\n      </Grid></CardContent>\r\n      <Divider />\r\n      <CardContent sx={{ py: 1 }}>\r\n        <CloseButton large onClick={onHide} />\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n","/**\r\n * @deprecated\r\n */\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static printStat = (statKey, stats, premod = false) => <></>\r\n}\r\n","import Assets from \"../../Assets/Assets\";\r\nimport { getTalentStatKey, getTalentStatKeyVariant } from \"../../PageBuild/Build\";\r\nimport ImgIcon from \"../../Components/Image/ImgIcon\";\r\nimport SqBadge from \"../../Components/SqBadge\";\r\nimport { Translate } from \"../../Components/Translate\";\r\nimport Stat from \"../../Stat\";\r\nimport { DocumentSection, TalentSheetElement, TalentSheetElementKey } from \"../../Types/character\";\r\nimport { ElementKey, WeaponTypeKey } from \"../../Types/consts\";\r\nimport IConditional from \"../../Types/IConditional\";\r\n/**\r\n * @deprecated\r\n */\r\nexport const st = (strKey: string) => <Translate ns=\"sheet\" key18={strKey} />\r\n/**\r\n * @deprecated\r\n */\r\nexport const sgt = (strKey: string) => <Translate ns=\"sheet_gen\" key18={strKey} />\r\n\r\n//this template only works if there is no variation in normal attacks.(no multi hits)\r\n/**\r\n * @deprecated\r\n */\r\nexport const normalDocSection = (tr, formula, data) => ({\r\n  text: tr(`auto.fields.normal`),\r\n  fields: data.normal.hitArr.map((percentArr, i) =>\r\n  ({\r\n    text: sgt(`normal.hit${i + 1}`),\r\n    formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"normal\", stats), stats)}</span>,\r\n    formula: formula.normal[i],\r\n    variant: stats => getTalentStatKeyVariant(\"normal\", stats),\r\n  }))\r\n})\r\n/**\r\n * @deprecated\r\n */\r\nexport const chargedDocSection = (tr, formula, data, stamina = 25): DocumentSection => ({\r\n  text: tr(`auto.fields.charged`),\r\n  fields: [{\r\n    text: sgt(`charged.dmg`),\r\n    formulaText: stats => <span>{data.charged.dmg[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n    formula: formula.charged.dmg,\r\n    variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n  }, {\r\n    text: sgt(\"charged.stamina\"),\r\n    value: stamina,\r\n  }]\r\n})\r\n/**\r\n * @deprecated\r\n */\r\nexport const chargedHitsDocSection = (tr, formula, data, stamina = 20): DocumentSection => ({\r\n  text: tr(`auto.fields.charged`),\r\n  fields: [...data.charged.hitArr.map((percentArr, i) =>\r\n  ({\r\n    text: sgt(`normal.hit${i + 1}`),\r\n    formulaText: stats => <span>{percentArr[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n    formula: formula.charged[i],\r\n    variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n  })), {\r\n    text: sgt(\"charged.stamina\"),\r\n    value: stamina\r\n  }]\r\n})\r\n/**\r\n * @deprecated\r\n */\r\nexport const plungeDocSection = (tr, formula, data): DocumentSection => ({\r\n  text: tr`auto.fields.plunging`,\r\n  fields: [{\r\n    text: sgt(`plunging.dmg`),\r\n    formulaText: stats => <span>{data.plunging.dmg[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n    formula: formula.plunging.dmg,\r\n    variant: stats => getTalentStatKeyVariant(\"plunging\", stats),\r\n  }, {\r\n    text: sgt(\"plunging.low\"),\r\n    formulaText: stats => <span>{data.plunging.low[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n    formula: formula.plunging.low,\r\n    variant: stats => getTalentStatKeyVariant(\"plunging\", stats),\r\n  }, {\r\n    text: sgt(\"plunging.high\"),\r\n    formulaText: stats => <span>{data.plunging.high[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"plunging\", stats), stats)}</span>,\r\n    formula: formula.plunging.high,\r\n    variant: stats => getTalentStatKeyVariant(\"plunging\", stats),\r\n  }]\r\n})\r\n/**\r\n * @deprecated\r\n */\r\nexport const claymoreChargedDocSection = (tr, formula, data): DocumentSection => ({\r\n  text: tr(\"auto.fields.charged\"),\r\n  fields: [{\r\n    text: sgt(\"charged.spinning\"),\r\n    formulaText: stats => <span>{data.charged.spinning[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n    formula: formula.charged.spinning,\r\n    variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n  }, {\r\n    text: sgt(\"charged.final\"),\r\n    formulaText: stats => <span>{data.charged.final[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n    formula: formula.charged.final,\r\n    variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n  }, {\r\n    text: sgt(\"charged.stamina\"),\r\n    value: data.charged.stam ?? 40,\r\n    unit: \"/s\"\r\n  }, {\r\n    text: sgt(\"maxDuration\"),\r\n    value: data.charged.maxDuration ?? 5,\r\n    unit: \"s\"\r\n  }]\r\n})\r\n/**\r\n * @deprecated\r\n */\r\nexport const bowChargedDocSection = (tr, formula, data, elementKey: ElementKey): DocumentSection => ({\r\n  text: tr(\"auto.fields.charged\"),\r\n  fields: [{\r\n    text: sgt(\"charged.aimed\"),\r\n    formulaText: stats => <span>{data.charged.hit[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats), stats)}</span>,\r\n    formula: formula.charged.hit,\r\n    variant: stats => getTalentStatKeyVariant(\"charged\", stats),\r\n  }, {\r\n    text: sgt(\"charged.fullyAimed\"),\r\n    formulaText: stats => <span>{data.charged.full[stats.tlvl.auto]}% {Stat.printStat(getTalentStatKey(\"charged\", stats, elementKey), stats)}</span>,\r\n    formula: formula.charged.full,\r\n    variant: stats => getTalentStatKeyVariant(\"charged\", stats, elementKey),\r\n  }]\r\n})\r\ntype BoostKey = \"autoBoost\" | \"skillBoost\" | \"burstBoost\"\r\n/**\r\n * @deprecated\r\n */\r\nexport const talentTemplate = (talentKey: TalentSheetElementKey, tr: (string) => Displayable, img: string, boostKey?: BoostKey, boostAmt: number = 3): TalentSheetElement => ({\r\n  name: tr(`${talentKey}.name`),\r\n  img,\r\n  sections: [{\r\n    text: tr(`${talentKey}.description`),\r\n    ...(boostKey ? {\r\n      conditional: {\r\n        key: boostKey,\r\n        canShow: stats => stats.constellation >= parseInt(talentKey.split(\"constellation\")[1] ?? 3),\r\n        maxStack: 0,\r\n        stats: {\r\n          [boostKey]: boostAmt\r\n        }\r\n      }\r\n    } : {})\r\n  }],\r\n})\r\n\r\nconst talentStrMap: Record<TalentSheetElementKey, string> = {\r\n  auto: \"Auto\",\r\n  skill: \"Skill\",\r\n  burst: \"Burst\",\r\n  passive: \"Passive\",\r\n  passive1: \"Ascension 1\",\r\n  passive2: \"Ascension 4\",\r\n  passive3: \"Passive\",\r\n  sprint: \"Sprint\",\r\n  constellation1: \"C1\",\r\n  constellation2: \"C2\",\r\n  constellation3: \"C3\",\r\n  constellation4: \"C4\",\r\n  constellation5: \"C5\",\r\n  constellation6: \"C6\"\r\n}\r\n/**\r\n * @deprecated\r\n */\r\nexport const conditionalHeader = (talentKey: TalentSheetElementKey, tr: (string) => Displayable, img: string): IConditional[\"header\"] => {\r\n  return {\r\n    title: tr(`${talentKey}.name`),\r\n    icon: <ImgIcon size={2} sx={{ m: -1 }} src={img} />,\r\n    action: <SqBadge color=\"success\">{talentStrMap[talentKey]}</SqBadge>,\r\n  }\r\n}\r\n/**\r\n * @deprecated\r\n */\r\nexport const normalSrc = (weaponKey: WeaponTypeKey) => Assets.weaponTypes[weaponKey]\r\n","import { faBan, faChartLine, faEdit, faInfoCircle, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Lock, LockOpen } from '@mui/icons-material';\r\nimport { Box, Button, ButtonGroup, CardActions, CardContent, CardMedia, Chip, Grid, IconButton, Skeleton, Tooltip, Typography } from '@mui/material';\r\nimport React, { Suspense, useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport SlotNameWithIcon from '../Components/Artifact/SlotNameWIthIcon';\r\nimport BootstrapTooltip from '../Components/BootstrapTooltip';\r\nimport CardLight from '../Components/Card/CardLight';\r\nimport CharacterDropdownButton from '../Components/Character/CharacterDropdownButton';\r\nimport LocationName from '../Components/Character/LocationName';\r\nimport ColorText from '../Components/ColoredText';\r\nimport SqBadge from '../Components/SqBadge';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Artifact from '../Data/Artifacts/Artifact';\r\nimport { ArtifactSheet } from '../Data/Artifacts/ArtifactSheet';\r\nimport { database as localDatabase, DatabaseContext } from '../Database/Database';\r\nimport KeyMap, { cacheValueString } from '../KeyMap';\r\nimport useArtifact from '../ReactHooks/useArtifact';\r\nimport usePromise from '../ReactHooks/usePromise';\r\nimport { allSubstats, ICachedArtifact, ICachedSubstat, SubstatKey } from '../Types/artifact';\r\nimport { CharacterKey } from '../Types/consts';\r\nimport { clamp, clamp01 } from '../Util/Util';\r\nimport PercentBadge from './PercentBadge';\r\nimport { probability } from './RollProbability';\r\n\r\ntype Data = {\r\n  artifactId?: string,\r\n  artifactObj?: ICachedArtifact,\r\n  onEdit?: (string) => void,\r\n  onDelete?: (string) => void, mainStatAssumptionLevel?: number,\r\n  effFilter?: Set<SubstatKey>,\r\n  probabilityFilter?: Dict<SubstatKey, number>\r\n}\r\nconst allSubstatFilter = new Set(allSubstats)\r\n\r\nexport default function ArtifactCard({ artifactId, artifactObj, onEdit, onDelete, mainStatAssumptionLevel = 0, effFilter = allSubstatFilter, probabilityFilter }: Data): JSX.Element | null {\r\n  const { t } = useTranslation([\"artifact\"]);\r\n  const database = useContext(DatabaseContext)\r\n  const databaseArtifact = useArtifact(artifactId)\r\n  const sheet = usePromise(ArtifactSheet.get((artifactObj ?? databaseArtifact)?.setKey), [artifactObj, databaseArtifact])\r\n  const equipOnChar = (charKey: CharacterKey | \"\") => database.setArtLocation(artifactId!, charKey)\r\n\r\n  const editable = !artifactObj && database === localDatabase // dont allow edit for flex artifacts\r\n  const art = artifactObj ?? databaseArtifact\r\n  if (!art) return null\r\n\r\n  const { id, lock, slotKey, rarity, level, mainStatKey, substats, exclude, location = \"\" } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\r\n  const levelVariant = \"roll\" + (Math.floor(Math.max(level, 0) / 4) + 1)\r\n  const mainStatVal = <ColorText color={mainStatLevel !== level ? \"warning\" : undefined}>{cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, KeyMap.unit(mainStatKey))}</ColorText>\r\n  const { currentEfficiency, maxEfficiency } = Artifact.getArtifactEfficiency(art, effFilter)\r\n  const artifactValid = maxEfficiency !== 0\r\n  const slotName = sheet?.getSlotName(slotKey) || \"Unknown Piece Name\"\r\n  const slotDesc = sheet?.getSlotDesc(slotKey)\r\n  const slotDescTooltip = slotDesc && <BootstrapTooltip placement=\"top\" title={<Typography>{slotDesc}</Typography>}>\r\n    <span><FontAwesomeIcon icon={faInfoCircle} /></span>\r\n  </BootstrapTooltip>\r\n  const setEffects = sheet?.setEffects\r\n  const setDescTooltip = sheet && setEffects && <BootstrapTooltip placement=\"top\" title={\r\n    <span>\r\n      {Object.keys(setEffects).map(setNumKey => <span key={setNumKey}>\r\n        <Typography variant=\"h6\"><SqBadge color=\"success\">{t(`setEffectNum`, { setNum: setNumKey })}</SqBadge></Typography>\r\n        <Typography>{sheet.setEffectDesc(setNumKey as any)}</Typography>\r\n      </span>)}\r\n    </span>\r\n  }>\r\n    <span><FontAwesomeIcon icon={faInfoCircle} /></span>\r\n  </BootstrapTooltip>\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 350 }} />}>\r\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n      <CardContent className={`grad-${rarity}star`} sx={{ pt: 1, pb: 0, pr: 0 }}>\r\n        <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\", pr: 1 }}>\r\n          <Chip size=\"small\" label={<strong>{` +${level}`}</strong>} color={levelVariant as any} />\r\n          <Typography sx={{ pl: 1, flexGrow: 1 }}>{slotName} {slotDescTooltip}</Typography>\r\n          <IconButton color=\"primary\" disabled={!editable} onClick={() => database.updateArt({ lock: !lock }, id)}>\r\n            {lock ? <Lock /> : <LockOpen />}\r\n          </IconButton>\r\n        </Box>\r\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\r\n          <Grid item flexGrow={1}>\r\n            <Typography color=\"text.secondary\" variant=\"body2\">\r\n              <SlotNameWithIcon slotKey={slotKey} />\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              {KeyMap.get(mainStatKey)}\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <strong>{mainStatVal}</strong>\r\n            </Typography>\r\n            <Stars stars={rarity} colored />\r\n            {/* {process.env.NODE_ENV === \"development\" && <Typography color=\"common.black\">{id || `\"\"`} </Typography>} */}\r\n          </Grid>\r\n          <Grid item maxWidth=\"40%\" sx={{ mt: -3, mb: -1, pl: -2 }} alignSelf=\"flex-end\">\r\n            <CardMedia\r\n              component=\"img\"\r\n              image={sheet?.slotIcons[slotKey] ?? \"\"}\r\n              width=\"100%\"\r\n              height=\"auto\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardContent sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\", pt: 1, pb: 0 }}>\r\n        {substats.map((stat: ICachedSubstat, i) => {\r\n          if (!stat.value) return null\r\n          const numRolls = stat.rolls?.length ?? 0\r\n          const rollColor = `roll${clamp(numRolls, 1, 6)}`\r\n          const efficiency = stat.efficiency ?? 0\r\n          const effOpacity = clamp01(0.5 + (efficiency / (100 * 5)) * 0.5) //divide by 6 because an substat can have max 6 rolls\r\n          const statName = KeyMap.get(stat.key)\r\n          return (<Box key={i} sx={{ display: \"flex\" }}>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n              <SqBadge color={(numRolls ? rollColor : \"error\") as any} sx={{ mr: 1 }}><strong>{numRolls ? numRolls : \"?\"}</strong></SqBadge>\r\n              <Typography color={(numRolls ? `${rollColor}.main` : \"error.main\") as any} component=\"span\">{statName}{`+${cacheValueString(stat.value, KeyMap.unit(stat.key))}`}</Typography>\r\n            </Box>\r\n            <Typography sx={{ opacity: effOpacity }}>{stat.key && effFilter.has(stat.key) ? `${efficiency.toFixed()}%` : \"-\"}</Typography>\r\n          </Box>)\r\n        })}\r\n        <Box sx={{ display: \"flex\", my: 1 }}>\r\n          <Typography color=\"text.secondary\" component=\"span\" variant=\"caption\" sx={{ flexGrow: 1 }}>{t`editor.curSubEff`}</Typography>\r\n          <PercentBadge value={currentEfficiency} max={900} valid={artifactValid} />\r\n        </Box>\r\n        {currentEfficiency !== maxEfficiency && <Box sx={{ display: \"flex\", mb: 1 }}>\r\n          <Typography color=\"text.secondary\" component=\"span\" variant=\"caption\" sx={{ flexGrow: 1 }}>{t`editor.maxSubEff`}</Typography>\r\n          <PercentBadge value={maxEfficiency} max={900} valid={artifactValid} />\r\n        </Box>}\r\n        <Box flexGrow={1} />\r\n        {probabilityFilter && <strong>Probability: {(probability(art, probabilityFilter) * 100).toFixed(2)}%</strong>}\r\n        <Typography color=\"success.main\">{sheet?.name ?? \"Artifact Set\"} {setDescTooltip}</Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\r\n          <Grid item xs=\"auto\" flexShrink={1}>\r\n            {editable ?\r\n              <CharacterDropdownButton size=\"small\" inventory value={location} onChange={equipOnChar} /> : <LocationName location={location} />}\r\n          </Grid>\r\n          <Grid item flexGrow={1} sx={{ mr: 1 }} />\r\n          {editable && <Grid item xs=\"auto\">\r\n            <ButtonGroup sx={{ height: \"100%\" }}>\r\n              {!!onEdit && <Button color=\"info\" onClick={() => onEdit(id)} size=\"small\">\r\n                <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n              </Button>}\r\n              <Tooltip title={<Typography>{t`excludeArtifactTip`}</Typography>} placement=\"top\" arrow>\r\n                <Button onClick={() => database.updateArt({ exclude: !exclude }, id)} color={exclude ? \"error\" : \"success\"} size=\"small\">\r\n                  <FontAwesomeIcon icon={exclude ? faBan : faChartLine} className=\"fa-fw\" />\r\n                </Button>\r\n              </Tooltip>\r\n              {!!onDelete && <Button color=\"error\" size=\"small\" onClick={() => onDelete(id)} disabled={lock}>\r\n                <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n              </Button>}\r\n            </ButtonGroup>\r\n          </Grid>}\r\n        </Grid>\r\n      </CardActions>\r\n    </CardLight >\r\n  </Suspense>\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\n\r\nexport default function useArtifact(artifactID: string | undefined = \"\") {\r\n  const database = useContext(DatabaseContext)\r\n  const [artifact, setArtifact] = useState(database._getArt(artifactID))\r\n  useEffect(() => setArtifact(database._getArt(artifactID)), [database, artifactID])\r\n  useEffect(() =>\r\n    artifactID ? database.followArt(artifactID, setArtifact) : undefined,\r\n    [artifactID, setArtifact, database])\r\n  return artifact\r\n}","import SqBadge from '../Components/SqBadge';\r\nimport { clamp } from '../Util/Util';\r\n\r\nexport default function PercentBadge({ value, max = 1, valid }: {\r\n  valid?: boolean,\r\n  value: number | string,\r\n  max?: number\r\n}) {\r\n  let [badgeColor, text] = typeof value === 'number' ?\r\n    [`roll${clamp(Math.floor((value / max) * 10) - 4, 1, 6)}`, value.toFixed(2) + \"%\"] : [\"secondary\", value]\r\n  if (!valid) badgeColor = \"error\"\r\n  return <SqBadge color={badgeColor} >{text}</SqBadge>\r\n}\r\n","import { ExpandMore } from \"@mui/icons-material\"\r\nimport { Accordion, AccordionDetails, AccordionSummary, Box, CardContent, CardHeader, Collapse, Divider, Grid, Skeleton, Typography } from \"@mui/material\"\r\nimport { Suspense, useCallback, useContext, useState } from \"react\"\r\nimport { DataContext } from \"../DataContext\"\r\nimport { getDisplayHeader, getDisplaySections } from \"../Formula/DisplayUtil\"\r\nimport { DisplaySub } from \"../Formula/type\"\r\nimport { NodeDisplay } from \"../Formula/uiData\"\r\nimport KeyMap, { valueString } from \"../KeyMap\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport CardDark from \"./Card/CardDark\"\r\nimport CardLight from \"./Card/CardLight\"\r\nimport ColorText from \"./ColoredText\"\r\nimport ExpandButton from \"./ExpandButton\"\r\nimport ImgIcon from \"./Image/ImgIcon\"\r\n\r\nexport default function FormulaCalcCard() {\r\n  const [expanded, setexpanded] = useState(false)\r\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Grid container>\r\n        <Grid item flexGrow={1}>\r\n          <Typography>Formulas {\"&\"} Calculations</Typography>\r\n          <Typography variant=\"caption\" color=\"text.secondary\">Expand to see every formula and all their calculations.</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <ExpandButton\r\n            expand={expanded}\r\n            onClick={toggle}\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\"\r\n          >\r\n            <ExpandMore />\r\n          </ExpandButton>\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n      <CardContent sx={{ pt: 0 }}>\r\n        <CalculationDisplay />\r\n      </CardContent>\r\n    </Collapse>\r\n  </CardLight>\r\n}\r\n\r\nfunction CalculationDisplay() {\r\n  const { data } = useContext(DataContext)\r\n  const sections = getDisplaySections(data)\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />} >\r\n    <Box sx={{ mr: -1, mb: -1 }}>\r\n      {sections.map(([key, Nodes]) =>\r\n        <FormulaCalc key={key} displayNs={Nodes} sectionKey={key} />)}\r\n    </Box>\r\n  </Suspense>\r\n}\r\nfunction FormulaCalc({ sectionKey, displayNs }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\r\n  const { data } = useContext(DataContext)\r\n  const header = usePromise(getDisplayHeader(data, sectionKey), [data, sectionKey])\r\n  if (!header) return null\r\n  const { title, icon, action } = header\r\n  return <CardDark sx={{ mb: 1 }}>\r\n    <CardHeader avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action} titleTypographyProps={{ variant: \"subtitle1\" }} />\r\n    <Divider />\r\n    <CardContent>\r\n      {Object.entries(displayNs).map(([key, node]) =>\r\n        !node.isEmpty && <Accordion sx={{ bgcolor: \"contentLight.main\" }} key={key}>\r\n          <AccordionSummary expandIcon={<ExpandMore />}>\r\n            <Typography><ColorText color={node.variant}>{KeyMap.get(node.key ?? \"\")}</ColorText> <strong>{valueString(node.value, node.unit)}</strong></Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            {node.formulas.map((subform, i) => <Typography key={i}>{subform}</Typography>)}\r\n          </AccordionDetails>\r\n        </Accordion>)}\r\n    </CardContent>\r\n  </CardDark>\r\n}\r\n","import { Button, Card, CardContent, CardHeader, Divider, Grid, Typography } from '@mui/material';\r\nimport { useCallback, useContext, useEffect, useMemo } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ArtifactCard from '../../PageArtifact/ArtifactCard';\r\nimport { ArtifactSheet } from '../../Data/Artifacts/ArtifactSheet';\r\nimport SetEffectDisplay from '../../Components/Artifact/SetEffectDisplay';\r\nimport CardLight from '../../Components/Card/CardLight';\r\nimport ImgIcon from '../../Components/Image/ImgIcon';\r\nimport { database as localDatabase, DatabaseContext } from '../../Database/Database';\r\nimport { DataContext } from '../../DataContext';\r\nimport { uiInput as input } from '../../Formula';\r\nimport useForceUpdate from '../../ReactHooks/useForceUpdate';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { allSlotKeys, SlotKey } from '../../Types/consts';\r\nimport { objectKeyMap } from '../../Util/Util';\r\nimport StatDisplayComponent from '../../Components/Character/StatDisplayComponent';\r\n\r\nfunction CharacterArtifactPane({ newBuild = false }: { newBuild?: boolean }) {\r\n  const { data, character, mainStatAssumptionLevel } = useContext(DataContext)\r\n\r\n  const database = useContext(DatabaseContext)\r\n  const history = useHistory()\r\n  const edit = useCallback(\r\n    artid => history.push({\r\n      pathname: \"/artifact\",\r\n      artToEditId: artid\r\n    } as any), [history])\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll, [])\r\n\r\n  // TODO: We can also listen only to equipped artifacts\r\n  const [, updateArt] = useForceUpdate()\r\n  useEffect(() => database.followAnyArt(updateArt))\r\n\r\n  const equipArts = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to equip this artifact build to this character?\")) return\r\n    const newBuild = Object.fromEntries(allSlotKeys.map(s => [s, data.get(input.art[s].id).value])) as Record<SlotKey, string>\r\n    database.equipArtifacts(character.key, newBuild)\r\n  }, [character, data, database])\r\n\r\n  const unequipArts = useCallback(() => {\r\n    if (!character) return\r\n    if (!window.confirm(\"Do you want to move all currently equipped artifacts to inventory?\")) return\r\n    database.equipArtifacts(character.key, objectKeyMap(allSlotKeys, _ => \"\"))\r\n  }, [character, database])\r\n  const artIds = allSlotKeys.map(slotKey => data.get(input.art[slotKey].id).value)\r\n  const setEffects = useMemo(() => artifactSheets && ArtifactSheet.setEffects(artifactSheets, data), [artifactSheets, data])\r\n  return <>\r\n    <CardLight sx={{ mb: 1 }}>\r\n      <CardContent>\r\n        <StatDisplayComponent />\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container spacing={1}>\r\n          <Grid item>\r\n            {newBuild ? <Button onClick={equipArts} className=\"mr-2\">Equip artifacts</Button> : (database === localDatabase && <Button color=\"error\" onClick={unequipArts}>Unequip all artifacts</Button>)}\r\n          </Grid>\r\n          <Grid item flexGrow={1}></Grid>\r\n          <Grid item>{!!mainStatAssumptionLevel && <Card sx={{ p: 1, bgcolor: t => t.palette.warning.dark }}><Typography><strong>Assume Main Stats are Level {mainStatAssumptionLevel}</strong></Typography></Card>}</Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </CardLight>\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} sm={6} md={4} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n        {artifactSheets && setEffects && Object.entries(setEffects).map(([setKey, setNumKeyArr]) =>\r\n          <CardLight key={setKey} sx={{ flexGrow: 1, }} >\r\n            <CardHeader avatar={<ImgIcon size={2} sx={{ m: -1 }} src={artifactSheets[setKey].defIconSrc} />} title={artifactSheets[setKey].name} titleTypographyProps={{ variant: \"subtitle1\" }} />\r\n            <Divider />\r\n            <CardContent >\r\n              <Grid container spacing={1} flexDirection=\"column\" height=\"100%\" >\r\n                <Grid item display=\"flex\" flexDirection=\"column\" gap={1}>\r\n                  {setNumKeyArr.map(setNumKey => <SetEffectDisplay key={setKey + setNumKey} setKey={setKey} setNumKey={setNumKey} />)}\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </CardLight>\r\n        )}\r\n      </Grid>\r\n      {artIds.map(id => !!id && <Grid item xs={6} md={4} key={id} >\r\n        <ArtifactCard artifactId={id} mainStatAssumptionLevel={mainStatAssumptionLevel} onEdit={() => edit(id)} />\r\n      </Grid>)}\r\n    </Grid>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { PersonAdd } from \"@mui/icons-material\";\r\nimport { CardContent, Divider, Grid } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport CardLight from \"../../Components/Card/CardLight\";\r\nimport CharacterDropdownButton from \"../../Components/Character/CharacterDropdownButton\";\r\nimport ConditionalDisplay from \"../../Components/ConditionalDisplay\";\r\nimport { NodeFieldDisplay } from \"../../Components/FieldDisplay\";\r\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\r\nimport { DataContext, dataContextObj } from \"../../DataContext\";\r\nimport { uiInput as input } from \"../../Formula\";\r\nimport { NodeDisplay } from \"../../Formula/uiData\";\r\nimport useCharacterReducer from \"../../ReactHooks/useCharacterReducer\";\r\nimport useCharSelectionCallback from \"../../ReactHooks/useCharSelectionCallback\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport { ElementKey } from \"../../Types/consts\";\r\nimport { DocumentSection } from \"../../Types/sheet\";\r\nimport { objPathValue, range } from \"../../Util/Util\";\r\nimport CharacterCard from \"../CharacterCard\";\r\n\r\nexport default function CharacterTeamBuffsPane() {\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1} alignItems=\"stretch\">\r\n    <TeamBuffDisplay />\r\n    {/* <ResonanceDisplay characterKey={characterKey} build={build} /> */}\r\n    <Grid container spacing={1}>\r\n      {range(0, 2).map(i => <Grid item xs={12} md={6} lg={4} key={i}>\r\n        <TeammateDisplay index={i} />\r\n      </Grid>)}\r\n    </Grid>\r\n  </Box>\r\n}\r\nconst statBreakpoint = {\r\n  xs: 12, sm: 6, md: 6, lg: 4,\r\n} as const\r\nexport function TeamBuffDisplay() {\r\n  const { data, oldData } = useContext(DataContext)\r\n  const teamBuffs = data.getTeamBuff()\r\n  const nodes: Array<[string[], NodeDisplay<number>]> = []\r\n  Object.entries(teamBuffs.total ?? {}).forEach(([key, node]) => nodes.push([[\"total\", key], node]))\r\n  Object.entries(teamBuffs.premod ?? {}).forEach(([key, node]) => nodes.push([[\"premod\", key], node]))\r\n  Object.entries(teamBuffs.enemy ?? {}).forEach(([key, node]) => nodes.push([[\"enemy\", key], node]))\r\n  if (!nodes.length) return null\r\n  return <CardLight>\r\n    <CardContent>\r\n      Team Buffs\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent>\r\n      <Grid container columnSpacing={2} rowSpacing={1}>\r\n        {nodes.map(([path, n], i) => n && !n.isEmpty && <Grid item {...statBreakpoint} key={n.key} >\r\n          <NodeFieldDisplay node={n} oldValue={objPathValue(oldData?.getTeamBuff(), path)?.value} />\r\n        </Grid>)}\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n// function ResonanceDisplay() {\r\n//   const { data, characterDispatch } = useContext(DataContext)\r\n//   return <CardLight>\r\n//     <CardContent>\r\n//       Team Resonance\r\n//     </CardContent>\r\n//     <Divider />\r\n//     <CardContent>\r\n//       <Grid container spacing={1}>\r\n//         {resonanceSheets.map((doc, i) =>\r\n//           <Grid item key={i} xs={12} md={6} lg={4} >\r\n//             <CardDark sx={{ opacity: doc.canShow(build) ? 1 : 0.5, height: \"100%\" }}>\r\n//               <CardHeader avatar={doc?.header?.icon} title={doc?.header?.title} action={doc?.header?.action} titleTypographyProps={{ variant: \"subtitle2\" }} />\r\n//               <Divider />\r\n//               <CardContent>\r\n//                 {doc.description}\r\n//               </CardContent>\r\n//               {doc.conditionals.map(cond =>\r\n//                 <ConditionalDisplay key={cond.key} conditional={cond} stats={build} onChange={val => characterDispatch({ conditionalValues: val })} />\r\n//               )}\r\n//             </CardDark>\r\n//           </Grid>\r\n//         )}\r\n//       </Grid>\r\n//     </CardContent>\r\n//   </CardLight>\r\n// }\r\nfunction TeammateDisplay({ index }: { index: number }) {\r\n  const dataContext = useContext(DataContext)\r\n  const { character: active, teamData, characterDispatch: activeCharacterDispatch } = dataContext\r\n  const activeCharacterKey = active.key\r\n  const characterKey = active.team[index]\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  // TODO: this UIData should be fed from the main CharacterDisplayCard for teams.\r\n  const onClickHandler = useCharSelectionCallback()\r\n\r\n  const dataBundle = teamData[characterKey]\r\n  const teamMateDataContext: dataContextObj | undefined = dataBundle && characterDispatch && {\r\n    character: dataBundle.character,\r\n    characterSheet: dataBundle.characterSheet,\r\n    data: dataBundle.target,\r\n    teamData: teamData,\r\n    mainStatAssumptionLevel: 0,\r\n    characterDispatch\r\n  }\r\n  return <CardLight>\r\n    <CardContent>\r\n      <CharacterDropdownButton fullWidth value={characterKey}\r\n        onChange={charKey => activeCharacterDispatch({ type: \"team\", index, charKey })}\r\n        filter={(_, ck) => ck !== activeCharacterKey && !active.team.includes(ck)} unSelectText={`Teammate ${index + 1}`} unSelectIcon={<PersonAdd />} />\r\n    </CardContent>\r\n    {teamMateDataContext && <DataContext.Provider value={teamMateDataContext}>\r\n      <CharacterCard characterKey={characterKey}\r\n        onClickHeader={onClickHandler}\r\n        artifactChildren={<CharArtifactCondDisplay dataContext={dataContext} />}\r\n        weaponChildren={<CharWeaponCondDisplay dataContext={dataContext} />}\r\n        characterChildren={<CharTalentCondDisplay dataContext={dataContext} />}\r\n      />\r\n    </DataContext.Provider>}\r\n  </CardLight>\r\n\r\n}\r\nfunction CharArtifactCondDisplay({ dataContext }: { dataContext: dataContextObj }) {\r\n  const { data, } = useContext(DataContext)\r\n  const artifactSheets = usePromise(ArtifactSheet.getAll, [])\r\n  const sections = useMemo(() => artifactSheets &&\r\n    Object.entries(ArtifactSheet.setEffects(artifactSheets, data))\r\n      .flatMap(([setKey, setNums]) =>\r\n        setNums.flatMap(sn => artifactSheets[setKey]!.setEffectDocument(sn)!))\r\n    , [artifactSheets, data])\r\n  if (!sections) return null\r\n  return <DisplaySectionsTeamCond sections={sections} dataContext={dataContext} />\r\n}\r\nfunction CharWeaponCondDisplay({ dataContext }: { dataContext: dataContextObj }) {\r\n  const { teamData, character: { key: charKey } } = useContext(DataContext)\r\n  const weaponSheet = teamData[charKey]!.weaponSheet\r\n\r\n  return <DisplaySectionsTeamCond sections={weaponSheet.document} dataContext={dataContext} />\r\n}\r\nfunction CharTalentCondDisplay({ dataContext }: { dataContext: dataContextObj }) {\r\n  const { data, teamData, character: { key: charKey } } = useContext(DataContext)\r\n  const characterSheet = teamData[charKey]!.characterSheet\r\n  const talent = characterSheet.getTalent(data.get(input.charEle).value as ElementKey)!\r\n  const sections = Object.values(talent.sheets).flatMap(sts => sts.sections)\r\n  return <DisplaySectionsTeamCond sections={sections} dataContext={dataContext} />\r\n}\r\n\r\nfunction DisplaySectionsTeamCond({ sections, dataContext }: { sections: DocumentSection[], dataContext: dataContextObj }) {\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1} pt={0} >\r\n    {sections.map(section => section.conditional?.teamBuff && <ConditionalDisplay conditional={section.conditional} fieldContext={dataContext} />)}\r\n  </Box >\r\n}\r\n","import { faEdit, faSave } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Badge, Box, Button, CardContent, CardMedia, Divider, Grid, Typography } from \"@mui/material\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport CardLight from \"../../Components/Card/CardLight\";\r\nimport ColorText from \"../../Components/ColoredText\";\r\nimport { NodeFieldDisplay } from \"../../Components/FieldDisplay\";\r\nimport ImgIcon from \"../../Components/Image/ImgIcon\";\r\nimport { Stars } from \"../../Components/StarDisplay\";\r\nimport StatIcon from \"../../Components/StatIcon\";\r\nimport { DataContext } from \"../../DataContext\";\r\nimport { uiInput as input } from \"../../Formula\";\r\nimport { ReadNode } from \"../../Formula/type\";\r\nimport KeyMap, { valueString } from \"../../KeyMap\";\r\nimport useCharacterReducer from \"../../ReactHooks/useCharacterReducer\";\r\nimport { amplifyingReactions, transformativeReactions } from \"../../StatConstants\";\r\nimport { TalentSheetElementKey } from \"../../Types/character\";\r\nimport { allElementsWithPhy, ElementKey } from \"../../Types/consts\";\r\nimport WeaponDisplayCard from \"../../PageWeapon/WeaponDisplayCard\";\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\r\nimport StatInput from \"../StatInput\";\r\nimport { TeamBuffDisplay } from \"./CharacterTeamBuffsPane\";\r\nimport { range } from \"../../Util/Util\";\r\nexport default function CharacterOverviewPane() {\r\n  const { data, characterSheet, character, character: { key: characterKey } } = useContext(DataContext)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const charEle = data.get(input.charEle).value as ElementKey\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  const level = data.get(input.lvl).value\r\n  const ascension = data.get(input.asc).value\r\n  const constellation = data.get(input.constellation).value\r\n  const tlvl = {\r\n    auto: data.get(input.total.auto).value,\r\n    skill: data.get(input.total.skill).value,\r\n    burst: data.get(input.total.burst).value,\r\n  }\r\n  const tBoost = {\r\n    auto: data.get(input.bonus.auto).value,\r\n    skill: data.get(input.bonus.skill).value,\r\n    burst: data.get(input.bonus.burst).value,\r\n  }\r\n  return <Grid container spacing={1}>\r\n    <Grid item xs={12} md={3}  >\r\n      {/* Image card with star and name and level */}\r\n      <CardLight >\r\n        <CardMedia src={characterSheet.cardImg} component=\"img\" width=\"100%\" height=\"auto\" />\r\n        <CardContent>\r\n          <Typography variant=\"h4\" >{characterSheet.name} <ImgIcon src={Assets.weaponTypes?.[weaponTypeKey]} /> {StatIcon[charEle]} </Typography>\r\n          <Typography variant=\"h6\"><Stars stars={characterSheet.rarity} colored /></Typography>\r\n          <Typography variant=\"h5\">Lvl. {CharacterSheet.getLevelString(level, ascension)}</Typography>\r\n          <Grid container spacing={1} mt={1}>\r\n            {([\"auto\", \"skill\", \"burst\"] as TalentSheetElementKey[]).map(tKey =>\r\n              <Grid item xs={4} key={tKey}>\r\n                <Badge badgeContent={tlvl[tKey]} color={tBoost[tKey] ? \"info\" : \"secondary\"}\r\n                  overlap=\"circular\"\r\n                  anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  sx={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    \"& > .MuiBadge-badge\": {\r\n                      fontSize: \"1.25em\",\r\n                      padding: \".25em .4em\",\r\n                      borderRadius: \".5em\",\r\n                      lineHeight: 1,\r\n                      height: \"1.25em\"\r\n                    }\r\n                  }}>\r\n                  <Box component=\"img\" src={characterSheet.getTalentOfKey(tKey, charEle)?.img} width=\"100%\" height=\"auto\" />\r\n                </Badge>\r\n              </Grid>)}\r\n          </Grid>\r\n          <Typography sx={{ textAlign: \"center\", mt: 1 }} variant=\"h6\">{characterSheet.constellationName}</Typography>\r\n          <Grid container spacing={1}>\r\n            {range(1, 6).map(i =>\r\n              <Grid item xs={4} key={i}>\r\n                <Box component=\"img\" src={characterSheet.getTalentOfKey(`constellation${i}` as TalentSheetElementKey, charEle)?.img}\r\n                  sx={{\r\n                    cursor: \"pointer\",\r\n                    ...(constellation >= i ? {} : { filter: \"brightness(50%)\" })\r\n                  }}\r\n                  width=\"100%\" height=\"auto\"\r\n                  onClick={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })} />\r\n              </Grid>)}\r\n          </Grid>\r\n        </CardContent>\r\n      </CardLight>\r\n    </Grid>\r\n    <Grid item xs={12} md={9} sx={{\r\n      \"> div:not(:last-child)\": { mb: 1 }\r\n    }} >\r\n      <WeaponDisplayCard weaponId={character.equippedWeapon} />\r\n      <MainStatsCards />\r\n    </Grid>\r\n  </Grid >\r\n}\r\nconst EDIT = \"Edit Stats\"\r\nconst EXIT = \"EXIT\"\r\n\r\nconst mainBaseKeys = [\"atk\", \"hp\", \"def\"] as const\r\nconst mainSubKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"] as const\r\nconst mainReadNodes = [...mainBaseKeys, ...mainSubKeys].map(k => input.total[k])\r\nconst mainEditKeys = [\"atk_\", \"atk\", \"hp_\", \"hp\", \"def_\", \"def\", ...mainSubKeys] as const\r\n\r\nconst otherStatReadNodes = [\r\n  ...allElementsWithPhy.map(ele => input.total[`${ele}_dmg_`]),\r\n  ...allElementsWithPhy.map(ele => input.total[`${ele}_res_`]),\r\n  ...([\"stamina\", \"incHeal_\", \"shield_\", \"cdRed_\"] as const).map(x => input.total[x])\r\n]\r\nconst otherStatKeys = otherStatReadNodes.map(x => x.info!.key!)\r\n\r\nconst miscStatReadNodes = [\r\n  input.total.all_dmg_,\r\n  ...allElementsWithPhy.map(x => input.total[`${x}_enemyRes_`]),\r\n  input.total.normal_dmg_, input.total.normal_critRate_,\r\n  input.total.charged_dmg_, input.total.charged_critRate_,\r\n  input.total.plunging_dmg_, input.total.plunging_critRate_,\r\n  input.total.skill_dmg_, input.total.skill_critRate_,\r\n  input.total.burst_dmg_, input.total.burst_critRate_,\r\n  ...Object.keys(transformativeReactions).map(x => input.total[`${x}_dmg_`]),\r\n  ...Object.keys(amplifyingReactions).map(x => input.total[`${x}_dmg_`]),\r\n  ...([\"moveSPD_\", \"atkSPD_\", \"weakspotDMG_\"] as const).map(x => input.total[x]),\r\n  input.total.dmgRed_\r\n]\r\nconst miscStatkeys = miscStatReadNodes.map(x => x.info!.key!)\r\n\r\nconst statBreakpoint = {\r\n  xs: 12, sm: 6, md: 6, lg: 4,\r\n} as const\r\n\r\nfunction StatDisplayContent({ nodes, statBreakpoint, extra }: { nodes: ReadNode<number>[], statBreakpoint: object, extra?: Displayable }) {\r\n  const { data, oldData } = useContext(DataContext)\r\n  return <Grid container columnSpacing={{ xs: 2, lg: 3 }} rowSpacing={1}>\r\n    {nodes.map(rn => <Grid item key={rn.info?.key} {...statBreakpoint} >\r\n      {<NodeFieldDisplay node={data.get(rn)} oldValue={oldData?.get(rn)?.value} />}\r\n    </Grid>)}\r\n    {extra}\r\n  </Grid>\r\n}\r\n\r\nfunction MainStatsCards() {\r\n  const { data, character, character: { key: characterKey } } = useContext(DataContext)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const specialNode = data.get(input.special)\r\n\r\n  return <>\r\n    <TeamBuffDisplay />\r\n    <StatDisplayCard\r\n      title=\"Main Stats\"\r\n      content={<StatDisplayContent statBreakpoint={statBreakpoint} nodes={mainReadNodes}\r\n        extra={specialNode && <Grid item {...statBreakpoint} display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\r\n          <span><b>Special:</b> <ColorText color={specialNode.variant}>{specialNode.key && StatIcon[specialNode.key]} {specialNode.key && KeyMap.get(specialNode.key)}</ColorText></span>\r\n          <span >{valueString(specialNode.value, specialNode.unit)}</span>\r\n        </Grid>}\r\n      />}\r\n      editContent={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {mainEditKeys.map(statKey => {\r\n          const statName = KeyMap.get(statKey)\r\n          return <Grid item xs={12} lg={6} key={statKey}>\r\n            <StatInput\r\n              name={<span>{StatIcon[statKey]} {statName}</span>}\r\n              placeholder={KeyMap.getStr(statKey)}\r\n              value={character.bonusStats[statKey] ?? 0}\r\n              percent={KeyMap.unit(statKey) === \"%\"}\r\n              onValueChange={value => characterDispatch({ type: \"editStats\", statKey, value })}\r\n            />\r\n          </Grid>\r\n        })}\r\n      </Grid>}\r\n    />\r\n    <StatDisplayCard\r\n      title=\"Other Stats\"\r\n      content={<StatDisplayContent statBreakpoint={statBreakpoint} nodes={otherStatReadNodes} />}\r\n      editContent={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {otherStatKeys.map(statKey => {\r\n          const statName = KeyMap.get(statKey)\r\n          return <Grid item xs={12} lg={6} key={statKey}>\r\n            <StatInput\r\n              name={<span>{StatIcon[statKey]} {statName}</span>}\r\n              placeholder={KeyMap.getStr(statKey)}\r\n              value={character.bonusStats[statKey] ?? 0}\r\n              percent={KeyMap.unit(statKey) === \"%\"}\r\n              defaultValue={undefined}\r\n              onValueChange={value => characterDispatch({ type: \"editStats\", statKey, value })}\r\n            />\r\n          </Grid>\r\n        })}\r\n      </Grid>}\r\n    />\r\n    <StatDisplayCard\r\n      title=\"Misc Stats\"\r\n      content={<StatDisplayContent statBreakpoint={{\r\n        xs: 12, sm: 6, md: 6,\r\n      }} nodes={miscStatReadNodes} />}\r\n      editContent={<Grid container columnSpacing={2} rowSpacing={1}>\r\n        {miscStatkeys.map(statKey => {\r\n          const statName = KeyMap.get(statKey)\r\n          return <Grid item xs={12} lg={6} key={statKey}>\r\n            <StatInput\r\n              name={<span>{StatIcon[statKey]} {statName}</span>}\r\n              placeholder={KeyMap.getStr(statKey)}\r\n              value={character.bonusStats[statKey] ?? 0}\r\n              percent={KeyMap.unit(statKey) === \"%\"}\r\n              onValueChange={value => characterDispatch({ type: \"editStats\", statKey, value })}\r\n            />\r\n          </Grid>\r\n        })}\r\n      </Grid>}\r\n    />\r\n  </>\r\n}\r\nfunction StatDisplayCard({ title, content, editContent }) {\r\n  const [edit, setedit] = useState(false)\r\n  return <CardLight>\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Box display=\"flex\" justifyContent=\"space-between\">\r\n        <Typography variant=\"subtitle1\">{title}</Typography>\r\n        <Button size=\"small\" color={edit ? \"error\" : \"info\"} onClick={() => setedit(!edit)} >\r\n          <span><FontAwesomeIcon icon={edit ? faSave : faEdit} /> {edit ? EXIT : EDIT}</span>\r\n        </Button>\r\n      </Box>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent>\r\n      {edit ? editContent : content}\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, CardActionArea, CardContent, Divider, Grid, MenuItem, Typography } from \"@mui/material\";\r\nimport React, { useCallback, useContext, useState } from 'react';\r\nimport BootstrapTooltip from \"../../Components/BootstrapTooltip\";\r\nimport CardDark from \"../../Components/Card/CardDark\";\r\nimport CardLight from \"../../Components/Card/CardLight\";\r\nimport ColorText from \"../../Components/ColoredText\";\r\nimport ConditionalWrapper from \"../../Components/ConditionalWrapper\";\r\nimport DocumentDisplay from \"../../Components/DocumentDisplay\";\r\nimport DropdownButton from \"../../Components/DropdownMenu/DropdownButton\";\r\nimport StatIcon from \"../../Components/StatIcon\";\r\nimport useCharacterReducer from \"../../ReactHooks/useCharacterReducer\";\r\nimport { TalentSheetElementKey } from \"../../Types/character\";\r\nimport { DataContext } from '../../DataContext';\r\nimport { uiInput as input } from \"../../Formula\";\r\nimport { ElementKey } from \"../../Types/consts\";\r\nimport KeyMap, { valueString } from '../../KeyMap'\r\nimport { NodeDisplay } from '../../Formula/uiData'\r\nimport { NumNode } from \"../../Formula/type\";\r\nimport { range } from \"../../Util/Util\";\r\nexport default function CharacterTalentPane() {\r\n  const { data, character, characterSheet } = useContext(DataContext)\r\n  const characterDispatch = useCharacterReducer(character.key)\r\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]] as [TalentSheetElementKey, string][]\r\n  const passivesList: [tKey: TalentSheetElementKey, tText: string, asc: number][] = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n  const charEle = data.get(input.charEle).value as ElementKey | undefined\r\n  const ascension = data.get(input.asc).value\r\n  const constellation = data.get(input.constellation).value\r\n  return <>\r\n    <ReactionDisplay />\r\n    <Grid container spacing={1} sx={{ mb: 1 }}>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Grid item key={tKey} xs={12} md={6} lg={4} >\r\n          <SkillDisplayCard\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Grid>)}\r\n      {!!characterSheet.getTalentOfKey(\"sprint\", charEle) && <Grid item xs={12} md={6} lg={4} >\r\n        <SkillDisplayCard\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Grid>}\r\n      {!!characterSheet.getTalentOfKey(\"passive\", charEle) && <Grid item xs={12} md={6} lg={4} >\r\n        <SkillDisplayCard\r\n          talentKey=\"passive\"\r\n          subtitle=\"Passive\"\r\n        />\r\n      </Grid>}\r\n    </Grid>\r\n    <Grid container spacing={1}>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        if (!characterSheet.getTalentOfKey(tKey, charEle)) return null\r\n        return <Grid item key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} >\r\n          <SkillDisplayCard\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Grid>\r\n      })}\r\n    </Grid>\r\n    <Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography>\r\n    <Grid container spacing={1}>\r\n      {/* constellations */}\r\n      {range(1, 6).map(i => {\r\n        let tKey = `constellation${i}` as TalentSheetElementKey\r\n        return <Grid item key={i} xs={12} md={4}\r\n          sx={{ opacity: constellation >= i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i}`}\r\n            onClickTitle={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}\r\n          />\r\n        </Grid>\r\n      })}\r\n    </Grid>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct: SuperConductCard,\r\n  electrocharged: ElectroChargedCard,\r\n  overloaded: OverloadedCard,\r\n  pyroSwirl: SwirlCard,// TODO: Assumes if character can pyro swirl, it can swirl every element. This behaviour will need to be changed for characters that can only swirl specific elements.\r\n  shattered: ShatteredCard,\r\n  crystallize: CrystallizeCard,\r\n}\r\nfunction ReactionDisplay() {\r\n  const { data } = useContext(DataContext)\r\n  const reaction = data.getDisplay().reaction as { [key: string]: NodeDisplay }\r\n  return <CardLight sx={{ mb: 1 }}>\r\n    <CardContent>\r\n      <Grid container spacing={1}>\r\n        {Object.entries(reaction).map(([key, node]) => {\r\n          const Ele = ReactionComponents[key]\r\n          if (!Ele) return null\r\n          return <Grid item key={key}><Ele node={node} /></Grid>\r\n        })}\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\nfunction SuperConductCard({ node }: { node: NodeDisplay }) {\r\n  return <CardDark><CardContent sx={{ p: 1 }}>\r\n    <Typography color=\"superconduct.main\">{KeyMap.get(node.key!)} {StatIcon.electro}+{StatIcon.cryo} <strong>{valueString(node.value, node.unit)}</strong></Typography>\r\n  </CardContent></CardDark>\r\n}\r\nfunction ElectroChargedCard({ node }: { node: NodeDisplay }) {\r\n  return <CardDark><CardContent sx={{ p: 1 }}>\r\n    <Typography color=\"electrocharged.main\">{KeyMap.get(node.key!)} {StatIcon.electro}+{StatIcon.hydro} <strong>{valueString(node.value, node.unit)}</strong></Typography>\r\n  </CardContent></CardDark>\r\n}\r\nfunction OverloadedCard({ node }: { node: NodeDisplay }) {\r\n  return <CardDark><CardContent sx={{ p: 1 }}>\r\n    <Typography color=\"overloaded.main\" >{KeyMap.get(node.key!)} {StatIcon.electro}+{StatIcon.pyro} <strong>{valueString(node.value, node.unit)}</strong></Typography>\r\n  </CardContent></CardDark>\r\n}\r\n\r\nconst swirlEleToDisplay = {\r\n  \"pyro\": <span><ColorText color=\"pyro\">{KeyMap.get(\"pyro_swirl_hit\")}</ColorText> {StatIcon.pyro} + {StatIcon.anemo}</span>,\r\n  \"electro\": <span><ColorText color=\"electro\">{KeyMap.get(\"electro_swirl_hit\")}</ColorText> {StatIcon.electro}+{StatIcon.anemo}</span>,\r\n  \"cryo\": <span><ColorText color=\"cryo\">{KeyMap.get(\"cryo_swirl_hit\")}</ColorText> {StatIcon.cryo} + {StatIcon.anemo}</span>,\r\n  \"hydro\": <span><ColorText color=\"hydro\">{KeyMap.get(\"hydro_swirl_hit\")}</ColorText> {StatIcon.hydro} + {StatIcon.anemo}</span>\r\n} as const\r\n\r\nfunction SwirlCard() {\r\n  const [ele, setele] = useState(Object.keys(swirlEleToDisplay)[0])\r\n  const { data } = useContext(DataContext)\r\n  const node = data.getDisplay().reaction![`${ele}Swirl`]!\r\n  return <CardDark sx={{ display: \"flex\" }}>\r\n    <DropdownButton size=\"small\" title={swirlEleToDisplay[ele]} color=\"success\">\r\n      {Object.entries(swirlEleToDisplay).map(([key, element]) => <MenuItem key={key} selected={ele === key} disabled={ele === key} onClick={() => setele(key)}>{element}</MenuItem>)}\r\n    </DropdownButton>\r\n    <Box sx={{ color: `${ele}.main`, p: 1 }}><strong>{valueString(node.value, node.unit)}</strong></Box>\r\n  </CardDark>\r\n}\r\n\r\nfunction ShatteredCard({ node }: { node: NodeDisplay }) {\r\n  const information = <BootstrapTooltip placement=\"top\" title={<Typography>Claymores, Plunging Attacks and <ColorText color=\"geo\">Geo DMG</ColorText></Typography>}>\r\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\r\n  </BootstrapTooltip>\r\n\r\n  return <CardDark><CardContent sx={{ p: 1 }}>\r\n    <ColorText color=\"shattered\">{KeyMap.get(node.key!)} {StatIcon.hydro}+{StatIcon.cryo}+ <ColorText color=\"physical\"><small>Heavy Attack{information} </small></ColorText> <strong>{valueString(node.value, node.unit)}</strong></ColorText>\r\n  </CardContent></CardDark>\r\n}\r\n\r\nconst crystallizeEleToDisplay = {\r\n  \"geo\": <ColorText color=\"crystallize\">{KeyMap.get(\"crystallize\")} {StatIcon.electro}/{StatIcon.hydro}/{StatIcon.pyro}/{StatIcon.cryo}+{StatIcon.geo}</ColorText>,\r\n  \"pyro\": <span><ColorText color=\"pyro\">{KeyMap.get(\"pyro_crystallize\")}</ColorText> {StatIcon.pyro}+{StatIcon.geo}</span>,\r\n  \"electro\": <span><ColorText color=\"electro\">{KeyMap.get(\"electro_crystallize\")}</ColorText> {StatIcon.electro}+{StatIcon.geo}</span>,\r\n  \"cryo\": <span><ColorText color=\"cryo\">{KeyMap.get(\"cryo_crystallize\")}</ColorText> {StatIcon.cryo}+{StatIcon.geo}</span>,\r\n  \"hydro\": <span><ColorText color=\"hydro\">{KeyMap.get(\"hydro_crystallize\")}</ColorText> {StatIcon.hydro}+{StatIcon.geo}</span>\r\n} as const\r\n\r\nfunction CrystallizeCard() {\r\n  const [ele, setele] = useState(Object.keys(crystallizeEleToDisplay)[0])\r\n  const { data } = useContext(DataContext)\r\n  const node = ele === \"geo\" ? data.getDisplay().reaction!.crystallize! : data.getDisplay().reaction![`${ele}Crystallize`]!\r\n  return <CardDark sx={{ display: \"flex\" }}>\r\n    <DropdownButton size=\"small\" title={crystallizeEleToDisplay[ele]} color=\"success\">\r\n      {Object.entries(crystallizeEleToDisplay).map(([key, element]) => <MenuItem key={key} selected={ele === key} disabled={ele === key} onClick={() => setele(key)}>{element}</MenuItem>)}\r\n    </DropdownButton>\r\n    <Box sx={{ color: `${ele}.main`, p: 1 }}><strong>{valueString(node.value, node.unit)}</strong></Box>\r\n  </CardDark>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\ntype SkillDisplayCardProps = {\r\n  talentKey: TalentSheetElementKey,\r\n  subtitle: string,\r\n  onClickTitle?: (any) => any\r\n}\r\nfunction SkillDisplayCard({ talentKey, subtitle, onClickTitle }: SkillDisplayCardProps) {\r\n  const { data, character: { talent }, characterSheet, characterDispatch } = useContext(DataContext)\r\n\r\n  const actionWrapeprFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickTitle}>{children}</CardActionArea>,\r\n    [onClickTitle],\r\n  )\r\n\r\n  let header: Displayable | null = null\r\n\r\n  if (talentKey in talent) {\r\n    const levelBoost = data.get(input.bonus[talentKey] as NumNode).value\r\n    const level = data.get(input.total[talentKey]).value\r\n    const asc = data.get(input.asc).value\r\n    const setTalentLevel = (tKey, newTalentLevelKey) => {\r\n      talent[tKey] = newTalentLevelKey\r\n      characterDispatch({ talent })\r\n    }\r\n    header = <>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <DropdownButton fullWidth title={`Talent Lv. ${level}`} color={levelBoost ? \"info\" : \"primary\"}>\r\n          {range(1, talentLimits[asc]).map(i =>\r\n            <MenuItem key={i} selected={talent[talentKey] === (i)} disabled={talent[talentKey] === (i)} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost}</MenuItem>)}\r\n        </DropdownButton>\r\n      </CardContent>\r\n      <Divider />\r\n    </>\r\n  }\r\n  const talentSheet = characterSheet.getTalentOfKey(talentKey, data.get(input.charEle).value as ElementKey | undefined)\r\n\r\n  return <CardLight sx={{ height: \"100%\" }}>\r\n    {header}\r\n    <CardContent>\r\n      <ConditionalWrapper condition={!!onClickTitle} wrapper={actionWrapeprFunc} >\r\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\r\n          <Grid item>\r\n            <Box component=\"img\" src={talentSheet?.img} sx={{ width: 60, height: \"auto\" }} />\r\n          </Grid>\r\n          <Grid item flexGrow={1} sx={{ pl: 1 }}>\r\n            <Typography variant=\"h6\">{talentSheet?.name}</Typography>\r\n            <Typography variant=\"subtitle1\">{subtitle}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </ConditionalWrapper>\r\n      {/* Display document sections */}\r\n      {talentSheet?.sections ? <DocumentDisplay sections={talentSheet.sections} /> : null}\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n","import { Button, ButtonGroup, Card, CardContent, Divider, Grid, MenuItem, Skeleton, Tab, Tabs, ToggleButton, Typography } from '@mui/material';\r\nimport { Suspense, useCallback, useContext, useState } from 'react';\r\nimport CardDark from '../Components/Card/CardDark';\r\nimport CardLight from '../Components/Card/CardLight';\r\nimport { CharacterSelectionModal } from '../Components/Character/CharacterSelectionModal';\r\nimport ThumbSide from '../Components/Character/ThumbSide';\r\nimport CloseButton from '../Components/CloseButton';\r\nimport ColorText from '../Components/ColoredText';\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from '../Components/CustomNumberInput';\r\nimport DropdownButton from '../Components/DropdownMenu/DropdownButton';\r\nimport { EnemyExpandCard } from '../Components/EnemyEditor';\r\nimport FormulaCalcCard from '../Components/FormulaCalcCard';\r\nimport { DamageOptionsCard } from '../Components/HitModeEditor';\r\nimport SolidToggleButtonGroup from '../Components/SolidToggleButtonGroup';\r\nimport { sgt } from '../Data/Characters/SheetUtil';\r\nimport { ambiguousLevel, ascensionMaxLevel, milestoneLevels } from '../Data/LevelData';\r\nimport { DataContext, dataContextObj, TeamData } from '../DataContext';\r\nimport useCharacterReducer from '../ReactHooks/useCharacterReducer';\r\nimport useCharSelectionCallback from '../ReactHooks/useCharSelectionCallback';\r\nimport useTeamData from '../ReactHooks/useTeamData';\r\nimport { CharacterKey } from '../Types/consts';\r\nimport { clamp } from '../Util/Util';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\nimport CharacterTeamBuffsPane from './CharacterDisplay/CharacterTeamBuffsPane';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  value: string;\r\n  current: string | boolean;\r\n}\r\n\r\nfunction TabPanel({ children, current, value, ...other }: TabPanelProps) {\r\n  if (value !== current) return null\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}>\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== current}\r\n      id={`simple-tabpanel-${value}`}\r\n      aria-labelledby={`simple-tab-${value}`}\r\n      {...other}\r\n    >\r\n      {children}\r\n    </div>\r\n  </Suspense>\r\n}\r\n\r\ntype CharacterDisplayCardProps = {\r\n  characterKey: CharacterKey,\r\n  footer?: JSX.Element\r\n  newteamData?: TeamData,\r\n  mainStatAssumptionLevel?: number,\r\n  onClose?: (any) => void,\r\n  tabName?: string,\r\n  isFlex?: boolean,\r\n}\r\nexport default function CharacterDisplayCard({ characterKey, footer, newteamData, mainStatAssumptionLevel = 0, onClose, tabName, isFlex }: CharacterDisplayCardProps) {\r\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel)\r\n  const { character, characterSheet, target: charUIData } = teamData?.[characterKey] ?? {}\r\n\r\n  // set initial state to false, because it fails to check validity of the tab values on 1st load\r\n  const [tab, settab] = useState<string | boolean>(tabName ? tabName : (newteamData ? \"newartifacts\" : \"character\"))\r\n  const onTab = useCallback((e, v) => settab(v), [settab])\r\n\r\n  const characterDispatch = useCharacterReducer(character?.key ?? \"\")\r\n  if (!teamData || !character || !characterSheet || !charUIData) return <></>\r\n  const { compareData } = character\r\n  // main CharacterDisplayCard\r\n  const dataContextValue: dataContextObj = {\r\n    character,\r\n    characterSheet,\r\n    mainStatAssumptionLevel,\r\n    data: (newteamData ? newteamData[characterKey]!.target : charUIData),\r\n    teamData: (newteamData ? newteamData : teamData),\r\n    oldData: (compareData && newteamData) ? charUIData : undefined,\r\n    characterDispatch\r\n  }\r\n  return <CardDark >\r\n    <DataContext.Provider value={dataContextValue}>\r\n      <CardContent sx={{\r\n        \"> div:not(:last-child)\": { mb: 1 },\r\n      }}>\r\n        <Grid container spacing={1}>\r\n          <Grid item>\r\n            <CharSelectDropdown />\r\n          </Grid>\r\n          <Grid item>\r\n            {/* Compare against new build toggle */}\r\n            {!!newteamData && <SolidToggleButtonGroup exclusive value={compareData} onChange={(e, v) => characterDispatch({ compareData: v })} size=\"small\">\r\n              <ToggleButton value={false} disabled={!compareData}>\r\n                <small>Show New artifact Stats</small>\r\n              </ToggleButton>\r\n              <ToggleButton value={true} disabled={compareData}>\r\n                <small>Compare against equipped artifacts</small>\r\n              </ToggleButton>\r\n            </SolidToggleButtonGroup>}\r\n          </Grid>\r\n          <Grid item flexGrow={1} />\r\n          {!!mainStatAssumptionLevel && <Grid item><Card sx={{ p: 1, bgcolor: t => t.palette.warning.dark }}><Typography><strong>Assume Main Stats are Level {mainStatAssumptionLevel}</strong></Typography></Card></Grid>}\r\n          {!!onClose && <Grid item>\r\n            <CloseButton onClick={onClose} />\r\n          </Grid>}\r\n        </Grid>\r\n        <CardLight>\r\n          <Tabs\r\n            onChange={onTab}\r\n            value={tab}\r\n            variant=\"fullWidth\"\r\n          >\r\n            <Tab value=\"character\" label=\"Character\" />\r\n            {!!newteamData && <Tab value=\"newartifacts\" label=\"New Artifacts\" />}\r\n            <Tab value=\"artifacts\" label={newteamData ? \"Current Artifacts\" : \"Artifacts\"} />\r\n            {!isFlex && <Tab value=\"buffs\" label=\"Team Buffs\" />}\r\n            <Tab value=\"talent\" label=\"Talents\" />\r\n          </Tabs>\r\n        </CardLight>\r\n        <DamageOptionsCard />\r\n        <FormulaCalcCard />\r\n        <EnemyExpandCard />\r\n\r\n        {/* Character Panel */}\r\n        <TabPanel value=\"character\" current={tab}><CharacterOverviewPane /></TabPanel >\r\n        {/* Artifacts Panel */}\r\n        <DataContext.Provider value={{ ...dataContextValue, data: charUIData, oldData: undefined }}>\r\n          <TabPanel value=\"artifacts\" current={tab} ><CharacterArtifactPane /></TabPanel >\r\n        </DataContext.Provider>\r\n        {/* new build panel */}\r\n        <TabPanel value=\"newartifacts\" current={tab} ><CharacterArtifactPane newBuild /></TabPanel >\r\n        {/* Buffs panel */}\r\n        <TabPanel value=\"buffs\" current={tab}><CharacterTeamBuffsPane /></TabPanel >\r\n        {/* talent panel */}\r\n        <TabPanel value=\"talent\" current={tab}>\r\n          <CharacterTalentPane />\r\n        </TabPanel >\r\n      </CardContent>\r\n      {!!footer && <Divider />}\r\n      {footer && <CardContent >\r\n        {footer}\r\n      </CardContent>}\r\n    </DataContext.Provider>\r\n  </CardDark>\r\n}\r\n\r\n\r\nfunction CharSelectDropdown() {\r\n  const { character, characterSheet, characterDispatch } = useContext(DataContext)\r\n  const [showModal, setshowModal] = useState(false)\r\n  const setCharacter = useCharSelectionCallback()\r\n  const setLevel = useCallback((level) => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    characterDispatch({ level, ascension })\r\n  }, [characterDispatch])\r\n  const setAscension = useCallback(() => {\r\n    if (!character) return\r\n    const { level = 1, ascension = 0 } = character\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) characterDispatch({ ascension: ascension + 1 })\r\n    else characterDispatch({ ascension: lowerAscension })\r\n  }, [characterDispatch, character])\r\n  const { elementKey = \"anemo\", level = 1, ascension = 0 } = character\r\n  return <>\r\n    <CharacterSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={setCharacter} />\r\n    <Grid container spacing={1}>\r\n      <Grid item>\r\n        <Button onClick={() => setshowModal(true)} startIcon={<ThumbSide src={characterSheet?.thumbImgSide} />} >{characterSheet?.name ?? \"Select a Character\"}</Button>\r\n      </Grid>\r\n      <Grid item>\r\n        <ButtonGroup sx={{ bgcolor: t => t.palette.contentDark.main }} >\r\n          {characterSheet?.sheet && \"talents\" in characterSheet?.sheet && <DropdownButton title={<strong><ColorText color={elementKey}>{sgt(`element.${elementKey}`)}</ColorText></strong>}>\r\n            {Object.keys(characterSheet.sheet.talents).map(eleKey =>\r\n              <MenuItem key={eleKey} selected={elementKey === eleKey} disabled={elementKey === eleKey} onClick={() => characterDispatch({ elementKey: eleKey })}>\r\n                <strong><ColorText color={eleKey}>{sgt(`element.${eleKey}`)}</ColorText></strong></MenuItem>)}\r\n          </DropdownButton>}\r\n          <CustomNumberInputButtonGroupWrapper >\r\n            <CustomNumberInput onChange={setLevel} value={level}\r\n              startAdornment=\"Lvl. \"\r\n              inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\r\n              sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\r\n              disabled={!characterSheet} />\r\n          </CustomNumberInputButtonGroupWrapper>\r\n          <Button sx={{ pl: 1 }} disabled={!ambiguousLevel(level) || !characterSheet} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\r\n          <DropdownButton title={\"Select Level\"} disabled={!characterSheet}>\r\n            {milestoneLevels.map(([lv, as]) => {\r\n              const sameLevel = lv === ascensionMaxLevel[as]\r\n              const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n              const selected = lv === level && as === ascension\r\n              return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => characterDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\r\n            })}\r\n          </DropdownButton>\r\n        </ButtonGroup>\r\n      </Grid>\r\n    </Grid>\r\n  </>\r\n}\r\n","import { BusinessCenter, Replay } from \"@mui/icons-material\";\r\nimport { Divider, ListItemIcon, MenuItem, Typography } from \"@mui/material\";\r\nimport { useContext } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\r\nimport { DatabaseContext } from \"../../Database/Database\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport { CharacterKey } from \"../../Types/consts\";\r\nimport DropdownButton, { DropdownButtonProps } from \"../DropdownMenu/DropdownButton\";\r\nimport ThumbSide from \"./ThumbSide\";\r\n\r\nexport type CharacterDropdownButtonProps = Omit<DropdownButtonProps, \"title\" | \"onChange\" | \"children\"> & {\r\n  value: CharacterKey | \"\"\r\n  onChange: (ck: CharacterKey | \"\") => void\r\n  filter?: (cs: CharacterSheet, ck: CharacterKey) => boolean\r\n  inventory?: boolean\r\n  noUnselect?: boolean,\r\n  unSelectText?: Displayable,\r\n  unSelectIcon?: Displayable,\r\n}\r\n\r\nexport default function CharacterDropdownButton({ value, onChange, unSelectText, unSelectIcon, inventory = false, noUnselect = false, filter = () => true, ...props }: CharacterDropdownButtonProps) {\r\n  const { t } = useTranslation(\"ui\");\r\n  const database = useContext(DatabaseContext)\r\n  const characterSheets = usePromise(CharacterSheet.getAll, [])\r\n  const characterSheet = usePromise(CharacterSheet.get(value), [value])\r\n  const characterKeys = database._getCharKeys().filter(ck => characterSheets?.[ck] && filter(characterSheets[ck], ck)).sort()\r\n  return <DropdownButton\r\n    {...props}\r\n    title={characterSheet?.name ?? (inventory ? t`inventory` : (unSelectText ?? t`unselect`))}\r\n    color={value ? \"success\" : \"primary\"}\r\n    startIcon={characterSheet?.thumbImg ? <ThumbSide src={characterSheet.thumbImgSide} /> : (inventory ? <BusinessCenter /> : (unSelectIcon ?? <Replay />))}>\r\n    {!noUnselect && (inventory ? <MenuItem onClick={() => onChange(\"\")} selected={value === \"\"} disabled={value === \"\"}>\r\n      <ListItemIcon>\r\n        <BusinessCenter />\r\n      </ListItemIcon>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {t`inventory`}\r\n      </Typography>\r\n    </MenuItem> : <MenuItem onClick={() => onChange(\"\")} selected={value === \"\"} disabled={value === \"\"}>\r\n      <ListItemIcon>\r\n        <Replay />\r\n      </ListItemIcon>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {t`unselect`}\r\n      </Typography>\r\n    </MenuItem>)}\r\n    {!noUnselect && <Divider key=\"div\" />}\r\n    {!!characterSheets && CharacterMenuItemArray(characterSheets, characterKeys, onChange, value)}\r\n  </DropdownButton >\r\n}\r\n\r\n// Returning an array instead of Fragment because MUI Menu doesn't like fragments.\r\nexport function CharacterMenuItemArray(characterSheets: StrictDict<CharacterKey, CharacterSheet>, characterKeys: CharacterKey[], onChange: (ck: CharacterKey) => void, selectedCharacterKey: CharacterKey | \"\" = \"\") {\r\n  return characterKeys.map(characterKey =>\r\n    <MenuItem onClick={() => onChange(characterKey)} key={characterKey} selected={selectedCharacterKey === characterKey} disabled={selectedCharacterKey === characterKey} >\r\n      <ListItemIcon>\r\n        <ThumbSide src={characterSheets[characterKey].thumbImgSide} />\r\n      </ListItemIcon>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {characterSheets?.[characterKey]?.name}\r\n      </Typography>\r\n    </MenuItem>)\r\n}\r\n","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Lock, LockOpen } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, CardHeader, Grid, IconButton, Skeleton, Typography } from \"@mui/material\"\r\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport CharacterDropdownButton from '../Components/Character/CharacterDropdownButton_WR'\r\nimport LocationName from \"../Components/Character/LocationName\"\r\nimport ConditionalWrapper from \"../Components/ConditionalWrapper\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport StatIcon from \"../Components/StatIcon\"\r\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport { uiInput as input } from \"../Formula\"\r\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport useWeapon from \"../ReactHooks/useWeapon\"\r\nimport KeyMap, { valueString } from \"../KeyMap\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\r\n\r\ntype WeaponCardProps = { weaponId: string, onClick?: (weaponId: string) => void, onEdit?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, canEquip?: boolean }\r\nexport default function WeaponCard({ weaponId, onClick, onEdit, onDelete, canEquip = false }: WeaponCardProps) {\r\n  const database = useContext(DatabaseContext)\r\n  const databaseWeapon = useWeapon(weaponId)\r\n  const weapon = databaseWeapon\r\n  const weaponSheet = usePromise(weapon?.key ? WeaponSheet.get(weapon.key) : undefined, [weapon?.key])\r\n\r\n  const filter = useCallback(\r\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\r\n    [weaponSheet],\r\n  )\r\n\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={() => onClick?.(weaponId)} sx={{ height: \"100%\" }}>{children}</CardActionArea>,\r\n    [onClick, weaponId],\r\n  )\r\n\r\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => database.setWeaponLocation(weaponId, charKey), [database, weaponId],)\r\n\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n  const { level, ascension, refinement, id, location = \"\", lock } = weapon\r\n  const weaponTypeKey = UIData.get(input.weapon.type).value!\r\n  const stats = [input.weapon.main, input.weapon.sub, input.weapon.sub2].map(x => UIData.get(x))\r\n  const img = ascension < 2 ? weaponSheet?.img : weaponSheet?.imgAwaken\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 300 }} />}>\r\n    <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}>\r\n      <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n        <div className={`grad-${weaponSheet.rarity}star`} >\r\n          <CardHeader title={weaponSheet.name} avatar={<ImgIcon sx={{ fontSize: \"2em\" }} src={Assets.weaponTypes?.[weaponTypeKey]} />} titleTypographyProps={{ variant: \"h6\" }}\r\n            action={!onClick && <IconButton color=\"primary\" onClick={() => database.updateWeapon({ lock: !lock }, id)}>\r\n              {lock ? <Lock /> : <LockOpen />}\r\n            </IconButton>} />\r\n          <Grid container sx={{ flexWrap: \"nowrap\", pl: 2 }}>\r\n            <Grid item flexGrow={1}>\r\n              <Typography component=\"span\" variant=\"h4\">Lv. {level}</Typography>\r\n              <Typography component=\"span\" variant=\"h4\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n              <Typography variant=\"h6\">Refinement <strong>{refinement}</strong></Typography>\r\n              <Typography><Stars stars={weaponSheet.rarity} colored /></Typography>\r\n            </Grid>\r\n            {/* use flex-end here to align the image to the bottom. */}\r\n            <Grid item container maxWidth=\"40%\" alignContent=\"flex-end\" sx={{ mt: -3 }}>\r\n              <Box component=\"img\" src={img} width=\"100%\" height=\"auto\" />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        <CardContent>\r\n          {stats.map(node => {\r\n            if (!node.key) return null\r\n            const displayVal = valueString(node.value, node.unit, node.unit === \"flat\" ? 0 : undefined)\r\n            return <Box key={node.key} sx={{ display: \"flex\" }}>\r\n              <Typography flexGrow={1}>{StatIcon[node.key]} {KeyMap.get(node.key)}</Typography>\r\n              <Typography>{displayVal}</Typography>\r\n            </Box>\r\n          })}\r\n        </CardContent>\r\n        {/* grow to fill the 100% heigh */}\r\n        <Box flexGrow={1} />\r\n        <CardContent sx={{ py: 1 }}>\r\n          <Grid container sx={{ flexWrap: \"nowrap\" }} >\r\n            <Grid item xs=\"auto\" flexShrink={1}>\r\n              {canEquip ? <CharacterDropdownButton size=\"small\" noUnselect inventory value={location} onChange={equipOnChar} filter={filter} /> : <LocationName location={location} />}\r\n            </Grid>\r\n            <Grid item flexGrow={1} sx={{ mr: 1 }} />\r\n            <Grid item xs=\"auto\">\r\n              <ButtonGroup sx={{ height: \"100%\" }}>\r\n                {!!onEdit && <Button color=\"info\" size=\"small\" onClick={() => onEdit(id)} >\r\n                  <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n                </Button>}\r\n                {!!onDelete && <Button color=\"error\" size=\"small\" onClick={() => onDelete(id)} disabled={!!location || lock} >\r\n                  <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n                </Button>}\r\n              </ButtonGroup>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n\r\n      </CardLight>\r\n    </ConditionalWrapper>\r\n  </Suspense>\r\n}\r\n","import { Lock, LockOpen, SwapHoriz } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, ListItem, MenuItem, Typography } from \"@mui/material\"\r\nimport { useCallback, useContext, useMemo, useState } from \"react\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport CharacterDropdownButton from \"../Components/Character/CharacterDropdownButton\"\r\nimport CloseButton from \"../Components/CloseButton\"\r\nimport ColorText from \"../Components/ColoredText\"\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../Components/CustomNumberInput\"\r\nimport DocumentDisplay from \"../Components/DocumentDisplay\"\r\nimport DropdownButton from \"../Components/DropdownMenu/DropdownButton\"\r\nimport { FieldDisplayList, NodeFieldDisplay } from \"../Components/FieldDisplay\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport ModalWrapper from \"../Components/ModalWrapper\"\r\nimport SqBadge from \"../Components/SqBadge\"\r\nimport { Stars } from \"../Components/StarDisplay\"\r\nimport WeaponSelectionModal from \"../Components/Weapon/WeaponSelectionModal\"\r\nimport { ambiguousLevel, ascensionMaxLevel, milestoneLevels } from \"../Data/LevelData\"\r\nimport { database as localDatabase, DatabaseContext } from \"../Database/Database\"\r\nimport { uiInput as input } from \"../Formula\"\r\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport useWeapon from \"../ReactHooks/useWeapon\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nimport { clamp } from \"../Util/Util\"\r\nimport WeaponCard from \"./WeaponCard\"\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\r\nimport { DataContext } from \"../DataContext\"\r\n\r\ntype WeaponStatsEditorCardProps = {\r\n  weaponId: string\r\n  footer?: boolean\r\n  onClose?: () => void\r\n}\r\nexport default function WeaponDisplayCard({\r\n  weaponId: propWeaponId,\r\n  footer = false,\r\n  onClose\r\n}: WeaponStatsEditorCardProps) {\r\n  const { data } = useContext(DataContext)\r\n\r\n  const database = useContext(DatabaseContext)\r\n  const weapon = useWeapon(propWeaponId)\r\n  const { key = \"\", level, refinement = 0, ascension = 0, lock, location = \"\", id } = weapon ?? {}\r\n  const weaponSheet = usePromise(WeaponSheet.get(key), [key])\r\n  const weaponTypeKey = weaponSheet?.weaponType\r\n\r\n  const weaponDispatch = useCallback((newWeapon: Partial<ICachedWeapon>) => {\r\n    database.updateWeapon(newWeapon, propWeaponId)\r\n  }, [propWeaponId, database])\r\n\r\n  const setLevel = useCallback(level => {\r\n    level = clamp(level, 1, 90)\r\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\r\n    weaponDispatch({ level, ascension })\r\n  }, [weaponDispatch])\r\n\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\r\n    if (ascension === lowerAscension) weaponDispatch({ ascension: ascension + 1 })\r\n    else weaponDispatch({ ascension: lowerAscension })\r\n  }, [weaponDispatch, ascension, level])\r\n\r\n  const characterSheet = usePromise(location ? CharacterSheet.get(location) : undefined, [location])\r\n  const weaponFilter = characterSheet ? (ws) => ws.weaponType === characterSheet.weaponTypeKey : undefined\r\n  const initialWeaponFilter = characterSheet && characterSheet.weaponTypeKey\r\n\r\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => id && database.setWeaponLocation(id, charKey), [database, id])\r\n  const filter = useCallback(\r\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\r\n    [weaponSheet],\r\n  )\r\n  const [showModal, setshowModal] = useState(false)\r\n  const img = ascension < 2 ? weaponSheet?.img : weaponSheet?.imgAwaken\r\n\r\n  const weaponUIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  return <CardLight>\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Grid container spacing={1}>\r\n        <Grid item flexGrow={1}>\r\n          <Grid container spacing={1}>\r\n            <Grid item >\r\n              <WeaponSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={k => weaponDispatch({ key: k })} filter={weaponFilter} weaponFilter={initialWeaponFilter} />\r\n              <ButtonGroup>\r\n                <Button onClick={() => setshowModal(true)} >{weaponSheet?.name ?? \"Select a Weapon\"}</Button>\r\n                <DropdownButton title={`Refinement ${refinement}`}>\r\n                  <MenuItem>Select Weapon Refinement</MenuItem>\r\n                  <Divider />\r\n                  {[...Array(5).keys()].map(key =>\r\n                    <MenuItem key={key} onClick={() => weaponDispatch({ refinement: key + 1 })} selected={refinement === (key + 1)} disabled={refinement === (key + 1)}>\r\n                      {`Refinement ${key + 1}`}\r\n                    </MenuItem>)}\r\n                </DropdownButton>\r\n              </ButtonGroup>\r\n            </Grid>\r\n            <Grid item >\r\n              <ButtonGroup sx={{ bgcolor: t => t.palette.contentLight.main }} >\r\n                <CustomNumberInputButtonGroupWrapper >\r\n                  <CustomNumberInput onChange={setLevel} value={level}\r\n                    startAdornment=\"Lvl. \"\r\n                    inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\r\n                    sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\r\n                  />\r\n                </CustomNumberInputButtonGroupWrapper>\r\n                <Button sx={{ pl: 1 }} disabled={!ambiguousLevel(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\r\n                <DropdownButton title={\"Select Level\"} >\r\n                  {milestoneLevels.map(([lv, as]) => {\r\n                    const sameLevel = lv === ascensionMaxLevel[as]\r\n                    const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\r\n                    const selected = lv === level && as === ascension\r\n                    return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => weaponDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\r\n                  })}\r\n                </DropdownButton>\r\n              </ButtonGroup>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button color=\"error\" onClick={() => id && database.updateWeapon({ lock: !lock }, id)} startIcon={lock ? <Lock /> : <LockOpen />}>\r\n                {lock ? \"Locked\" : \"Unlocked\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {!!onClose && <Grid item  >\r\n          <CloseButton onClick={onClose} />\r\n        </Grid>}\r\n        {database === localDatabase && <Grid item >\r\n          <SwapBtn weaponTypeKey={weaponTypeKey} onChangeId={id => database.setWeaponLocation(id, data.get(input.charKey).value as CharacterKey)} />\r\n        </Grid>}\r\n      </Grid>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent >\r\n      {weaponSheet && weaponUIData && <Box display=\"flex\" gap={{ xs: 1, md: 1.5, lg: 2 }} >\r\n        <Box sx={{ maxWidth: 256 }} flexShrink={1} minWidth=\"25%\">\r\n          <Box component=\"img\" src={img} className={`grad-${weaponSheet.rarity}star`} sx={{ maxWidth: 256, width: \"100%\", height: \"auto\", borderRadius: 1 }} />\r\n          <Typography><small>{weaponSheet.description}</small></Typography>\r\n        </Box>\r\n        <Box sx={{ mb: -1 }} flexGrow={1} >\r\n          <Typography variant=\"h6\" >{process.env.NODE_ENV === \"development\" && <ColorText color=\"warning\">{id || `\"\"`} </ColorText>}{weaponSheet.name} Lv. {weapon && WeaponSheet.getLevelString(weapon)} {weaponSheet.rarity > 2 && <SqBadge color=\"info\">Refinement {refinement}</SqBadge>}</Typography>\r\n          <Typography><Stars stars={weaponSheet.rarity} /></Typography>\r\n          <Typography variant=\"subtitle1\">{weaponSheet.passiveName}</Typography>\r\n          <Typography gutterBottom>{weaponSheet.passiveName && weaponSheet.passiveDescription(weaponUIData.get(input.weapon.refineIndex).value)}</Typography>\r\n          <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n            <CardDark >\r\n              <CardContent>\r\n                <Typography>Main Stats</Typography>\r\n              </CardContent>\r\n              <FieldDisplayList>\r\n                {[input.weapon.main, input.weapon.sub, input.weapon.sub2].map((node, i) => {\r\n                  const n = weaponUIData.get(node)\r\n                  if (n.isEmpty || !n.value) return null\r\n                  return <NodeFieldDisplay key={n.key} node={n} component={ListItem} />\r\n                })}\r\n              </FieldDisplayList>\r\n            </CardDark>\r\n            {data && weaponSheet.document && <DocumentDisplay sections={weaponSheet.document} />}\r\n          </Box>\r\n        </Box>\r\n      </Box>}\r\n    </CardContent>\r\n    {footer && id && <CardContent sx={{ py: 1 }}>\r\n      <Grid container>\r\n        <Grid item flexGrow={1}>\r\n          <CharacterDropdownButton noUnselect inventory value={location} onChange={equipOnChar} filter={filter} />\r\n        </Grid>\r\n        {!!onClose && <Grid item><CloseButton large onClick={onClose} /></Grid>}\r\n      </Grid>\r\n    </CardContent>}\r\n  </CardLight>\r\n}\r\nfunction SwapBtn({ onChangeId, weaponTypeKey }) {\r\n  const database = useContext(DatabaseContext)\r\n  const [show, setShow] = useState(false)\r\n  const open = () => setShow(true)\r\n  const close = () => setShow(false)\r\n\r\n  const clickHandler = (id) => {\r\n    onChangeId(id)\r\n    close()\r\n  }\r\n\r\n  const weaponSheets = usePromise(WeaponSheet.getAll, [])\r\n\r\n  const weaponIdList = database.weapons.keys.filter(wKey => {\r\n    const dbWeapon = database._getWeapon(wKey)\r\n    if (!dbWeapon) return false\r\n    if (weaponTypeKey && weaponTypeKey !== weaponSheets?.[dbWeapon.key]?.weaponType) return false\r\n    return true\r\n  })\r\n\r\n\r\n  return <>\r\n    <Button color=\"info\" onClick={open} startIcon={<SwapHoriz />} >SWAP WEAPON</Button>\r\n    <ModalWrapper open={show} onClose={close} >\r\n      <CardDark>\r\n        <CardContent sx={{ py: 1 }}>\r\n          <Grid container>\r\n            <Grid item flexGrow={1}>\r\n              <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} Swap Weapon</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <CloseButton onClick={close} />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid container spacing={1}>\r\n            {weaponIdList.map(weaponId =>\r\n              <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\r\n                <WeaponCard\r\n                  weaponId={weaponId}\r\n                  onClick={clickHandler}\r\n                />\r\n              </Grid>)}\r\n          </Grid>\r\n        </CardContent>\r\n      </CardDark>\r\n    </ModalWrapper>\r\n  </>\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\n\r\nexport default function useWeapon(weaponID: string | undefined = \"\") {\r\n  const database = useContext(DatabaseContext)\r\n  const [weapon, setWeapon] = useState(database._getWeapon(weaponID))\r\n  useEffect(() => setWeapon(database._getWeapon(weaponID)), [database, weaponID])\r\n  useEffect(() =>\r\n    weaponID ? database.followWeapon(weaponID, setWeapon) : undefined,\r\n    [weaponID, setWeapon, database])\r\n  return weapon\r\n}"],"names":["LocationName","location","t","useTranslation","characterSheet","usePromise","CharacterSheet","component","name","nameWIthIcon","sx","verticalAlign","WeaponSelectionModal","show","onHide","onSelect","filter","propWeaponFilter","weaponFilter","weaponSheets","WeaponSheet","useState","setWeaponfilter","useEffect","weaponIdList","Set","allWeaponKeys","wKey","weaponType","sort","a","b","rarity","open","onClose","py","container","item","flexGrow","value","onChange","disabled","size","onClick","spacing","map","weaponKey","weaponSheet","lg","md","height","display","src","img","width","className","px","variant","Assets","stars","colored","large","Stat","this","Error","printStat","statKey","stats","st","strKey","Translate","ns","key18","sgt","allSubstatFilter","allSubstats","ArtifactCard","artifactId","artifactObj","onEdit","onDelete","mainStatAssumptionLevel","effFilter","probabilityFilter","database","useContext","DatabaseContext","databaseArtifact","artifactID","_getArt","artifact","setArtifact","followArt","undefined","useArtifact","sheet","ArtifactSheet","setKey","editable","localDatabase","art","id","lock","slotKey","level","mainStatKey","substats","exclude","mainStatLevel","Math","max","min","levelVariant","floor","mainStatVal","color","cacheValueString","Artifact","KeyMap","currentEfficiency","maxEfficiency","artifactValid","slotName","getSlotName","slotDesc","getSlotDesc","slotDescTooltip","BootstrapTooltip","placement","title","Typography","icon","faInfoCircle","setEffects","setDescTooltip","Object","keys","setNumKey","SqBadge","setNum","setEffectDesc","Suspense","fallback","Skeleton","minHeight","CardLight","flexDirection","CardContent","pt","pb","pr","Box","alignItems","Chip","label","pl","IconButton","updateArt","Lock","LockOpen","Grid","flexWrap","maxWidth","mt","mb","alignSelf","CardMedia","image","slotIcons","stat","i","numRolls","rolls","length","rollColor","clamp","efficiency","effOpacity","clamp01","statName","key","mr","opacity","has","toFixed","my","PercentBadge","valid","probability","CardActions","xs","flexShrink","CharacterDropdownButton","inventory","charKey","setArtLocation","ButtonGroup","Button","faEdit","Tooltip","arrow","faBan","faChartLine","faTrashAlt","badgeColor","text","FormulaCalcCard","expanded","setexpanded","toggle","useCallback","ExpandButton","expand","ExpandMore","Collapse","in","timeout","unmountOnExit","CalculationDisplay","data","DataContext","sections","getDisplaySections","Nodes","FormulaCalc","displayNs","sectionKey","header","getDisplayHeader","action","CardDark","CardHeader","avatar","ImgIcon","m","titleTypographyProps","Divider","entries","node","isEmpty","Accordion","bgcolor","AccordionSummary","expandIcon","valueString","unit","AccordionDetails","formulas","subform","newBuild","character","history","useHistory","edit","artid","push","pathname","artToEditId","artifactSheets","useForceUpdate","followAnyArt","equipArts","window","confirm","fromEntries","allSlotKeys","s","get","input","equipArtifacts","unequipArts","objectKeyMap","_","artIds","useMemo","StatDisplayComponent","Card","p","palette","warning","dark","sm","gap","setNumKeyArr","defIconSrc","SetEffectDisplay","CharacterTeamBuffsPane","TeamBuffDisplay","range","TeammateDisplay","index","statBreakpoint","oldData","teamBuffs","getTeamBuff","nodes","total","forEach","premod","enemy","columnSpacing","rowSpacing","path","n","oldValue","objPathValue","dataContext","active","teamData","activeCharacterDispatch","characterDispatch","activeCharacterKey","characterKey","team","useCharacterReducer","onClickHandler","useCharSelectionCallback","dataBundle","teamMateDataContext","target","fullWidth","type","ck","includes","unSelectText","unSelectIcon","PersonAdd","CharacterCard","onClickHeader","artifactChildren","CharArtifactCondDisplay","weaponChildren","CharWeaponCondDisplay","characterChildren","CharTalentCondDisplay","flatMap","sn","setEffectDocument","DisplaySectionsTeamCond","document","talent","getTalent","values","sheets","sts","section","conditional","teamBuff","ConditionalDisplay","fieldContext","CharacterOverviewPane","charEle","weaponTypeKey","ascension","constellation","tlvl","auto","skill","burst","tBoost","cardImg","StatIcon","tKey","Badge","badgeContent","overlap","anchorOrigin","vertical","horizontal","fontSize","padding","borderRadius","lineHeight","getTalentOfKey","textAlign","constellationName","cursor","WeaponDisplayCard","weaponId","equippedWeapon","MainStatsCards","mainSubKeys","mainReadNodes","k","mainEditKeys","otherStatReadNodes","allElementsWithPhy","ele","x","otherStatKeys","info","miscStatReadNodes","transformativeReactions","amplifyingReactions","miscStatkeys","StatDisplayContent","extra","rn","specialNode","StatDisplayCard","content","justifyContent","editContent","StatInput","placeholder","bonusStats","percent","onValueChange","defaultValue","setedit","faSave","CharacterTalentPane","ReactionDisplay","tText","SkillDisplayCard","talentKey","subtitle","asc","enabled","style","onClickTitle","ReactionComponents","superconduct","electrocharged","overloaded","pyroSwirl","swirlEleToDisplay","setele","getDisplay","reaction","DropdownButton","element","MenuItem","selected","shattered","information","faQuestionCircle","crystallize","crystallizeEleToDisplay","Ele","talentLimits","actionWrapeprFunc","children","CardActionArea","levelBoost","newTalentLevelKey","talentSheet","ConditionalWrapper","condition","wrapper","DocumentDisplay","TabPanel","current","other","role","hidden","CharacterDisplayCard","footer","newteamData","tabName","isFlex","useTeamData","charUIData","tab","settab","onTab","e","v","compareData","dataContextValue","CharSelectDropdown","SolidToggleButtonGroup","exclusive","ToggleButton","CloseButton","Tabs","Tab","showModal","setshowModal","setCharacter","setLevel","ascensionMaxLevel","ascenML","setAscension","lowerAscension","elementKey","CharacterSelectionModal","startIcon","ThumbSide","thumbImgSide","contentDark","main","talents","eleKey","CustomNumberInput","startAdornment","inputProps","ambiguousLevel","milestoneLevels","lv","as","lvlstr","noUnselect","props","characterSheets","characterKeys","_getCharKeys","thumbImg","BusinessCenter","Replay","ListItemIcon","noWrap","CharacterMenuItemArray","selectedCharacterKey","WeaponCard","canEquip","weapon","useWeapon","cs","actionWrapperFunc","equipOnChar","setWeaponLocation","UIData","computeUIData","dataObjForWeapon","refinement","imgAwaken","updateWeapon","alignContent","displayVal","propWeaponId","weaponDispatch","newWeapon","ws","initialWeaponFilter","weaponUIData","Array","contentLight","SwapBtn","onChangeId","minWidth","description","process","passiveName","gutterBottom","passiveDescription","ListItem","setShow","close","clickHandler","weapons","dbWeapon","_getWeapon","weaponID","setWeapon","followWeapon"],"sourceRoot":""}