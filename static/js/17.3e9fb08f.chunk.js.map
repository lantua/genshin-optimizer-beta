{"version":3,"sources":["DataContext.tsx","Data/Artifacts/ArtifactSheet.tsx","ReactHooks/useCharacterReducer.tsx","ReactHooks/useTeamData.tsx","Components/ToggleButton/WeaponToggle.tsx","ReactHooks/useCharSelectionCallback.tsx","Util/CharacterUtil.tsx","Util/SortByFilters.ts","Components/SortByButton.tsx","PageCharacter/CharacterCard.tsx","Components/Character/CharacterSelectionModal.tsx","Util/CharacterSort.ts","Components/SolidColoredToggleButton.tsx","Components/ToggleButton/ElementToggle.tsx","Components/InfoComponent.tsx","../node_modules/@mui/material/internal/svg-icons/Cancel.js","../node_modules/@mui/material/Chip/chipClasses.js","../node_modules/@mui/material/Chip/Chip.js","../node_modules/@mui/material/CardActionArea/cardActionAreaClasses.js","../node_modules/@mui/material/CardActionArea/CardActionArea.js","PageCharacter/CharacterInventory.tsx","PageCharacter/CharacterDisplay.tsx","PageCharacter/CharacterRouter.tsx"],"names":["DataContext","createContext","artifactSheets","then","imp","default","tr","setKey","strKey","ns","key18","allData","as","mergeData","Object","values","map","s","data","ArtifactSheet","sheet","key","getSlotName","slotKey","getSlotDesc","setEffectDesc","setNum","setEffectDocument","setEffects","document","hasEnough","get","input","artSet","value","this","slots","slotIcons","src","name","rarity","allSlotKeys","icons","set","a","undefined","sheets","grouped","entries","forEach","Math","max","push","artifactSetEffect","setNums","keys","k","parseInt","filter","sn","length","conditionalHeader","img","title","icon","size","sx","m","action","color","useCharacterReducer","characterKey","database","useContext","DatabaseContext","useCallback","type","setWeaponLocation","id","character","_getChar","enemyOverride","statKey","updateChar","bonusStats","deepClone","team","index","newCharKey","charKey","oldCharKey","oldChar","newChar","t","tChar","c","tind","_","i","useTeamData","mainStatAssumptionLevel","useForceUpdate","dbDirty","setDbDirty","useState","teamDataBundle","setTeamdataBundle","useEffect","getTeamData","r","teamData","teamBundle","t1","t2","t3","t4","followChar","calcData","uiDataForTeam","objectMap","obj","ck","rest","overrideArt","getCharDataBundle","char1DataBundle","Promise","all","databundle","weapon","_getWeapon","equippedWeapon","CharacterSheet","characterSheet","WeaponSheet","weaponSheet","getAllData","artifactSheetsData","artifacts","equippedArtifacts","_getArt","dataObjForArtifact","dataObjForCharacter","dataObjForWeapon","common","WeaponToggle","onChange","props","cb","e","newVal","exclusive","allWeaponTypeKeys","wt","Assets","weaponTypes","useCharSelectionCallback","history","useHistory","level","ascension","hitMode","reactionMode","objectKeyMap","conditional","buildSettings","initialBuildSettings","talent","auto","skill","burst","infusionAura","constellation","compareData","defaultInitialWeapon","weaponTypeKey","weaponId","createWeapon","sortFunction","sortby","ascending","configs","Sort","b","config","aV","getValue","bV","localeCompare","filterOption","diff","tieBreaker","filterFunction","filterOptions","filterConfigs","every","optionKey","optionVal","SortByButton","sortKeys","onChangeAsc","useTranslation","i18nKey","selected","disabled","onClick","startIcon","faSortAmountDownAlt","faSortAmountUp","className","CharacterCard","artifactChildren","weaponChildren","characterChildren","onClickHeader","footer","teamDataContext","target","onClickHandler","actionWrapperFunc","children","flexGrow","display","flexDirection","characterDispatch","dataContextObj","fallback","variant","width","height","minHeight","Provider","condition","wrapper","Header","gap","Weapon","ArtifactDisplay","Stats","characterEle","charEle","characterLevel","lvl","asc","autoBoost","bonus","skillBoost","burstBoost","tAuto","total","tSkill","tBurst","position","content","left","top","opacity","backgroundImage","bannerImg","backgroundPosition","backgroundSize","flexShrink","maxWidth","xs","lg","alignSelf","zIndex","component","thumbImg","mt","py","pr","label","container","spacing","flexWrap","item","textShadow","whiteSpace","ascensionMaxLevel","stars","colored","usePromise","UIData","useMemo","computeUIData","mainVal","valueString","main","unit","subKey","sub","subVal","levelName","getLevelString","alignContent","p","lineHeight","mr","refinement","KeyMap","getAll","art","mainStatKey","statkeys","weaponType","stat","val","StatIcon","special","defaultSortKeys","CharacterSelectionModal","show","onHide","onSelect","newFirst","sortBy","setsortBy","setascending","elementalFilter","setelementalFilter","weaponFilter","setweaponFilter","characterSheets","sortConfigs","characterSortConfigs","characterFilterConfigs","characterKeyList","Set","allCharacterKeys","cKey","element","sort","open","onClose","md","CharacterBtn","alignItems","pl","elementKey","characterSortKeys","new","SolidColoredToggleButton","styled","ToggleButton","shouldForwardProp","prop","theme","baseColor","selectedColor","backgroundColor","palette","contrastText","dark","ElementToggle","ToggleButtonGroup","allElements","ele","Box","fontSize","uncoloredEleIcons","InfoComponent","pageKey","text","modalTitle","dbStorage","showInfoModal","setshowInfoModal","Array","isArray","getRandomElementFromArray","displayText","closeModal","infoShown","faQuestionCircle","containerProps","large","createSvgIcon","_jsx","d","getChipUtilityClass","slot","generateUtilityClass","chipClasses","generateUtilityClasses","_excluded","ChipRoot","overridesResolver","styles","ownerState","clickable","onDelete","avatar","capitalize","deleteIcon","root","deletable","deleteIconColor","alpha","primary","_extends","fontFamily","typography","pxToRem","justifyContent","borderRadius","transition","transitions","create","cursor","outline","textDecoration","border","padding","verticalAlign","boxSizing","disabledOpacity","pointerEvents","marginLeft","marginRight","mode","grey","avatarColorPrimary","avatarColorSecondary","secondary","avatarSmall","WebkitTapHighlightColor","margin","focusVisible","selectedOpacity","focusOpacity","userSelect","hoverOpacity","boxShadow","shadows","hover","focus","iconSmall","deleteIconSmall","ChipLabel","overflow","textOverflow","paddingLeft","paddingRight","isDeleteKeyboardEvent","keyboardEvent","Chip","React","inProps","ref","useThemeProps","avatarProp","clickableProp","ComponentProp","deleteIconProp","iconProp","onKeyDown","onKeyUp","other","_objectWithoutPropertiesLoose","chipRef","handleRef","useForkRef","handleDeleteIconClick","event","stopPropagation","small","ButtonBase","classes","composeClasses","useUtilityClasses","moreProps","focusVisibleClassName","disableRipple","customClasses","clsx","CancelIcon","_jsxs","currentTarget","preventDefault","current","blur","getCardActionAreaUtilityClass","cardActionAreaClasses","CardActionAreaRoot","textAlign","focusHighlight","CardActionAreaFocusHighlight","right","bottom","duration","short","CardActionArea","initialState","sortType","filterReducer","state","filterInit","initial","CharacterInventory","useReducer","stateDisplatch","newCharacter","setnewCharacter","forceUpdate","ReactGA","pageview","followAnyChar","deleteCharacter","chararcterSheet","i18next","window","confirm","removeChar","editCharacter","charKeyList","_getCharKeys","my","CardDark","Grid","Skeleton","sm","CardContent","Typography","Button","faPlus","Divider","px","Link","to","pathname","faCalculator","faLink","faTrash","InfoDisplay","lazy","CharacterDisplayCard","CharacterDisplay","useParams","includes","Suspense","CharDisplayFooter","CloseButton","CharacterRouter","match","useRouteMatch","path"],"mappings":"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","file":"static/js/17.3e9fb08f.chunk.js","sourcesContent":["import { createContext } from \"react\"\nimport CharacterSheet from \"./Data/Characters/CharacterSheet\"\nimport { UIData } from \"./Formula/uiData\"\nimport { ICachedCharacter } from \"./Types/character_WR\"\nimport { CharacterKey } from \"./Types/consts\"\nimport { ICachedWeapon } from \"./Types/weapon_WR\"\nimport WeaponSheet from \"./Data/Weapons/WeaponSheet\"\nexport type TeamData = Partial<Record<CharacterKey, {\n  target: UIData\n  buffs: Dict<CharacterKey, UIData>\n  character: ICachedCharacter\n  weapon: ICachedWeapon\n  characterSheet: CharacterSheet\n  weaponSheet: WeaponSheet\n}>>\nexport type dataContextObj = {\n  character: ICachedCharacter\n  characterSheet: CharacterSheet\n  data: UIData\n  oldData?: UIData\n  mainStatAssumptionLevel: number\n  teamData: TeamData\n  characterDispatch: (_: any) => void\n}\n\n// If using this context without a Provider, then stuff will crash...\n// In theory, none of the components that uses this context should work without a provider...\nexport const DataContext = createContext({} as dataContextObj)\n","import ImgIcon from \"../../Components/Image/ImgIcon\";\nimport { Translate } from \"../../Components/Translate\";\nimport { mergeData } from \"../../Formula/api\";\nimport { Data } from \"../../Formula/type\";\nimport { allSlotKeys, ArtifactRarity, ArtifactSetKey, SetNum, SlotKey } from \"../../Types/consts\";\nimport { DocumentSection } from \"../../Types/sheet\";\nimport { UIData } from \"../../Formula/uiData\"\nimport { input } from \"../../Formula\"\nimport SqBadge from \"../../Components/SqBadge\";\nimport IConditional from \"../../Types/IConditional_WR\";\n\n// TODO: remove typecasting once all sheets populated\nconst artifactSheets = import(\".\").then(imp => imp.default)\n\nexport interface IArtifactSheet {\n  name: string, // only to stored the English name for OCR, otherwise, should come from localization pipeline\n  rarity: readonly ArtifactRarity[],\n  icons: Dict<SlotKey, string>,\n  setEffects: Dict<SetNum, SetEffectEntry>\n}\nexport interface SetEffectEntry {\n  document?: DocumentSection[],\n}\n\n\nconst tr = (setKey: string, strKey: string) => <Translate ns={`artifact_${setKey}_gen`} key18={strKey} />\nconst allData = artifactSheets.then(as => mergeData(Object.values(as).map(s => s.data)))\nexport class ArtifactSheet {\n  readonly sheet: IArtifactSheet\n  readonly key: ArtifactSetKey\n  readonly data: Data\n  constructor(setKey: ArtifactSetKey, sheet: IArtifactSheet, data: Data) {\n    this.sheet = sheet\n    this.key = setKey\n    this.data = data\n  }\n\n  get name() { return tr(this.key, \"setName\") }\n  get defIconSrc() {\n    const slotKey = this.slots[0]\n    if (!this.slotIcons[slotKey]) return undefined\n    return this.slotIcons[slotKey]\n  }\n  /**\n   * @deprecated use src directly\n   */\n  get nameWithIcon() {\n    const slotKey = this.slots[0]\n    return <span><ImgIcon src={this.slotIcons[slotKey]} /> {tr(this.key, \"setName\")}</span>\n  }\n\n  //This is only for OCR, because we only scan in english right now.\n  get nameRaw(): string { return this.sheet.name }\n  get rarity(): readonly ArtifactRarity[] { return this.sheet.rarity }\n  get slots(): SlotKey[] {\n    switch (this.key) {\n      // TODO: Prayer sets\n      // case \"PrayersForDestiny\":\n      // case \"PrayersForIllumination\":\n      // case \"PrayersForWisdom\":\n      // case \"PrayersToSpringtime\": return [\"circlet\"]\n      default: return [...allSlotKeys]\n    }\n  }\n  get slotIcons(): Dict<SlotKey, string> { return this.sheet.icons }\n  get setEffects(): Dict<SetNum, SetEffectEntry> { return this.sheet.setEffects }\n  getSlotName = (slotKey: SlotKey) => tr(this.key, `pieces.${slotKey}.name`)\n  getSlotDesc = (slotKey: SlotKey) => tr(this.key, `pieces.${slotKey}.desc`)\n  setEffectDesc = (setNum: SetNum): Displayable => tr(this.key, `setEffects.${setNum}`)\n  setEffectDocument = (setNum: SetNum) => this.sheet.setEffects[setNum]?.document\n\n  static get(set: ArtifactSetKey | undefined): Promise<ArtifactSheet> | undefined { return set ? artifactSheets.then(a => a[set]) : undefined }\n  static get getAll() { return artifactSheets }\n  static get getAllData() { return allData }\n  static setKeysByRarities(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>): Dict<ArtifactRarity, ArtifactSetKey[]> {\n    const grouped: Dict<ArtifactRarity, ArtifactSetKey[]> = {}\n    Object.entries(sheets).forEach(([key, sheet]) => {\n      const rarity = Math.max(...sheet.rarity) as ArtifactRarity\n      if (grouped[rarity]) grouped[rarity]!.push(key)\n      else grouped[rarity] = [key]\n    })\n    return grouped\n  }\n\n  static setEffects(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, data: UIData) {\n    const artifactSetEffect: Partial<Record<ArtifactSetKey, SetNum[]>> = {}\n    Object.entries(sheets).forEach(([setKey, sheet]) => {\n      const setNums = (Object.keys(sheet.setEffects).map(k => parseInt(k)) as SetNum[]).filter(sn => sheet.hasEnough(sn, data))\n      if (setNums.length) artifactSetEffect[setKey] = setNums\n    })\n    return artifactSetEffect\n  }\n  hasEnough = (setNum: SetNum, data: UIData) => (data.get(input.artSet[this.key]).value ?? 0) >= setNum\n}\nexport const conditionalHeader = (tr: (string) => Displayable, img: string): IConditional[\"header\"] => {\n  return {\n    title: tr(\"setName\"),\n    icon: <ImgIcon size={2} sx={{ m: -1 }} src={img} />,\n    action: <SqBadge color=\"success\">4-set</SqBadge>\n  }\n}\n","import { useCallback, useContext } from \"react\";\nimport { DatabaseContext } from \"../Database/Database\";\nimport { ICachedCharacter } from \"../Types/character\";\nimport { CharacterKey } from \"../Types/consts\";\nimport { deepClone } from \"../Util/Util\";\n\ntype characterEquipWeapon = {\n  type: \"weapon\", id: string\n}\ntype characterReducerBonusStatsAction = {\n  type: \"editStats\",\n  statKey: string\n  value: any | undefined\n}\ntype characterReducerenemyOverrideAction = {\n  type: \"enemyOverride\",\n  statKey: string\n  value: any | undefined\n}\ntype characterReducerResetStatsAction = {\n  type: \"resetStats\",\n  statKey: string\n}\ntype characterTeamAction = {\n  type: \"team\",\n  index: number,\n  charKey: CharacterKey | \"\"\n}\nexport type characterReducerAction = characterEquipWeapon | characterReducerBonusStatsAction | characterReducerenemyOverrideAction | characterReducerResetStatsAction | characterTeamAction | Partial<ICachedCharacter>\n\nexport default function useCharacterReducer(characterKey: CharacterKey | \"\") {\n  const database = useContext(DatabaseContext)\n\n  return useCallback((action: characterReducerAction): void => {\n    if (!characterKey) return\n\n    if (\"type\" in action) switch (action.type) {\n      case \"weapon\":\n        database.setWeaponLocation(action.id, characterKey)\n        break\n      case \"enemyOverride\": {\n        const character = database._getChar(characterKey)!\n        const enemyOverride = character.enemyOverride\n        const { statKey, value } = action\n        if (enemyOverride[statKey] === value) break\n        database.updateChar({ ...character, enemyOverride: { ...enemyOverride, [statKey]: value } })\n        break\n      }\n      case \"editStats\": {\n        const character = database._getChar(characterKey)!\n        const { statKey, value } = action\n\n        const bonusStats = deepClone(character.bonusStats)\n\n        if (bonusStats[statKey] === value) break\n        if (!value) delete bonusStats[statKey]\n        else bonusStats[statKey] = value\n\n        database.updateChar({ ...character, bonusStats })\n        break\n      }\n      case \"resetStats\": {\n        const character = database._getChar(characterKey)!\n        const { statKey } = action\n\n        const bonusStats = character.bonusStats\n        delete bonusStats[statKey]\n\n        database.updateChar({ ...character, bonusStats })\n        break\n      }\n      case \"team\": {\n        const character = database._getChar(characterKey)!\n        const { team } = character\n\n        const { index, charKey: newCharKey } = action\n        const oldCharKey = team[index]\n        team[index] = newCharKey\n\n        // move the old char to \"inventory\"\n        if (oldCharKey) {\n          const oldChar = database._getChar(oldCharKey)\n          if (oldChar) database.updateChar({ ...oldChar, team: [\"\", \"\", \"\"] })\n        }\n\n        // unequip new char from its old teammates\n        if (newCharKey) {\n          const newChar = database._getChar(newCharKey)\n          if (newChar) {\n            newChar.team.forEach(t => {\n              if (!t) return\n              const tChar = database._getChar(t)\n              tChar && database.updateChar({ ...tChar, team: tChar.team.map(c => c === newCharKey ? \"\" : c) as ICachedCharacter[\"team\"] })\n            })\n          }\n        }\n\n        // equip new char to new teammates\n        team.forEach((t, tind) => {\n          if (!t) return\n          const newChar = database._getChar(t)\n          if (newChar) database.updateChar({ ...newChar, team: [characterKey, ...team].filter((_, i) => i !== tind + 1) as ICachedCharacter[\"team\"] })\n        })\n\n        // update src character\n        database.updateChar({ ...character, team })\n      }\n    } else\n      database.updateChar({ ...database._getChar(characterKey)!, ...action })\n  }, [characterKey, database])\n\n}\n","import { useContext, useEffect, useState } from \"react\";\nimport { ArtifactSheet } from \"../Data/Artifacts/ArtifactSheet\";\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\nimport { ArtCharDatabase, DatabaseContext } from \"../Database/Database\";\nimport { TeamData } from \"../DataContext\";\nimport { common } from \"../Formula\";\nimport { dataObjForArtifact, dataObjForCharacter, uiDataForTeam, dataObjForWeapon } from \"../Formula/api\";\nimport { Data } from \"../Formula/type\";\nimport { ICachedArtifact } from \"../Types/artifact_WR\";\nimport { ICachedCharacter } from \"../Types/character_WR\";\nimport { CharacterKey } from \"../Types/consts\";\nimport { ICachedWeapon } from \"../Types/weapon_WR\";\nimport { objectMap } from \"../Util/Util\";\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\";\nimport useForceUpdate from \"./useForceUpdate\";\n\ntype TeamDataBundle = {\n  team: CharacterKey[],\n  teamData: Dict<CharacterKey, Data[]>\n  teamBundle: Dict<CharacterKey, CharBundle>\n}\n\nexport default function useTeamData(characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0): TeamData | undefined {\n  const database = useContext(DatabaseContext)\n  const [dbDirty, setDbDirty] = useForceUpdate()\n  const [teamDataBundle, setTeamdataBundle] = useState(undefined as TeamDataBundle | undefined)\n  useEffect(() => {\n    getTeamData(database, characterKey, mainStatAssumptionLevel).then(r => setTeamdataBundle(r))\n  }, [dbDirty, characterKey, database, mainStatAssumptionLevel])\n\n  const { team = [], teamData, teamBundle } = teamDataBundle ?? {}\n\n  const [t1, t2, t3, t4] = team\n  useEffect(() =>\n    t1 ? database.followChar(t1, setDbDirty) : undefined,\n    [t1, setDbDirty, database])\n  useEffect(() =>\n    t2 ? database.followChar(t2, setDbDirty) : undefined,\n    [t2, setDbDirty, database])\n  useEffect(() =>\n    t3 ? database.followChar(t3, setDbDirty) : undefined,\n    [t3, setDbDirty, database])\n  useEffect(() =>\n    t4 ? database.followChar(t4, setDbDirty) : undefined,\n    [t4, setDbDirty, database])\n  if (!teamData || !teamBundle) return\n  const calcData = uiDataForTeam(teamData, characterKey as CharacterKey)\n  const data = objectMap(calcData, (obj, ck) => {\n    const { data: _, ...rest } = teamBundle[ck]!\n    return { ...obj, ...rest }\n  })\n\n  return data\n}\n\nexport async function getTeamData(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[]):\n  Promise<TeamDataBundle | undefined> {\n  if (!characterKey) return\n  const char1DataBundle = await getCharDataBundle(database, characterKey, mainStatAssumptionLevel, overrideArt)\n  if (!char1DataBundle) return\n  const team: CharacterKey[] = [characterKey]\n  const teamBundle = { [characterKey]: char1DataBundle }\n  const teamData: Dict<CharacterKey, Data[]> = { [characterKey]: char1DataBundle.data }\n\n  await Promise.all(char1DataBundle.character.team.map(async (ck) => {\n    if (!ck) return\n    const databundle = await getCharDataBundle(database, ck)\n    if (!databundle) return\n    team.push(ck)\n    teamBundle[ck] = databundle\n    teamData[ck] = databundle.data\n  }))\n\n  return { team, teamData, teamBundle }\n}\ntype CharBundle = {\n  character: ICachedCharacter,\n  weapon: ICachedWeapon,\n  characterSheet: CharacterSheet,\n  weaponSheet: WeaponSheet,\n  data: Data[]\n}\nasync function getCharDataBundle(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[])\n  : Promise<CharBundle | undefined> {\n  if (!characterKey) return\n  const character = database._getChar(characterKey)\n  if (!character) return\n  const weapon = database._getWeapon(character.equippedWeapon)\n  if (!weapon) return\n  const characterSheet = await CharacterSheet.get(characterKey)\n  const weaponSheet = await WeaponSheet.get(weapon.key)\n  const artifactSheetsData = await ArtifactSheet.getAllData\n  if (!characterSheet || !weaponSheet || !artifactSheetsData) return\n  const artifacts = (overrideArt ?? Object.values(character.equippedArtifacts).map(a => database._getArt(a))).filter(a => a) as ICachedArtifact[]\n  const data = [\n    ...artifacts.map(a => dataObjForArtifact(a, mainStatAssumptionLevel)),\n    dataObjForCharacter(character),\n    characterSheet.data,\n    dataObjForWeapon(weapon),\n    weaponSheet.data,\n    artifactSheetsData,\n    common, // NEED TO PUT THIS AT THE END\n  ]\n  return { character, weapon, characterSheet, weaponSheet, data }\n}\n","import { ToggleButton } from \"@mui/material\";\nimport { useCallback } from \"react\";\nimport Assets from \"../../Assets/Assets\";\nimport { allWeaponTypeKeys, WeaponTypeKey } from \"../../Types/consts\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport SolidToggleButtonGroup, { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\ntype WeaponToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\n  onChange: (value: WeaponTypeKey | \"\") => void\n  value: WeaponTypeKey | \"\"\n}\nexport default function WeaponToggle({ value, onChange, ...props }: WeaponToggleProps) {\n  const cb = useCallback((e, newVal) => onChange(newVal || \"\"), [onChange])\n  return <SolidToggleButtonGroup exclusive onChange={cb} value={value || allWeaponTypeKeys} {...props}>\n    {allWeaponTypeKeys.map(wt => <ToggleButton key={wt} value={wt}>\n      <ImgIcon src={Assets.weaponTypes?.[wt]} size={2} />\n    </ToggleButton>)}\n  </SolidToggleButtonGroup>\n}","import { useCallback, useContext } from \"react\";\nimport { useHistory } from \"react-router\";\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\nimport { initialCharacter } from \"../Util/CharacterUtil\";\nimport { DatabaseContext } from \"../Database/Database\";\nimport { CharacterKey } from \"../Types/consts\";\nimport { defaultInitialWeapon } from \"../Util/WeaponUtil\";\n\n/**\n * Basically a history hook to go to the dedicated character page. Will create the character if it doesn't exist.\n * @returns\n */\nexport default function useCharSelectionCallback() {\n  const database = useContext(DatabaseContext)\n  const history = useHistory()\n  const cb = useCallback(\n    async (characterKey: CharacterKey) => {\n      const character = database._getChar(characterKey)\n      // Create a new character + weapon, with linking if char isnt in db.\n      if (!character) {\n        const newChar = initialCharacter(characterKey)\n        database.updateChar(newChar)\n        const characterSheet = await CharacterSheet.get(characterKey)\n        if (!characterSheet) return\n        const weapon = defaultInitialWeapon(characterSheet.weaponTypeKey)\n        const weaponId = database.createWeapon(weapon)\n        database.setWeaponLocation(weaponId, characterKey)\n      }\n      history.push(`/character/${characterKey}`)\n    },\n    [history, database],\n  )\n  return cb\n}\n","import { initialBuildSettings } from \"../PageBuild/BuildSetting\"\nimport { ICachedCharacter } from \"../Types/character_WR\"\nimport { allSlotKeys, CharacterKey } from \"../Types/consts\"\nimport { objectKeyMap } from \"./Util\"\n\nexport function initialCharacter(key: CharacterKey): ICachedCharacter {\n  return {\n    key, // the game character this is based off\n    level: 1,\n    ascension: 0,\n    hitMode: \"avgHit\",\n    reactionMode: \"\",\n    equippedArtifacts: objectKeyMap(allSlotKeys, () => \"\"),\n    equippedWeapon: \"\",\n    conditional: {},\n    bonusStats: {},\n    enemyOverride: {},\n    buildSettings: initialBuildSettings(),\n    talent: {\n      auto: 1,\n      skill: 1,\n      burst: 1,\n    },\n    infusionAura: \"\",\n    constellation: 0,\n    team: [\"\", \"\", \"\"],\n    compareData: false,\n  }\n}\n","type SortConfig<T> = {\n  getValue: (id: T) => number | string\n  tieBreaker?: string\n}\nexport type SortConfigs<Keys extends string, T> = Record<Keys, SortConfig<T>>\n\nexport function sortFunction<Keys extends string, T>(sortby: string, ascending: boolean, configs: SortConfigs<Keys, T>) {\n  function Sort(a: T, b: T, ascending: boolean, config: SortConfig<T>) {\n    const aV = config.getValue(a)\n    const bV = config.getValue(b)\n    let diff = 0\n    if (typeof aV === \"string\" && typeof bV === \"string\")\n      diff = aV.localeCompare(bV)\n    else\n      diff = ((bV as number) - (aV as number))\n    return (ascending ? -1 : 1) * diff\n  }\n  return (a: T, b: T) => {\n    if (!configs[sortby]) return 0\n    const filterOption = configs[sortby]\n    let diff = Sort(a, b, ascending, filterOption)\n    if (!diff && filterOption.tieBreaker && configs[filterOption.tieBreaker])\n      diff = Sort(a, b, ascending, configs[filterOption.tieBreaker])\n    return diff\n  }\n}\n\ntype FilterConfig<T> = (obj: T, filter: any) => boolean\nexport type FilterConfigs<Keys extends string, T> = Record<Keys, FilterConfig<T>>\nexport function filterFunction<Keys extends string, T>(filterOptions: Record<Keys, any>, filterConfigs: FilterConfigs<Keys, T>) {\n  return (obj: T) => Object.entries(filterOptions).every(([optionKey, optionVal]) => filterConfigs[optionKey as any](obj, optionVal))\n}","import { faSortAmountDownAlt, faSortAmountUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button, ButtonGroup, ButtonGroupProps, MenuItem } from \"@mui/material\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport DropdownButton from \"./DropdownMenu/DropdownButton\";\n\ntype SortByButtonProps = ButtonGroupProps & {\n  sortKeys: string[]\n  value: string\n  onChange: (value: string) => void\n  ascending: boolean\n  onChangeAsc: (value: boolean) => void\n}\n// Assumes that all the sortKeys has corresponding translations in ui.json sortMap\nexport default function SortByButton({ sortKeys, value, onChange, ascending, onChangeAsc, ...props }: SortByButtonProps) {\n  const { t } = useTranslation(\"ui\")\n  return <ButtonGroup {...props} >\n    <DropdownButton title={<Trans t={t} i18nKey=\"sortByFormat\" value={t(`sortMap.${value}`) as any}>Sort By: {{ value: t(`sortMap.${value}`) }}</Trans>}>\n      {sortKeys.map(key =>\n        <MenuItem key={key} selected={value === key} disabled={value === key} onClick={() => onChange(key)}>{t(`sortMap.${key}`) as any}</MenuItem>)}\n    </DropdownButton>\n    <Button onClick={() => onChangeAsc(!ascending)} startIcon={<FontAwesomeIcon icon={ascending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" />}>\n      {ascending ? <Trans t={t} i18nKey=\"ascending\" >Ascending</Trans> : <Trans t={t} i18nKey=\"descending\" >Descending</Trans>}\n    </Button>\n  </ButtonGroup>\n}","import { Box, CardActionArea, CardContent, Chip, Grid, Skeleton, Typography } from '@mui/material';\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\nimport { ArtifactSheet } from '../Data/Artifacts/ArtifactSheet';\nimport CardDark from '../Components/Card/CardDark';\nimport CardLight from '../Components/Card/CardLight';\nimport ConditionalWrapper from '../Components/ConditionalWrapper';\nimport ImgIcon from '../Components/Image/ImgIcon';\nimport SqBadge from '../Components/SqBadge';\nimport { Stars } from '../Components/StarDisplay';\nimport StatIcon from '../Components/StatIcon';\nimport { ascensionMaxLevel } from '../Data/LevelData';\nimport { DatabaseContext } from '../Database/Database';\nimport { DataContext, dataContextObj, TeamData } from '../DataContext';\nimport { uiInput as input } from '../Formula';\nimport { computeUIData, dataObjForWeapon, valueString } from '../Formula/api';\nimport { NumNode } from '../Formula/type';\nimport KeyMap from '../KeyMap';\nimport useCharacterReducer from '../ReactHooks/useCharacterReducer';\nimport usePromise from '../ReactHooks/usePromise';\nimport useTeamData from '../ReactHooks/useTeamData';\nimport { ICachedArtifact } from '../Types/artifact_WR';\nimport { allSlotKeys, CharacterKey, ElementKey, SlotKey } from '../Types/consts';\nimport { ICachedWeapon } from '../Types/weapon_WR';\nimport WeaponSheet from '../Data/Weapons/WeaponSheet';\n\ntype CharacterCardProps = {\n  characterKey: CharacterKey | \"\",\n  onClick?: (characterKey: CharacterKey) => void,\n  onClickHeader?: (characterKey: CharacterKey) => void,\n  artifactChildren?: Displayable,\n  weaponChildren?: Displayable,\n  characterChildren?: Displayable,\n  footer?: Displayable,\n}\nexport default function CharacterCard({ characterKey, artifactChildren, weaponChildren, characterChildren, onClick, onClickHeader, footer }: CharacterCardProps) {\n  const { teamData: teamDataContext } = useContext(DataContext)\n  const teamData = useTeamData(teamDataContext ? \"\" : characterKey) ?? (teamDataContext as TeamData | undefined)\n  const { character, characterSheet, target: data } = teamData?.[characterKey] ?? {}\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey), [characterKey, onClick])\n  const actionWrapperFunc = useCallback(\n    children => <CardActionArea onClick={onClickHandler} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\n    [onClickHandler],\n  )\n  const characterDispatch = useCharacterReducer(characterKey)\n  if (!teamData || !character || !characterSheet || !data) return null;\n  const dataContextObj: dataContextObj = {\n    character,\n    data,\n    characterSheet,\n    mainStatAssumptionLevel: 0,\n    teamData,\n    characterDispatch\n  }\n\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 350 }} />}>\n    <DataContext.Provider value={dataContextObj}>\n      <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n        <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\n          <Header onClick={!onClick ? onClickHeader : undefined} />\n          <CardContent sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 1, flexGrow: 1 }}>\n            <Weapon weaponId={character.equippedWeapon} />\n            {weaponChildren}\n            {/* will grow to fill the 100% height */}\n            <Box flexGrow={1} display=\"flex\" flexDirection=\"column\" gap={1}>\n              <ArtifactDisplay />\n              {artifactChildren}\n            </Box>\n            <Stats />\n            {characterChildren}\n          </CardContent>\n        </ConditionalWrapper>\n        {footer}\n      </CardLight>\n    </DataContext.Provider>\n  </Suspense>\n}\nfunction Header({ onClick }: { onClick?: (characterKey: CharacterKey) => void }) {\n  const { data, characterSheet } = useContext(DataContext)\n  const characterKey = data.get(input.charKey).value as CharacterKey\n  const characterEle = data.get(input.charEle).value as ElementKey\n  const characterLevel = data.get(input.lvl).value\n  const constellation = data.get(input.constellation).value\n  const ascension = data.get(input.asc).value\n  const autoBoost = data.get(input.bonus.auto).value\n  const skillBoost = data.get(input.bonus.skill).value\n  const burstBoost = data.get(input.bonus.burst).value\n\n  const tAuto = data.get(input.total.auto).value\n  const tSkill = data.get(input.total.skill).value\n  const tBurst = data.get(input.total.burst).value\n\n  const actionWrapperFunc = useCallback(\n    children => <CardActionArea onClick={() => characterKey && onClick?.(characterKey)} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\n    [onClick, characterKey],\n  )\n  return <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\n    <Box display=\"flex\"\n      position=\"relative\"\n      className={`grad-${characterSheet.rarity}star`}\n      sx={{\n        \"&::before\": {\n          content: '\"\"',\n          display: \"block\", position: \"absolute\",\n          left: 0, top: 0,\n          width: \"100%\", height: \"100%\",\n          opacity: 0.7,\n          backgroundImage: `url(${characterSheet.bannerImg})`, backgroundPosition: \"center\", backgroundSize: \"cover\",\n        }\n      }}\n      width=\"100%\" >\n      <Box flexShrink={1} sx={{ maxWidth: { xs: \"40%\", lg: \"40%\" } }} alignSelf=\"flex-end\" display=\"flex\" flexDirection=\"column\" zIndex={1}>\n        <Box\n          component=\"img\"\n          src={characterSheet.thumbImg}\n          width=\"100%\"\n          height=\"auto\"\n          maxWidth={256}\n          sx={{ mt: \"auto\" }}\n        />\n      </Box>\n      <Box flexGrow={1} sx={{ py: 1, pr: 1 }} display=\"flex\" flexDirection=\"column\" zIndex={1}>\n        <Chip label={<Typography variant=\"subtitle1\">{characterSheet.name}</Typography>} size=\"small\" color={characterEle} />\n        <Grid container spacing={1} flexWrap=\"nowrap\">\n          <Grid item sx={{ textShadow: \"0 0 5px gray\" }}>\n            <Typography component=\"span\" variant=\"h6\" whiteSpace=\"nowrap\" >Lv. {characterLevel}</Typography>\n            <Typography component=\"span\" variant=\"h6\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"h6\"><SqBadge>C{constellation}</SqBadge></Typography>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1} flexWrap=\"nowrap\">\n          <Grid item>\n            <Chip color={autoBoost ? \"info\" : \"secondary\"} label={<strong >{tAuto}</strong>} />\n          </Grid>\n          <Grid item>\n            <Chip color={skillBoost ? \"info\" : \"secondary\"} label={<strong >{tSkill}</strong>} />\n          </Grid>\n          <Grid item>\n            <Chip color={burstBoost ? \"info\" : \"secondary\"} label={<strong >{tBurst}</strong>} />\n          </Grid>\n        </Grid>\n        <Typography mt={1} ><Stars stars={characterSheet.rarity} colored /></Typography>\n      </Box>\n    </Box>\n  </ConditionalWrapper>\n}\nfunction Weapon({ weaponId }: { weaponId: string }) {\n  const database = useContext(DatabaseContext)\n  const weapon = database._getWeapon(weaponId)\n  const weaponSheet = usePromise(weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  if (!weapon || !weaponSheet || !UIData) return null;\n  const name = weaponSheet?.name\n  const mainVal = valueString(UIData.get(input.weapon.main).value, UIData.get(input.weapon.main).unit, 0)\n  const subKey = UIData.get(input.weapon.sub).key\n  const subVal = valueString(UIData.get(input.weapon.sub).value, UIData.get(input.weapon.sub).unit, UIData.get(input.weapon.sub).unit === \"flat\" ? 0 : undefined)\n  const levelName = WeaponSheet.getLevelString(weapon as ICachedWeapon)\n  return <CardDark>\n    <Box display=\"flex\" >\n      <Box flexShrink={1} maxWidth=\"35%\" display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`} >\n        <Box\n          component=\"img\"\n          src={weaponSheet.img}\n          width=\"100%\"\n          height=\"auto\"\n          sx={{ mt: \"auto\" }}\n        />\n      </Box>\n      <Box flexGrow={1} sx={{ p: 1 }}>\n        <Typography variant=\"body2\"><strong>{name}</strong></Typography>\n        <Typography whiteSpace=\"nowrap\" lineHeight={1}>\n          <SqBadge color=\"primary\" sx={{ mr: 1 }}>Lv. {levelName}</SqBadge>\n          {subKey && <SqBadge color=\"info\"> Refinement {weapon.refinement}</SqBadge>}\n        </Typography>\n        <Typography variant=\"subtitle1\">ATK: {mainVal}</Typography>\n        {subKey && <Typography variant=\"subtitle2\" lineHeight={1}>{KeyMap.get(subKey)}: {subVal}</Typography>}\n      </Box>\n    </Box>\n  </CardDark>\n}\nfunction ArtifactDisplay() {\n  const database = useContext(DatabaseContext)\n  const { data } = useContext(DataContext)\n  const artifactSheets = usePromise(ArtifactSheet.getAll, [])\n  const artifacts = useMemo(() =>\n    allSlotKeys.map(k => [k, database._getArt(data.get(input.art[k].id).value ?? \"\")]),\n    [data, database]) as Array<[SlotKey, ICachedArtifact | undefined]>;\n  if (!artifactSheets) return null\n  return <Grid container spacing={1} >\n    {artifacts.map(([key, art]) => {\n      if (!art) return null\n      const { setKey, slotKey, mainStatKey } = art\n      return <Grid item key={key} flexGrow={1}>\n        <Chip color=\"secondary\" sx={{ width: \"100%\" }} icon={<ImgIcon src={artifactSheets?.[setKey].slotIcons[slotKey]} size={2.5} />}\n          label={<span>{KeyMap.get(mainStatKey)}</span>} />\n      </Grid>\n    })}\n  </Grid>\n}\nfunction Stats() {\n  const { data } = useContext(DataContext)\n  const statkeys = [\"hp\", \"atk\", \"def\", \"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\",]\n  statkeys.push(`${data.get(input.charEle).value}_dmg_`)\n  if (data.get(input.weaponType).value !== \"catalyst\")\n    statkeys.push(\"physical_dmg_\")\n\n  return <Box sx={{ width: \"100%\" }} >\n    {statkeys.map(statKey => {\n      const stat = data.get(input.total[statKey] as NumNode)\n      const val = valueString(stat.value, stat.unit, stat.unit === \"flat\" ? 0 : undefined)\n      return <Box sx={{ display: \"flex\" }} key={statKey}>\n        <Typography flexGrow={1} color={`${stat.variant}.main`}><strong>{StatIcon[statKey]} {KeyMap.get(stat.key!)}</strong></Typography>\n        <Typography>{val}</Typography>\n      </Box>\n    })}\n    {data.get(input.special).key && <Box sx={{ display: \"flex\" }} >\n      <Typography flexGrow={1}><strong>Specialized:</strong></Typography>\n      <Typography>{KeyMap.get(data.get(input.special).key!)}</Typography>\n    </Box>}\n  </Box>\n}\n","import { Box, CardActionArea, CardContent, Divider, Grid, Typography } from \"@mui/material\";\nimport { useContext, useMemo, useState } from \"react\";\nimport Assets from \"../../Assets/Assets\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport { DatabaseContext } from \"../../Database/Database\";\nimport { uiInput as input } from \"../../Formula\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport useTeamData from \"../../ReactHooks/useTeamData\";\nimport { ICachedCharacter } from \"../../Types/character_WR\";\nimport { allCharacterKeys, CharacterKey, ElementKey, WeaponTypeKey } from \"../../Types/consts\";\nimport { characterFilterConfigs, characterSortConfigs } from \"../../Util/CharacterSort\";\nimport { filterFunction, sortFunction } from \"../../Util/SortByFilters\";\nimport CardDark from \"../Card/CardDark\";\nimport CardLight from \"../Card/CardLight\";\nimport CloseButton from \"../CloseButton\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport ModalWrapper from \"../ModalWrapper\";\nimport SortByButton from \"../SortByButton\";\nimport SqBadge from \"../SqBadge\";\nimport { Stars } from \"../StarDisplay\";\nimport StatIcon from \"../StatIcon\";\nimport ElementToggle from \"../ToggleButton/ElementToggle\";\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\";\n\nconst defaultSortKeys = [\"level\", \"rarity\", \"name\"]\n\ntype characterFilter = (character: ICachedCharacter | undefined, sheet: CharacterSheet) => boolean\n\ntype CharacterSelectionModalProps = {\n  show: boolean,\n  newFirst?: boolean\n  onHide: () => void,\n  onSelect?: (ckey: CharacterKey) => void,\n  filter?: characterFilter\n}\n\nexport function CharacterSelectionModal({ show, onHide, onSelect, filter = () => true, newFirst = false }: CharacterSelectionModalProps) {\n  const sortKeys = useMemo(() => newFirst ? [\"new\", ...defaultSortKeys] : defaultSortKeys, [newFirst])\n  const database = useContext(DatabaseContext)\n\n  const [sortBy, setsortBy] = useState(sortKeys[0])\n  const [ascending, setascending] = useState(false)\n  const [elementalFilter, setelementalFilter] = useState<ElementKey | \"\">(\"\")\n  const [weaponFilter, setweaponFilter] = useState<WeaponTypeKey | \"\">(\"\")\n\n  const characterSheets = usePromise(CharacterSheet.getAll, [])\n\n  const sortConfigs = useMemo(() => characterSheets && characterSortConfigs(database, characterSheets), [database, characterSheets])\n  const filterConfigs = useMemo(() => characterSheets && characterFilterConfigs(characterSheets), [characterSheets])\n  const characterKeyList = useMemo(() => (characterSheets && sortConfigs && filterConfigs) ?\n    [...new Set(allCharacterKeys)].filter(cKey => filter(database._getChar(cKey), characterSheets[cKey]))\n      .filter(filterFunction({ element: elementalFilter, weaponType: weaponFilter }, filterConfigs))\n      .sort(sortFunction(sortBy, ascending, sortConfigs) as (a: CharacterKey, b: CharacterKey) => number) : [],\n    [database, characterSheets, filter, elementalFilter, weaponFilter, sortBy, ascending, sortConfigs, filterConfigs])\n\n  if (!characterSheets) return null\n  return <ModalWrapper open={show} onClose={onHide} >\n    <CardDark>\n      <CardContent sx={{ py: 1 }}>\n        <Grid container spacing={1} >\n          <Grid item>\n            <WeaponToggle sx={{ height: \"100%\" }} onChange={setweaponFilter} value={weaponFilter} size=\"small\" />\n          </Grid>\n          <Grid item flexGrow={1}>\n            <ElementToggle sx={{ height: \"100%\" }} onChange={setelementalFilter} value={elementalFilter} size=\"small\" />\n          </Grid>\n\n          <Grid item flexGrow={1} />\n\n          <Grid item >\n            <SortByButton sx={{ height: \"100%\" }}\n              sortKeys={sortKeys} value={sortBy} onChange={setsortBy as any}\n              ascending={ascending} onChangeAsc={setascending} />\n          </Grid>\n          <Grid item>\n            <CloseButton onClick={onHide} />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent><Grid container spacing={1}>\n        {characterKeyList.map(characterKey => <Grid item key={characterKey} xs={6} md={4} lg={3} >\n          <CharacterBtn key={characterKey} characterKey={characterKey} onClick={() => { onHide(); onSelect?.(characterKey) }} />\n        </Grid>)}\n      </Grid></CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n\nfunction CharacterBtn({ onClick, characterKey }: { onClick: () => void, characterKey: CharacterKey }) {\n  const characterSheet = usePromise(CharacterSheet.get(characterKey), [characterKey])\n  const teamData = useTeamData(characterKey)\n  const { target: data } = teamData?.[characterKey] ?? {}\n  if (!characterSheet) return null\n  const rarity = characterSheet.rarity\n  return <CardActionArea onClick={onClick} >\n    <CardLight sx={{ display: \"flex\", alignItems: \"center\" }}  >\n      <Box component=\"img\" src={characterSheet.thumbImg} sx={{ width: 130, height: \"auto\" }} className={`grad-${rarity}star`} />\n      <Box sx={{ pl: 1 }}>\n        <Typography><strong>{characterSheet.name}</strong></Typography>\n        {data ? <>\n          <Typography variant=\"h6\"> {characterSheet.elementKey && StatIcon[characterSheet.elementKey]} <ImgIcon src={Assets.weaponTypes?.[characterSheet.weaponTypeKey]} />{` `}{CharacterSheet.getLevelString(data.get(input.lvl).value, data.get(input.asc).value)}</Typography>\n          <Typography >\n            <SqBadge color=\"success\">{`C${data.get(input.constellation).value}`}</SqBadge>{` `}\n            <SqBadge color={data.get(input.bonus.auto).value ? \"info\" : \"secondary\"}><strong >{data.get(input.total.auto).value}</strong></SqBadge>{` `}\n            <SqBadge color={data.get(input.bonus.skill).value ? \"info\" : \"secondary\"}><strong >{data.get(input.total.skill).value}</strong></SqBadge>{` `}\n            <SqBadge color={data.get(input.bonus.burst).value ? \"info\" : \"secondary\"}><strong >{data.get(input.total.burst).value}</strong></SqBadge>\n          </Typography>\n        </> : <>\n          <Typography variant=\"h6\"><SqBadge color=\"primary\">NEW</SqBadge></Typography>\n        </>}\n        <small><Stars stars={rarity} colored /></small>\n      </Box>\n    </CardLight>\n  </CardActionArea >\n}\n","import CharacterSheet from \"../Data/Characters/CharacterSheet\";\nimport { ArtCharDatabase } from \"../Database/Database\";\nimport { CharacterKey } from \"../Types/consts\";\nimport { FilterConfigs, SortConfigs } from \"./SortByFilters\";\nexport const characterSortKeys = [\"level\", \"rarity\", \"name\"]\nexport type CharacterSortKey = typeof characterSortKeys[number]\n\nexport function characterSortConfigs(database: ArtCharDatabase, characterSheets: Record<CharacterKey, CharacterSheet>): SortConfigs<CharacterSortKey, CharacterKey> {\n  return {\n    new: {\n      getValue: (ck) => database._getChar(ck as CharacterKey) ? 0 : 1,\n      tieBreaker: \"name\"\n    },\n    name: {\n      getValue: (ck) => ck,\n    },\n    level: {\n      getValue: (ck) => database._getChar(ck as CharacterKey)?.level ?? 0,\n      tieBreaker: \"rarity\"\n    },\n    rarity: {\n      getValue: (ck) => characterSheets?.[ck]?.rarity,\n      tieBreaker: \"level\"\n    }\n  }\n}\n\nexport function characterFilterConfigs(characterSheets: Record<CharacterKey, CharacterSheet>): FilterConfigs<\"element\" | \"weaponType\", CharacterKey> {\n  return {\n    element: (ck, filter) => !filter || (filter === characterSheets?.[ck]?.elementKey),\n    weaponType: (ck, filter) => !filter || (filter === characterSheets?.[ck]?.weaponTypeKey),\n  }\n}\n","import { ButtonProps, ToggleButton, ToggleButtonProps, styled } from \"@mui/material\";\n\ntype SolidColoredToggleButtonPartial = {\n  baseColor?: ButtonProps[\"color\"];\n  selectedColor?: ButtonProps[\"color\"];\n}\nexport type SolidColoredToggleButtonProps = SolidColoredToggleButtonPartial & ToggleButtonProps\n\n\nconst SolidColoredToggleButton = styled(ToggleButton, {\n  shouldForwardProp: (prop) => prop !== \"baseColor\" && prop !== \"selectedColor\"\n})<SolidColoredToggleButtonPartial>(({ theme, baseColor = \"primary\", selectedColor = \"success\" }) => ({\n  '&': {\n    backgroundColor: theme.palette[baseColor].main,\n    color: theme.palette[baseColor].contrastText,\n  },\n  '&:hover': {\n    backgroundColor: theme.palette[baseColor].dark,\n  },\n  '&.Mui-selected': {\n    backgroundColor: theme.palette[selectedColor].main,\n    color: theme.palette[selectedColor].contrastText,\n  },\n  '&.Mui-selected:hover': {\n    backgroundColor: theme.palette[selectedColor].dark,\n  },\n  '&.Mui-disabled': {\n    backgroundColor: theme.palette[baseColor].dark,\n  },\n  '&.Mui-selected.Mui-disabled': {\n    backgroundColor: theme.palette[selectedColor].dark,\n  },\n}));\n\nexport default SolidColoredToggleButton","import { Box, ToggleButtonGroup } from \"@mui/material\";\nimport { useCallback } from \"react\";\nimport { allElements, ElementKey } from \"../../Types/consts\";\nimport SolidColoredToggleButton from \"../SolidColoredToggleButton\";\nimport { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\nimport { uncoloredEleIcons } from \"../StatIcon\";\ntype ElementToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\n  onChange: (value: ElementKey | \"\") => void\n  value: ElementKey | \"\"\n}\nexport default function ElementToggle({ value, onChange, ...props }: ElementToggleProps) {\n  const cb = useCallback((e, newVal) => onChange(newVal || \"\"), [onChange])\n  return <ToggleButtonGroup exclusive onChange={cb} value={value || allElements} {...props}>\n    {allElements.map(ele => <SolidColoredToggleButton key={ele} value={ele} selectedColor={ele} >\n      <Box sx={{ fontSize: \"2em\", lineHeight: 1 }}>{uncoloredEleIcons[ele]}</Box>\n    </SolidColoredToggleButton>)}\n  </ToggleButtonGroup>\n}\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { Button, CardContent, Divider, Grid, Skeleton, Typography } from \"@mui/material\"\nimport { Suspense, useState } from \"react\"\nimport { dbStorage } from \"../Database/DBStorage\"\nimport { getRandomElementFromArray } from \"../Util/Util\"\nimport CardDark from \"./Card/CardDark\"\nimport CloseButton from \"./CloseButton\"\nimport ModalWrapper from \"./ModalWrapper\"\nimport { Translate } from \"./Translate\"\n\nexport default function InfoComponent({ pageKey = \"\", text = \"\", modalTitle = \"\", children }: { pageKey: string, text: Displayable | Displayable[], modalTitle: Displayable, children: JSX.Element }) {\n  const [showInfoModal, setshowInfoModal] = useState(dbStorage.get(\"infoShown\")?.[pageKey] ?? true)\n  const [displayText,] = useState(Array.isArray(text) ? getRandomElementFromArray(text) : text)\n  const closeModal = () => {\n    const infoShown = dbStorage.get(\"infoShown\") ?? {}\n    infoShown[pageKey] = false\n    dbStorage.set(\"infoShown\", infoShown)\n    setshowInfoModal(false)\n  }\n  return <CardDark >\n    <Grid container>\n      <Grid item flexGrow={1}>\n        <Typography variant=\"caption\" pl={1} >\n          {displayText}\n        </Typography>\n      </Grid>\n      <Grid item xs=\"auto\">\n        <Button size=\"small\" color=\"info\" variant=\"contained\" onClick={() => setshowInfoModal(true)} startIcon={<FontAwesomeIcon icon={faQuestionCircle} />}>\n          <Translate ns=\"ui\" key18=\"info\" />\n        </Button>\n      </Grid>\n    </Grid>\n    <ModalWrapper containerProps={{ maxWidth: \"xl\" }} open={showInfoModal} onClose={() => closeModal()} >\n      <CardDark >\n        <CardContent sx={{ py: 1 }}>\n          <Grid container>\n            <Grid item flexGrow={1}>\n              <Typography variant=\"h6\">{modalTitle}</Typography>\n            </Grid>\n            <Grid item>\n              <CloseButton onClick={closeModal} />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardContent>\n          <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={500} />}>\n            {children}\n          </Suspense>\n        </CardContent>\n        <Divider />\n        <CardContent sx={{ py: 1 }}>\n          <CloseButton large onClick={closeModal} />\n        </CardContent>\n      </CardDark>\n    </ModalWrapper >\n  </CardDark>\n}","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getChipUtilityClass(slot) {\n  return generateUtilityClass('MuiChip', slot);\n}\nconst chipClasses = generateUtilityClasses('MuiChip', ['root', 'sizeSmall', 'sizeMedium', 'colorPrimary', 'colorSecondary', 'disabled', 'clickable', 'clickableColorPrimary', 'clickableColorSecondary', 'deletable', 'deletableColorPrimary', 'deletableColorSecondary', 'outlined', 'filled', 'outlinedPrimary', 'outlinedSecondary', 'avatar', 'avatarSmall', 'avatarMedium', 'avatarColorPrimary', 'avatarColorSecondary', 'icon', 'iconSmall', 'iconMedium', 'iconColorPrimary', 'iconColorSecondary', 'label', 'labelSmall', 'labelMedium', 'deleteIcon', 'deleteIconSmall', 'deleteIconMedium', 'deleteIconColorPrimary', 'deleteIconColorSecondary', 'deleteIconOutlinedColorPrimary', 'deleteIconOutlinedColorSecondary', 'focusVisible']);\nexport default chipClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"avatar\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport chipClasses, { getChipUtilityClass } from './chipClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    size,\n    color,\n    onDelete,\n    clickable,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, disabled && 'disabled', `size${capitalize(size)}`, `color${capitalize(color)}`, clickable && 'clickable', clickable && `clickableColor${capitalize(color)}`, onDelete && 'deletable', onDelete && `deletableColor${capitalize(color)}`, `${variant}${capitalize(color)}`],\n    label: ['label', `label${capitalize(size)}`],\n    avatar: ['avatar', `avatar${capitalize(size)}`, `avatarColor${capitalize(color)}`],\n    icon: ['icon', `icon${capitalize(size)}`, `iconColor${capitalize(color)}`],\n    deleteIcon: ['deleteIcon', `deleteIcon${capitalize(size)}`, `deleteIconColor${capitalize(color)}`, `deleteIconOutlinedColor${capitalize(color)}`]\n  };\n  return composeClasses(slots, getChipUtilityClass, classes);\n};\n\nconst ChipRoot = styled('div', {\n  name: 'MuiChip',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      color,\n      clickable,\n      onDelete,\n      size,\n      variant\n    } = ownerState;\n    return [{\n      [`& .${chipClasses.avatar}`]: styles.avatar\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatar${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatarColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles.icon\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`icon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`iconColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles.deleteIcon\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIcon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIconColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIconOutlinedColor${capitalize(color)}`]\n    }, styles.root, styles[`size${capitalize(size)}`], styles[`color${capitalize(color)}`], clickable && styles.clickable, clickable && color !== 'default' && styles[`clickableColor${capitalize(color)})`], onDelete && styles.deletable, onDelete && color !== 'default' && styles[`deletableColor${capitalize(color)}`], styles[variant], variant === 'outlined' && styles[`outlined${capitalize(color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const deleteIconColor = alpha(theme.palette.text.primary, 0.26);\n  return _extends({\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(13),\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 32,\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.action.selected,\n    borderRadius: 32 / 2,\n    whiteSpace: 'nowrap',\n    transition: theme.transitions.create(['background-color', 'box-shadow']),\n    // label will inherit this from root, then `clickable` class overrides this for both\n    cursor: 'default',\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    textDecoration: 'none',\n    border: 0,\n    // Remove `button` border\n    padding: 0,\n    // Remove `button` padding\n    verticalAlign: 'middle',\n    boxSizing: 'border-box',\n    [`&.${chipClasses.disabled}`]: {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`& .${chipClasses.avatar}`]: {\n      marginLeft: 5,\n      marginRight: -6,\n      width: 24,\n      height: 24,\n      color: theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      fontSize: theme.typography.pxToRem(12)\n    },\n    [`& .${chipClasses.avatarColorPrimary}`]: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.dark\n    },\n    [`& .${chipClasses.avatarColorSecondary}`]: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.dark\n    },\n    [`& .${chipClasses.avatarSmall}`]: {\n      marginLeft: 4,\n      marginRight: -4,\n      width: 18,\n      height: 18,\n      fontSize: theme.typography.pxToRem(10)\n    },\n    [`& .${chipClasses.icon}`]: _extends({\n      color: theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    }, ownerState.size === 'small' && {\n      fontSize: 18,\n      marginLeft: 4,\n      marginRight: -4\n    }, ownerState.color !== 'default' && {\n      color: 'inherit'\n    }),\n    [`& .${chipClasses.deleteIcon}`]: _extends({\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      fontSize: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: alpha(deleteIconColor, 0.4)\n      }\n    }, ownerState.size === 'small' && {\n      fontSize: 16,\n      marginRight: 4,\n      marginLeft: -4\n    }, ownerState.color !== 'default' && {\n      color: alpha(theme.palette[ownerState.color].contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette[ownerState.color].contrastText\n      }\n    })\n  }, ownerState.size === 'small' && {\n    height: 24\n  }, ownerState.color !== 'default' && {\n    backgroundColor: theme.palette[ownerState.color].main,\n    color: theme.palette[ownerState.color].contrastText\n  }, ownerState.onDelete && {\n    [`&.${chipClasses.focusVisible}`]: {\n      backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  }, ownerState.onDelete && ownerState.color !== 'default' && {\n    [`&.${chipClasses.focusVisible}`]: {\n      backgroundColor: theme.palette[ownerState.color].dark\n    }\n  });\n}, ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.clickable && {\n  userSelect: 'none',\n  WebkitTapHighlightColor: 'transparent',\n  cursor: 'pointer',\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n  },\n  '&:active': {\n    boxShadow: theme.shadows[1]\n  }\n}, ownerState.clickable && ownerState.color !== 'default' && {\n  [`&:hover, &.${chipClasses.focusVisible}`]: {\n    backgroundColor: theme.palette[ownerState.color].dark\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.variant === 'outlined' && {\n  backgroundColor: 'transparent',\n  border: `1px solid ${theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[700]}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: theme.palette.action.hover\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: theme.palette.action.focus\n  },\n  [`& .${chipClasses.avatar}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.avatarSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.icon}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.iconSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    marginRight: 5\n  },\n  [`& .${chipClasses.deleteIconSmall}`]: {\n    marginRight: 3\n  }\n}, ownerState.variant === 'outlined' && ownerState.color !== 'default' && {\n  color: theme.palette[ownerState.color].main,\n  border: `1px solid ${alpha(theme.palette[ownerState.color].main, 0.7)}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity)\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.focusOpacity)\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    color: alpha(theme.palette[ownerState.color].main, 0.7),\n    '&:hover, &:active': {\n      color: theme.palette[ownerState.color].main\n    }\n  }\n}));\nconst ChipLabel = styled('span', {\n  name: 'MuiChip',\n  slot: 'Label',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      size\n    } = ownerState;\n    return [styles.label, styles[`label${capitalize(size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  paddingLeft: 12,\n  paddingRight: 12,\n  whiteSpace: 'nowrap'\n}, ownerState.size === 'small' && {\n  paddingLeft: 8,\n  paddingRight: 8\n}));\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nconst Chip = /*#__PURE__*/React.forwardRef(function Chip(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiChip'\n  });\n\n  const {\n    avatar: avatarProp,\n    className,\n    clickable: clickableProp,\n    color = 'default',\n    component: ComponentProp,\n    deleteIcon: deleteIconProp,\n    disabled = false,\n    icon: iconProp,\n    label,\n    onClick,\n    onDelete,\n    onKeyDown,\n    onKeyUp,\n    size = 'medium',\n    variant = 'filled'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const chipRef = React.useRef(null);\n  const handleRef = useForkRef(chipRef, ref);\n\n  const handleDeleteIconClick = event => {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  const handleKeyDown = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // Will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  const handleKeyUp = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  const clickable = clickableProp !== false && onClick ? true : clickableProp;\n  const small = size === 'small';\n  const component = clickable || onDelete ? ButtonBase : ComponentProp || 'div';\n\n  const ownerState = _extends({}, props, {\n    component,\n    disabled,\n    size,\n    color,\n    onDelete: !!onDelete,\n    clickable,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const moreProps = component === ButtonBase ? _extends({\n    component: ComponentProp || 'div',\n    focusVisibleClassName: classes.focusVisible\n  }, onDelete && {\n    disableRipple: true\n  }) : {};\n  let deleteIcon = null;\n\n  if (onDelete) {\n    const customClasses = clsx(color !== 'default' && (variant === 'outlined' ? classes[`deleteIconOutlinedColor${capitalize(color)}`] : classes[`deleteIconColor${capitalize(color)}`]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/_jsx(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  let avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className)\n    });\n  }\n\n  let icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className)\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('MUI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(ChipRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    disabled: clickable && disabled ? true : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef,\n    ownerState: ownerState\n  }, moreProps, other, {\n    children: [avatar || icon, /*#__PURE__*/_jsx(ChipLabel, {\n      className: clsx(classes.label),\n      ownerState: ownerState,\n      children: label\n    }), deleteIcon]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If `false`, the chip will not appear clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   * Note: this controls the UI and does not affect the onClick event.\n   */\n  clickable: PropTypes.bool,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The content of the component.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'filled'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['filled', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Chip;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardActionAreaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActionArea', slot);\n}\nconst cardActionAreaClasses = generateUtilityClasses('MuiCardActionArea', ['root', 'focusVisible', 'focusHighlight']);\nexport default cardActionAreaClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"focusVisibleClassName\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardActionAreaClasses, { getCardActionAreaUtilityClass } from './cardActionAreaClasses';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    focusHighlight: ['focusHighlight']\n  };\n  return composeClasses(slots, getCardActionAreaUtilityClass, classes);\n};\n\nconst CardActionAreaRoot = styled(ButtonBase, {\n  name: 'MuiCardActionArea',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  display: 'block',\n  textAlign: 'inherit',\n  width: '100%',\n  [`&:hover .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: theme.palette.action.hoverOpacity,\n    '@media (hover: none)': {\n      opacity: 0\n    }\n  },\n  [`&.${cardActionAreaClasses.focusVisible} .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: theme.palette.action.focusOpacity\n  }\n}));\nconst CardActionAreaFocusHighlight = styled('span', {\n  name: 'MuiCardActionArea',\n  slot: 'FocusHighlight',\n  overridesResolver: (props, styles) => styles.focusHighlight\n})(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit',\n  opacity: 0,\n  backgroundColor: 'currentcolor',\n  transition: theme.transitions.create('opacity', {\n    duration: theme.transitions.duration.short\n  })\n}));\nconst CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActionArea'\n  });\n\n  const {\n    children,\n    className,\n    focusVisibleClassName\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(CardActionAreaRoot, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [children, /*#__PURE__*/_jsx(CardActionAreaFocusHighlight, {\n      className: classes.focusHighlight,\n      ownerState: ownerState\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActionArea;","import { faCalculator, faLink, faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Box, Button, CardContent, Divider, Grid, Skeleton, Typography } from '@mui/material';\nimport i18next from 'i18next';\nimport React, { Suspense, useCallback, useContext, useEffect, useMemo, useReducer, useState } from 'react';\nimport ReactGA from 'react-ga';\nimport { Link } from 'react-router-dom';\nimport CardDark from '../Components/Card/CardDark';\nimport { CharacterSelectionModal } from '../Components/Character/CharacterSelectionModal';\nimport SortByButton from '../Components/SortByButton';\nimport ElementToggle from '../Components/ToggleButton/ElementToggle';\nimport WeaponToggle from '../Components/ToggleButton/WeaponToggle';\nimport { DatabaseContext } from '../Database/Database';\nimport { dbStorage } from '../Database/DBStorage';\nimport useCharSelectionCallback from '../ReactHooks/useCharSelectionCallback';\nimport useForceUpdate from '../ReactHooks/useForceUpdate';\nimport usePromise from '../ReactHooks/usePromise';\nimport { CharacterKey, ElementKey, WeaponTypeKey } from '../Types/consts';\nimport { characterFilterConfigs, characterSortConfigs, characterSortKeys } from '../Util/CharacterSort';\nimport { filterFunction, sortFunction } from '../Util/SortByFilters';\nimport CharacterCard from './CharacterCard';\nimport CharacterSheet from '../Data/Characters/CharacterSheet';\n\nconst initialState = () => ({\n  sortType: characterSortKeys[0],\n  ascending: false,\n  weaponType: \"\" as WeaponTypeKey | \"\",\n  element: \"\" as ElementKey | \"\",\n})\nexport type stateType = ReturnType<typeof initialState>\n\nfunction filterReducer(state: stateType, action): stateType {\n  return { ...state, ...action }\n}\nfunction filterInit(initial = initialState()): stateType {\n  return { ...initial, ...(dbStorage.get(\"CharacterDisplay.state\") ?? {}) }\n}\n\nexport default function CharacterInventory(props) {\n  const database = useContext(DatabaseContext)\n  const [state, stateDisplatch] = useReducer(filterReducer, initialState(), filterInit)\n  const [newCharacter, setnewCharacter] = useState(false)\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  //set follow, should run only once\n  useEffect(() => {\n    ReactGA.pageview('/character')\n    return database.followAnyChar(forceUpdate)\n  }, [forceUpdate, database])\n\n  const characterSheets = usePromise(CharacterSheet.getAll, [])\n  //save to db\n  useEffect(() => {\n    dbStorage.set(\"CharacterDisplay.state\", state)\n  }, [state])\n\n  const deleteCharacter = useCallback(async (cKey: CharacterKey) => {\n    const chararcterSheet = await CharacterSheet.get(cKey)\n    let name = chararcterSheet?.name\n    //use translated string\n    if (typeof name === \"object\")\n      name = i18next.t(`char_${cKey}_gen:name`)\n\n    if (!window.confirm(`Are you sure you want to remove ${name}?`)) return\n    database.removeChar(cKey)\n  }, [database])\n\n  const editCharacter = useCharSelectionCallback()\n\n  const { element, weaponType } = state\n  const sortConfigs = useMemo(() => characterSheets && characterSortConfigs(database, characterSheets), [database, characterSheets])\n  const filterConfigs = useMemo(() => characterSheets && characterFilterConfigs(characterSheets), [characterSheets])\n  const charKeyList = useMemo(() => sortConfigs && filterConfigs && dbDirty &&\n    database._getCharKeys().filter(filterFunction({ element, weaponType }, filterConfigs))\n      .sort(sortFunction(state.sortType, state.ascending, sortConfigs)),\n    [dbDirty, database, sortConfigs, state.sortType, state.ascending, element, filterConfigs, weaponType])\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\n    <CardDark sx={{ p: 2 }}>\n      <Grid container spacing={1}>\n        <Grid item>\n          <WeaponToggle sx={{ height: \"100%\" }} onChange={weaponType => stateDisplatch({ weaponType })} value={state.weaponType} size=\"small\" />\n        </Grid>\n        <Grid item flexGrow={1}>\n          <ElementToggle sx={{ height: \"100%\" }} onChange={element => stateDisplatch({ element })} value={state.element} size=\"small\" />\n        </Grid>\n        <Grid item >\n          <SortByButton sx={{ height: \"100%\" }}\n            sortKeys={characterSortKeys} value={state.sortType} onChange={sortType => stateDisplatch({ sortType })}\n            ascending={state.ascending} onChangeAsc={ascending => stateDisplatch({ ascending })} />\n        </Grid>\n      </Grid>\n    </CardDark>\n    <Grid container spacing={1}>\n      <Suspense fallback={<Grid item xs={12}><Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 5000 }} /></Grid>}>\n        <Grid item xs={12} sm={6} md={4} lg={3} >\n          <CardDark sx={{ height: \"100%\", minHeight: 400, width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n            <CardContent>\n              <Typography sx={{ textAlign: \"center\" }}>Add New Character</Typography>\n            </CardContent>\n            <CharacterSelectionModal newFirst show={newCharacter} onHide={() => setnewCharacter(false)} onSelect={editCharacter} />\n            <Box sx={{\n              flexGrow: 1,\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}\n            >\n              <Button onClick={() => setnewCharacter(true)} sx={{\n                borderRadius: \"1em\"\n              }}>\n                <Typography variant=\"h1\"><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></Typography>\n              </Button>\n            </Box>\n          </CardDark>\n        </Grid>\n        {!!charKeyList && charKeyList.map(charKey =>\n          <Grid item key={charKey} xs={12} sm={6} md={4} lg={3} >\n            <CharacterCard\n              characterKey={charKey}\n              onClick={editCharacter}\n              footer={<><Divider /><Grid container spacing={1} sx={{ py: 1, px: 2 }}>\n                <Grid item>\n                  <Button size=\"small\" component={Link} to={{\n                    pathname: \"/build\",\n                    characterKey: charKey\n                  } as any} startIcon={<FontAwesomeIcon icon={faCalculator} />}>Build</Button>\n                </Grid>\n                <Grid item flexGrow={1}>\n                  <Button size=\"small\" color=\"info\" component={Link} to={{ pathname: \"/flex\", characterKey: charKey } as any}\n                    startIcon={<FontAwesomeIcon icon={faLink} />}>Share</Button>\n                </Grid>\n                <Grid item>\n                  <Button size=\"small\" color=\"error\" startIcon={<FontAwesomeIcon icon={faTrash} />} onClick={() => deleteCharacter(charKey)}>Delete</Button>\n                </Grid>\n              </Grid></>}\n            />\n          </Grid>)}\n      </Suspense>\n    </Grid>\n  </Box>\n}\n","import { faCalculator, faLink } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Box, Button, Grid, Skeleton } from '@mui/material';\nimport React, { lazy } from 'react';\nimport { Redirect, useHistory, useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport CloseButton from '../Components/CloseButton';\nimport InfoComponent from '../Components/InfoComponent';\nimport { allCharacterKeys, CharacterKey } from '../Types/consts';\nconst InfoDisplay = React.lazy(() => import('./InfoDisplay'));\nconst CharacterDisplayCard = lazy(() => import('./CharacterDisplayCard'))\nexport default function CharacterDisplay() {\n  const history = useHistory()\n  let { characterKey } = useParams<{ characterKey?: CharacterKey }>();\n  const invalidKey = !allCharacterKeys.includes(characterKey as any ?? \"\")\n  if (invalidKey)\n    return <Redirect to=\"/character\" />\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\n    <InfoComponent\n      pageKey=\"characterPage\"\n      modalTitle=\"Character Page Guide\"\n      text={[\"Every character will be tested with in-game numbers for maximum accuracy.\",\n        \"You can see the details of the calculations of every number.\",\n        \"You need to manually enable auto infusion for characters like Choungyun or Noelle.\",\n        \"You can change character constellations in both \\\"Character\\\" tab and in \\\"Talents\\\" tab.\",\n        \"Modified character Stats are bolded.\"]}\n    >\n      <InfoDisplay />\n    </InfoComponent>\n    {characterKey && <React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}>\n      <CharacterDisplayCard characterKey={characterKey} onClose={() => history.push(\"/character\")}\n        footer={<CharDisplayFooter onClose={() => history.push(\"/character\")} characterKey={characterKey} />}\n      />\n    </React.Suspense>}\n  </Box>\n}\nfunction CharDisplayFooter({ onClose, characterKey }) {\n  return <Grid container spacing={1}>\n    <Grid item>\n      <Button component={Link} to={{\n        pathname: \"/build\",\n        characterKey\n      } as any}\n        startIcon={<FontAwesomeIcon icon={faCalculator} />}\n      >Generate Builds</Button>\n    </Grid>\n    <Grid item flexGrow={1}>\n      <Button color=\"info\" component={Link} to={{ pathname: \"/flex\", characterKey } as any}\n        startIcon={<FontAwesomeIcon icon={faLink} />}\n      >Share Character</Button>\n    </Grid>\n    <Grid item xs=\"auto\">\n      <CloseButton large onClick={onClose} />\n    </Grid>\n  </Grid>\n}\n","import { Route, Switch, useRouteMatch } from \"react-router\";\nimport CharacterInventory from \"./CharacterInventory\";\nimport CharacterDisplay from \"./CharacterDisplay\";\n\nexport default function CharacterRouter() {\n  let match = useRouteMatch();\n  return < Switch >\n    <Route path={`${match.path}/:characterKey`}>\n      <CharacterDisplay />\n    </Route>\n    <Route path={match.path}>\n      <CharacterInventory />\n    </Route>\n  </Switch >\n}"],"sourceRoot":""}